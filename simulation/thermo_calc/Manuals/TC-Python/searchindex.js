Search.setIndex({"docnames": ["api_reference", "architecture", "best_practices", "calculation_modules/batch_equilibrium", "calculation_modules/diffusion", "calculation_modules/material_to_material", "calculation_modules/precipitation", "calculation_modules/process_metallurgy", "calculation_modules/process_metallurgy_modules/base", "calculation_modules/process_metallurgy_modules/equilibrium", "calculation_modules/process_metallurgy_modules/process", "calculation_modules/propertymodel", "calculation_modules/scheil", "calculation_modules/single_equilibrium", "calculation_modules/step_or_map_diagrams", "calculations", "environment_variables", "high_level_modules/abstract_base", "high_level_modules/entities", "high_level_modules/exceptions", "high_level_modules/propertymodel_sdk", "high_level_modules/quantity_factory", "high_level_modules/server", "high_level_modules/system", "high_level_modules/utils", "index", "installation", "troubleshooting"], "filenames": ["api_reference.rst", "architecture.rst", "best_practices.rst", "calculation_modules/batch_equilibrium.rst", "calculation_modules/diffusion.rst", "calculation_modules/material_to_material.rst", "calculation_modules/precipitation.rst", "calculation_modules/process_metallurgy.rst", "calculation_modules/process_metallurgy_modules/base.rst", "calculation_modules/process_metallurgy_modules/equilibrium.rst", "calculation_modules/process_metallurgy_modules/process.rst", "calculation_modules/propertymodel.rst", "calculation_modules/scheil.rst", "calculation_modules/single_equilibrium.rst", "calculation_modules/step_or_map_diagrams.rst", "calculations.rst", "environment_variables.rst", "high_level_modules/abstract_base.rst", "high_level_modules/entities.rst", "high_level_modules/exceptions.rst", "high_level_modules/propertymodel_sdk.rst", "high_level_modules/quantity_factory.rst", "high_level_modules/server.rst", "high_level_modules/system.rst", "high_level_modules/utils.rst", "index.rst", "installation.rst", "troubleshooting.rst"], "titles": ["API Reference", "Architecture overview", "Best Practices", "Module \u201cbatch_equilibrium\u201d", "Module \u201cdiffusion\u201d", "Module \u201cmaterial_to_material\u201d", "Module \u201cprecipitation\u201d", "Package \u201cprocess_metallurgy\u201d", "Module \u201cbase\u201d", "Module \u201cequilibrium\u201d", "Module \u201cprocess\u201d", "Module \u201cpropertymodel\u201d", "Module \u201cscheil\u201d", "Module \u201csingle_equilibrium\u201d", "Module \u201cstep_or_map_diagrams\u201d", "Calculations", "Mac OS: Setting Environment Variables", "Module \u201cabstract_base\u201d", "Module \u201centities\u201d", "Module \u201cexceptions\u201d", "Module \u201cpropertymodel_sdk\u201d", "Module \u201cquantity_factory\u201d", "Module \u201cserver\u201d", "Module \u201csystem\u201d", "Module \u201cutils\u201d", "TC-Python API reference documentation", "Installation Guide", "Troubleshooting"], "terms": {"calcul": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25], "modul": [0, 7, 15, 25, 26], "single_equilibrium": [0, 2, 15, 22, 25], "abstractsingleequilibriumcalcul": [0, 5, 13, 15, 25], "disable_global_minim": [0, 1, 3, 4, 5, 12, 13, 14, 15, 25], "enable_global_minim": [0, 3, 4, 5, 12, 13, 14, 15, 25], "get_compon": [0, 3, 5, 7, 9, 10, 13, 14, 15, 23, 25], "get_gibbs_energy_addition_for": [0, 3, 5, 13, 14, 15, 25], "get_system_data": [0, 3, 4, 5, 6, 11, 12, 13, 14, 15, 17, 23, 25], "run_poly_command": [0, 3, 5, 13, 14, 15, 25], "set_component_to_ent": [0, 3, 5, 13, 15, 25], "set_component_to_suspend": [0, 3, 5, 13, 15, 25], "set_gibbs_energy_addition_for": [0, 3, 5, 13, 14, 15, 25], "set_phase_to_dorm": [0, 3, 5, 13, 14, 15, 25], "set_phase_to_ent": [0, 3, 5, 13, 14, 15, 25], "set_phase_to_fix": [0, 2, 3, 5, 13, 14, 15, 25], "set_phase_to_suspend": [0, 3, 5, 13, 14, 15, 25], "with_opt": [0, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 25], "with_reference_st": [0, 3, 4, 5, 13, 14, 15, 25], "with_system_modif": [0, 3, 4, 5, 6, 11, 12, 13, 14, 15, 17, 23, 25], "singleequilibriumcalcul": [0, 2, 3, 5, 13, 15, 23, 25], "bookmark_st": [0, 2, 13, 15, 25], "calculate_with_st": [0, 1, 13, 15, 25], "get_interfacial_energi": [0, 13, 15, 25], "remove_all_condit": [0, 3, 11, 13, 14, 15, 25], "remove_condit": [0, 2, 3, 13, 14, 15, 25], "set_condit": [0, 1, 2, 3, 11, 13, 14, 15, 25], "set_state_to_bookmark": [0, 2, 13, 15, 25], "singleequilibriumopt": [0, 3, 5, 8, 13, 15, 25], "disable_approximate_driving_force_for_metastable_phas": [0, 7, 8, 12, 13, 14, 15, 25], "disable_control_step_size_during_minim": [0, 7, 8, 12, 13, 14, 15, 25], "disable_force_positive_definite_phase_hessian": [0, 7, 8, 12, 13, 14, 15, 25], "enable_approximate_driving_force_for_metastable_phas": [0, 7, 8, 12, 13, 14, 15, 25], "enable_control_step_size_during_minim": [0, 7, 8, 12, 13, 14, 15, 25], "enable_force_positive_definite_phase_hessian": [0, 7, 8, 12, 13, 14, 15, 25], "set_global_minimization_max_grid_point": [0, 7, 8, 12, 13, 14, 15, 25], "set_max_no_of_iter": [0, 7, 8, 12, 13, 14, 15, 25], "set_required_accuraci": [0, 7, 8, 12, 13, 14, 15, 25], "set_smallest_fract": [0, 7, 8, 12, 13, 14, 15, 25], "singleequilibriumresult": [0, 1, 5, 11, 13, 15, 20, 22, 25], "change_pressur": [0, 5, 13, 15, 25], "change_temperatur": [0, 5, 13, 15, 25], "get_condit": [0, 2, 5, 13, 15, 25], "get_phas": [0, 5, 13, 15, 25], "get_stable_phas": [0, 1, 2, 5, 7, 9, 10, 12, 13, 15, 25], "get_value_of": [0, 1, 2, 5, 7, 9, 10, 11, 13, 15, 25], "save_to_disk": [0, 1, 2, 4, 5, 6, 11, 12, 13, 14, 15, 25], "singleequilibriumtempresult": [0, 1, 13, 15, 19, 25], "batch_equilibrium": [0, 15, 25], "batchequilibriumcalcul": [0, 3, 15, 23, 25], "set_conditions_for_equilibria": [0, 1, 3, 15, 25], "batchequilibriumresult": [0, 3, 15, 25], "get_values_of": [0, 1, 3, 4, 5, 12, 14, 15, 25], "invalid": [0, 2, 3, 15, 17, 19, 25], "precipit": [0, 2, 4, 13, 15, 23, 25], "fixedgrains": [0, 6, 15, 25], "set_grain_aspect_ratio": [0, 6, 15, 25], "graingrowth": [0, 6, 15, 25], "disable_zener_pin": [0, 6, 15, 25], "enable_zener_pin": [0, 6, 15, 25], "set_grain_boundary_energi": [0, 6, 15, 25], "set_grain_boundary_mobility_activation_energi": [0, 6, 15, 25], "set_grain_boundary_mobility_pre_factor": [0, 6, 15, 25], "graingrowthmodel": [0, 6, 15, 25], "fixed_grain_s": [0, 6, 15, 25], "grain_growth": [0, 6, 15, 25], "grainsizedistribut": [0, 6, 15, 25], "add_radius_and_number_dens": [0, 6, 15, 25], "growthratemodel": [0, 6, 15, 25], "advanc": [0, 2, 4, 5, 6, 14, 15, 23, 25, 26], "gener": [0, 1, 2, 4, 5, 6, 10, 12, 13, 14, 15, 19, 20, 21, 25], "nple": [0, 6, 15, 25], "para_eq": [0, 6, 15, 25], "pe_automat": [0, 6, 15, 25], "simplifi": [0, 1, 6, 13, 15, 18, 25], "matrixphas": [0, 1, 6, 15, 25], "add_precipitate_phas": [0, 1, 6, 15, 25], "set_dislocation_dens": [0, 6, 15, 25], "set_mobility_adjust": [0, 6, 15, 25], "set_mobility_enhancement_activation_energi": [0, 6, 15, 25], "set_mobility_enhancement_prefactor": [0, 6, 15, 25], "set_molar_volum": [0, 6, 15, 25], "with_elastic_properties_cub": [0, 6, 15, 25], "with_elastic_properties_disregard": [0, 6, 15, 25], "with_elastic_properties_isotrop": [0, 6, 15, 25], "with_grain_growth_model": [0, 6, 15, 25], "numericalparamet": [0, 6, 15, 25], "set_max_overall_volume_chang": [0, 6, 15, 25], "set_max_radius_points_per_magnitud": [0, 6, 15, 25], "set_max_rel_change_critical_radiu": [0, 6, 15, 25], "set_max_rel_change_nucleation_rate_log": [0, 6, 15, 25], "set_max_rel_radius_chang": [0, 6, 15, 25], "set_max_rel_solute_composition_chang": [0, 6, 15, 25], "set_max_time_step": [0, 6, 7, 10, 15, 25], "set_max_time_step_during_h": [0, 6, 15, 25], "set_max_volume_fraction_dissolve_time_step": [0, 6, 15, 25], "set_min_radius_nucleus_as_particl": [0, 6, 15, 25], "set_min_radius_points_per_magnitud": [0, 6, 15, 25], "set_radius_points_per_magnitud": [0, 6, 15, 25], "set_rel_radius_change_class_collis": [0, 6, 15, 25], "particlesizedistribut": [0, 6, 15, 25], "set_initial_composit": [0, 6, 15, 25], "set_volume_fraction_of_phase_typ": [0, 6, 15, 25], "set_volume_fraction_of_phase_valu": [0, 6, 15, 25], "precipitateelasticproperti": [0, 6, 15, 25], "set_e11": [0, 6, 15, 25], "set_e12": [0, 6, 15, 25], "set_e13": [0, 6, 15, 25], "set_e22": [0, 6, 15, 25], "set_e23": [0, 6, 15, 25], "set_e33": [0, 6, 15, 25], "precipitatemorphologi": [0, 6, 15, 25], "cuboid": [0, 6, 15, 25], "needl": [0, 6, 15, 25], "plate": [0, 6, 15, 25], "sphere": [0, 4, 6, 15, 25], "precipitatephas": [0, 1, 6, 15, 25], "disable_calculate_aspect_ratio_from_elastic_energi": [0, 6, 15, 25], "disable_driving_force_approxim": [0, 6, 15, 25], "enable_calculate_aspect_ratio_from_elastic_energi": [0, 6, 15, 25], "enable_driving_force_approxim": [0, 6, 15, 25], "set_alia": [0, 6, 15, 25], "set_aspect_ratio_valu": [0, 6, 15, 25], "set_gibbs_energy_addit": [0, 6, 15, 25], "set_interfacial_energi": [0, 6, 15, 25], "set_interfacial_energy_estimation_prefactor": [0, 6, 15, 25], "set_nucleation_at_disloc": [0, 6, 15, 25], "set_nucleation_at_grain_boundari": [0, 6, 15, 25], "set_nucleation_at_grain_corn": [0, 6, 15, 25], "set_nucleation_at_grain_edg": [0, 6, 15, 25], "set_nucleation_in_bulk": [0, 6, 15, 25], "set_phase_boundary_mobl": [0, 6, 15, 25], "set_precipitate_morphologi": [0, 6, 15, 25], "set_trans_interface_mobility_adjust": [0, 6, 15, 25], "set_transformation_strain_calculation_opt": [0, 6, 15, 25], "set_zener_pinning_paramet": [0, 6, 15, 25], "with_elastic_properti": [0, 6, 15, 25], "with_growth_rate_model": [0, 6, 15, 25], "with_particle_size_distribut": [0, 6, 15, 25], "precipitationcctcalcul": [0, 6, 15, 23, 25], "set_composit": [0, 1, 2, 4, 6, 11, 12, 15, 25], "set_composition_unit": [0, 5, 6, 11, 12, 15, 25], "set_cooling_r": [0, 6, 12, 15, 25], "set_max_temperatur": [0, 6, 15, 25], "set_min_temperatur": [0, 6, 15, 25], "stop_at_volume_fraction_of_phas": [0, 6, 15, 25], "with_matrix_phas": [0, 1, 6, 15, 25], "with_numerical_paramet": [0, 6, 15, 25], "precipitationcalculationresult": [0, 6, 15, 25], "precipitationcalculationsingleresult": [0, 6, 15, 22, 25], "get_aspect_ratio_distribution_for_particle_length_of": [0, 6, 15, 25], "get_aspect_ratio_distribution_for_radius_of": [0, 6, 15, 25], "get_critical_radius_of": [0, 6, 15, 25], "get_cubic_factor_distribution_for_particle_length_of": [0, 6, 15, 25], "get_cubic_factor_distribution_for_radius_of": [0, 6, 15, 25], "get_driving_force_of": [0, 6, 15, 25], "get_grain_critical_radiu": [0, 6, 15, 25], "get_grain_mean_radiu": [0, 6, 15, 25], "get_grain_number_dens": [0, 6, 15, 25], "get_grain_number_density_distribution_for_length": [0, 6, 15, 25], "get_grain_number_density_distribution_for_radiu": [0, 6, 15, 25], "get_grain_size_distribut": [0, 6, 15, 25], "get_matrix_composition_in_mole_fraction_of": [0, 6, 15, 25], "get_matrix_composition_in_weight_fraction_of": [0, 6, 15, 25], "get_mean_aspect_ratio_of": [0, 6, 15, 25], "get_mean_cubic_factor_of": [0, 6, 15, 25], "get_mean_particle_length_of": [0, 6, 15, 25], "get_mean_radius_of": [0, 1, 6, 15, 25], "get_normalized_grain_size_distribut": [0, 6, 15, 25], "get_normalized_number_density_distribution_of": [0, 6, 15, 25], "get_nucleation_rate_of": [0, 6, 15, 25], "get_number_density_distribution_for_particle_length_of": [0, 6, 15, 25], "get_number_density_distribution_for_radius_of": [0, 6, 15, 25], "get_number_density_of": [0, 6, 15, 25], "get_precipitate_composition_in_mole_fraction_of": [0, 6, 15, 25], "get_precipitate_composition_in_weight_fraction_of": [0, 6, 15, 25], "get_size_distribution_for_particle_length_of": [0, 6, 15, 25], "get_size_distribution_for_radius_of": [0, 6, 15, 25], "get_volume_fraction_of": [0, 6, 15, 25], "precipitationcalculationtttorcctresult": [0, 6, 15, 22, 25], "get_result_for_precipit": [0, 6, 15, 25], "precipitationisothermalcalcul": [0, 6, 15, 23, 25], "set_simulation_tim": [0, 1, 2, 4, 6, 15, 25], "set_temperatur": [0, 1, 2, 4, 6, 7, 9, 11, 15, 25], "precipitationnonisothermalcalcul": [0, 6, 15, 23, 25], "with_temperature_profil": [0, 4, 6, 15, 25], "precipitationtttcalcul": [0, 6, 15, 23, 25], "set_max_annealing_tim": [0, 6, 15, 25], "set_temperature_step": [0, 6, 12, 15, 25], "stop_at_percent_of_equilibrium_fract": [0, 6, 15, 25], "transformationstraincalculationopt": [0, 6, 15, 25], "calculate_from_molar_volum": [0, 6, 15, 25], "disregard": [0, 6, 15, 25], "user_defin": [0, 6, 15, 25], "volumefractionofphasetyp": [0, 6, 15, 25], "volume_fract": [0, 6, 15, 24, 25], "volume_perc": [0, 6, 9, 10, 15, 24, 25], "scheil": [0, 15, 21, 22, 23, 25], "calculatesecondarydendritearmspac": [0, 12, 15, 25], "disable_delta_ferrite_to_austenite_transit": [0, 12, 15, 25], "enable_delta_ferrite_to_austenite_transit": [0, 12, 15, 25], "set_c": [0, 12, 15, 25], "set_fast_diffusing_el": [0, 12, 15, 25], "set_n": [0, 12, 15, 25], "set_primary_phasenam": [0, 12, 15, 25], "constantsecondarydendritearmspac": [0, 12, 15, 25], "scheilbackdiffus": [0, 12, 15, 25], "calculate_secondary_dendrite_arm_spac": [0, 12, 15, 25], "constant_secondary_dendrite_arm_spac": [0, 12, 15, 25], "scheilcalcul": [0, 12, 15, 23, 25], "set_start_temperatur": [0, 12, 15, 25], "with_calculation_typ": [0, 12, 15, 25], "scheilcalculationresult": [0, 12, 15, 21, 22, 25], "get_solid_phase_with_largest_mole_fract": [0, 12, 15, 25], "get_values_grouped_by_quantity_of": [0, 1, 5, 12, 14, 15, 25], "get_values_grouped_by_stable_phases_of": [0, 1, 5, 12, 14, 15, 25], "scheilcalculationtyp": [0, 12, 15, 25], "scheil_back_diffus": [0, 12, 15, 25], "scheil_class": [0, 12, 15, 25], "scheil_solute_trap": [0, 12, 15, 25], "scheilclass": [0, 12, 15, 25], "scheilopt": [0, 12, 15, 25], "calculate_from_ga": [0, 12, 15, 25], "calculate_from_liquidu": [0, 12, 15, 25], "calculate_from_start_temperatur": [0, 12, 15, 25], "calculate_to_end_of_scheil": [0, 12, 15, 25], "calculate_to_temperature_below_solidu": [0, 12, 15, 25], "disable_equilibrium_solidification_calcul": [0, 12, 15, 25], "disable_evaporation_property_calcul": [0, 12, 15, 25], "enable_equilibrium_solidification_calcul": [0, 12, 15, 25], "enable_evaporation_property_calcul": [0, 12, 15, 25], "set_gas_phas": [0, 12, 15, 25], "set_global_minimization_test_interv": [0, 12, 14, 15, 25], "set_liquid_phas": [0, 12, 15, 25], "terminate_on_fraction_of_liquid_phas": [0, 12, 15, 25], "terminate_on_temperatur": [0, 12, 15, 25], "scheilsolutetrap": [0, 12, 15, 25], "set_angl": [0, 12, 15, 25], "set_scanning_spe": [0, 12, 15, 25], "step_or_map_diagram": [0, 15, 25], "abstractaxistyp": [0, 14, 15, 25], "abstractphasediagramcalcul": [0, 5, 14, 15, 25], "add_initial_equilibrium": [0, 5, 14, 15, 25], "dont_keep_default_equilibria": [0, 5, 14, 15, 25], "keep_default_equilibria": [0, 5, 14, 15, 25], "remove_all_initial_equilibria": [0, 5, 14, 15, 25], "abstractpropertydiagramcalcul": [0, 5, 14, 15, 25], "disable_step_separate_phas": [0, 5, 14, 15, 25], "enable_step_separate_phas": [0, 5, 14, 15, 25], "axistyp": [0, 14, 15, 25], "linear": [0, 1, 2, 4, 14, 15, 25], "logarithm": [0, 4, 6, 8, 14, 15, 25], "calculationaxi": [0, 1, 14, 15, 25], "set_max": [0, 1, 14, 15, 25], "set_min": [0, 1, 14, 15, 25], "set_start_at": [0, 14, 15, 25], "with_axis_typ": [0, 14, 15, 25], "direct": [0, 4, 12, 14, 15, 25], "decrease_first_axi": [0, 14, 15, 25], "decrease_second_axi": [0, 14, 15, 25], "increase_first_axi": [0, 14, 15, 25], "increase_second_axi": [0, 14, 15, 25], "initialequilibrium": [0, 5, 14, 15, 25], "add_equilibria_at_all_phase_chang": [0, 14, 15, 25], "add_equilibria_at_first_phase_chang": [0, 14, 15, 25], "set_direct": [0, 14, 15, 25], "get_typ": [0, 4, 14, 15, 18, 20, 25], "set_max_step_s": [0, 14, 15, 25], "set_min_nr_of_step": [0, 14, 15, 25], "set_scale_factor": [0, 14, 15, 25], "phasediagramcalcul": [0, 5, 14, 15, 23, 25], "with_first_axi": [0, 1, 5, 14, 15, 25], "with_second_axi": [0, 1, 5, 14, 15, 25], "phasediagramopt": [0, 5, 14, 15, 25], "dont_use_auto_start_point": [0, 14, 15, 25], "dont_use_inside_mesh_point": [0, 14, 15, 25], "set_no_of_mesh_along_axi": [0, 14, 15, 25], "use_auto_start_point": [0, 14, 15, 25], "use_inside_mesh_point": [0, 14, 15, 25], "phasediagramresult": [0, 5, 14, 15, 22, 25], "add_coordinate_for_phase_label": [0, 5, 14, 15, 25], "remove_phase_label": [0, 5, 14, 15, 25], "set_phase_name_styl": [0, 5, 14, 15, 25], "phasediagramresultvalu": [0, 5, 14, 15, 25], "get_invari": [0, 14, 15, 25], "get_lin": [0, 14, 15, 25], "get_phase_label": [0, 14, 15, 25], "get_tie_lin": [0, 14, 15, 25], "phaselabel": [0, 14, 15, 25], "get_text": [0, 14, 15, 25], "get_x": [0, 14, 15, 24, 25], "get_i": [0, 14, 15, 24, 25], "phasenamestyl": [0, 5, 14, 15, 25], "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "constitution_descript": [0, 14, 15, 25], "none": [0, 1, 2, 5, 14, 15, 20, 21, 22, 25, 26, 27], "ordering_descript": [0, 14, 15, 25], "propertydiagramcalcul": [0, 14, 15, 23, 25], "with_axi": [0, 1, 5, 14, 15, 25], "propertydiagramopt": [0, 5, 14, 15, 25], "propertydiagramresult": [0, 5, 14, 15, 22, 25], "diffus": [0, 2, 6, 12, 15, 18, 21, 22, 23, 24, 25], "abstractboundarycondit": [0, 4, 15, 25], "abstractcalculatedgrid": [0, 4, 15, 25], "abstractelementprofil": [0, 4, 15, 25], "abstractgrid": [0, 4, 15, 25], "abstractsolv": [0, 4, 15, 25], "activityfluxfunct": [0, 4, 15, 25], "set_flux_funct": [0, 4, 15, 25], "automaticsolv": [0, 4, 15, 25], "set_flux_balance_equation_accuraci": [0, 4, 15, 25], "set_tieline_search_variable_to_act": [0, 4, 15, 25], "set_tieline_search_variable_to_potenti": [0, 4, 15, 25], "boundarycondit": [0, 1, 4, 15, 25], "activity_flux_funct": [0, 4, 15, 25], "closed_system": [0, 4, 15, 25], "fix_flux_valu": [0, 4, 15, 25], "fixed_composit": [0, 4, 15, 25], "mixed_zero_flux_and_act": [0, 1, 4, 15, 25], "calculatedgrid": [0, 1, 2, 4, 15, 25], "double_geometr": [0, 4, 15, 25], "geometr": [0, 4, 15, 25], "classicsolv": [0, 4, 15, 25], "closedsystem": [0, 4, 15, 25], "compositionprofil": [0, 1, 2, 4, 15, 25], "add": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 20, 23, 24, 25, 26], "constantprofil": [0, 4, 15, 25], "continueddiffusioncalcul": [0, 1, 4, 15, 25], "with_left_boundary_condit": [0, 1, 4, 15, 25], "with_right_boundary_condit": [0, 4, 15, 25], "with_solv": [0, 4, 15, 25], "with_timestep_control": [0, 4, 15, 25], "diffusioncalculationresult": [0, 4, 15, 22, 25], "get_mass_fraction_at_lower_interfac": [0, 4, 15, 25], "get_mass_fraction_at_upper_interfac": [0, 4, 15, 25], "get_mass_fraction_of_component_at_tim": [0, 1, 2, 4, 15, 25], "get_mass_fraction_of_phase_at_tim": [0, 4, 15, 25], "get_mole_fraction_at_lower_interfac": [0, 4, 15, 25], "get_mole_fraction_at_upper_interfac": [0, 4, 15, 25], "get_mole_fraction_of_component_at_tim": [0, 2, 4, 15, 25], "get_mole_fraction_of_phase_at_tim": [0, 4, 15, 25], "get_position_of_lower_boundary_of_region": [0, 4, 15, 25], "get_position_of_upper_boundary_of_region": [0, 4, 15, 25], "get_region": [0, 4, 15, 25], "get_time_step": [0, 4, 15, 25], "get_total_mass_fraction_of_compon": [0, 4, 15, 25], "get_total_mass_fraction_of_component_in_phas": [0, 4, 15, 25], "get_total_mass_fraction_of_phas": [0, 4, 15, 25], "get_total_mole_fraction_of_compon": [0, 4, 15, 25], "get_total_mole_fraction_of_component_in_phas": [0, 4, 15, 25], "get_total_mole_fraction_of_phas": [0, 4, 15, 25], "get_total_volume_fraction_of_phas": [0, 4, 15, 25], "get_velocity_of_lower_boundary_of_region": [0, 4, 15, 25], "get_velocity_of_upper_boundary_of_region": [0, 4, 15, 25], "get_width_of_region": [0, 4, 15, 25], "with_continued_calcul": [0, 1, 4, 15, 25], "diffusionisothermalcalcul": [0, 4, 15, 23, 25], "add_console_command": [0, 4, 15, 25], "add_region": [0, 1, 2, 4, 15, 25], "remove_all_console_command": [0, 4, 15, 25], "remove_all_region": [0, 4, 15, 25], "with_cylindrical_geometri": [0, 4, 15, 25], "with_planar_geometri": [0, 4, 15, 25], "with_spherical_geometri": [0, 4, 15, 25], "diffusionnonisothermalcalcul": [0, 4, 15, 23, 25], "doublegeometricgrid": [0, 4, 15, 25], "get_lower_geometrical_factor": [0, 4, 15, 25], "get_no_of_point": [0, 4, 15, 25], "get_upper_geometrical_factor": [0, 4, 15, 25], "set_lower_geometrical_factor": [0, 4, 15, 25], "set_no_of_point": [0, 1, 2, 4, 15, 25], "set_upper_geometrical_factor": [0, 4, 15, 25], "elementprofil": [0, 1, 2, 4, 15, 25], "constant": [0, 3, 4, 5, 6, 10, 12, 13, 14, 15, 24, 25], "funct": [0, 4, 15, 25], "step": [0, 1, 4, 5, 6, 8, 9, 10, 12, 14, 15, 20, 21, 23, 25, 27], "fixfluxvalu": [0, 4, 15, 25], "set_flux": [0, 4, 15, 25], "fixedcomposit": [0, 4, 15, 25], "functionprofil": [0, 4, 15, 25], "generallowerhashinshtrikman": [0, 4, 15, 25], "generallowerhashinshtrikmanexcludedphas": [0, 4, 15, 25], "generalupperhashinshtrikman": [0, 4, 15, 25], "generalupperhashinshtrikmanexcludedphas": [0, 4, 15, 25], "geometricgrid": [0, 4, 15, 25], "get_geometrical_factor": [0, 4, 15, 25], "set_geometrical_factor": [0, 4, 15, 25], "gridpoint": [0, 4, 15, 25], "add_composit": [0, 4, 15, 25], "hashinshtrikmanboundmajor": [0, 4, 15, 25], "hashinshtrikmanboundmajorityexcludedphas": [0, 4, 15, 25], "hashinshtrikmanboundprescrib": [0, 4, 15, 25], "hashinshtrikmanboundprescribedexcludedphas": [0, 4, 15, 25], "homogenizationfunct": [0, 4, 15, 25], "general_lower_hashin_shtrikman": [0, 4, 15, 25], "general_upper_hashin_shtrikman": [0, 4, 15, 25], "hashin_shtrikman_bound_major": [0, 4, 15, 25], "inverse_rule_of_mixtur": [0, 4, 15, 25], "rule_of_mixtur": [0, 4, 15, 25], "general_lower_hashin_shtrikman_excluded_phas": [0, 4, 15, 25], "general_upper_hashin_shtrikman_excluded_phas": [0, 4, 15, 25], "hashin_shtrikman_bound_majority_excluded_phas": [0, 4, 15, 25], "hashin_shtrikman_bound_prescrib": [0, 4, 15, 25], "hashin_shtrikman_bound_prescribed_excluded_phas": [0, 4, 15, 25], "inverse_rule_of_mixtures_excluded_phas": [0, 4, 15, 25], "labyrinth_factor_f": [0, 4, 15, 25], "labyrinth_factor_f2": [0, 4, 15, 25], "rule_of_mixtures_excluded_phas": [0, 4, 15, 25], "homogenizationsolv": [0, 4, 15, 25], "disable_interpolation_schem": [0, 4, 15, 25], "set_fraction_of_free_memory_to_us": [0, 4, 15, 25], "set_memory_to_us": [0, 4, 15, 25], "with_funct": [0, 4, 15, 25], "with_linear_interpolation_schem": [0, 4, 15, 25], "with_logarithmic_interpolation_schem": [0, 4, 15, 25], "inverseruleofmixtur": [0, 4, 15, 25], "inverseruleofmixturesexcludedphas": [0, 4, 15, 25], "labyrinthfactorf": [0, 4, 15, 25], "labyrinthfactorf2": [0, 4, 15, 25], "lineargrid": [0, 4, 15, 25], "linearprofil": [0, 4, 15, 25], "mixedzerofluxandact": [0, 4, 15, 25], "set_activity_for_el": [0, 1, 4, 15, 25], "set_zero_flux_for_el": [0, 4, 15, 25], "option": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 25, 26], "disable_forced_starting_values_in_equilibrium_calcul": [0, 4, 15, 25], "disable_save_results_to_fil": [0, 4, 15, 25], "enable_automatic_forced_starting_values_in_eq_calcul": [0, 4, 15, 25], "enable_forced_starting_values_in_equilibrium_calcul": [0, 4, 15, 25], "enable_save_results_to_fil": [0, 4, 15, 25], "enable_time_integration_method_automat": [0, 4, 15, 25], "enable_time_integration_method_euler_backward": [0, 4, 15, 25], "enable_time_integration_method_trapezoid": [0, 4, 15, 25], "set_default_driving_force_for_phases_allowed_to_form_at_interf": [0, 4, 15, 25], "pointbypointgrid": [0, 4, 15, 25], "add_point": [0, 4, 15, 25], "region": [0, 1, 2, 4, 5, 12, 14, 15, 21, 24, 25], "add_phas": [0, 1, 2, 4, 15, 25], "add_phase_allowed_to_form_at_left_interfac": [0, 4, 15, 25], "add_phase_allowed_to_form_at_right_interfac": [0, 4, 15, 25], "remove_all_phas": [0, 4, 15, 25], "set_width": [0, 1, 2, 4, 15, 25], "with_composition_profil": [0, 1, 2, 4, 15, 25], "with_grid": [0, 1, 2, 4, 15, 25], "with_point_by_point_grid_containing_composit": [0, 4, 15, 25], "ruleofmixtur": [0, 4, 15, 25], "ruleofmixturesexcludedphas": [0, 4, 15, 25], "simulationtim": [0, 4, 15, 25], "first": [0, 1, 2, 4, 5, 8, 12, 14, 15, 17, 20, 22, 24, 25, 26], "last": [0, 4, 15, 20, 21, 23, 25], "solver": [0, 4, 15, 25], "automat": [0, 1, 2, 4, 5, 6, 10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 25, 26, 27], "classic": [0, 4, 11, 12, 15, 25], "homogen": [0, 4, 15, 25], "stepprofil": [0, 4, 15, 25], "timestepcontrol": [0, 4, 15, 25], "disable_check_interface_posit": [0, 4, 15, 25], "enable_automatic_check_interface_posit": [0, 4, 15, 25], "enable_check_interface_posit": [0, 4, 15, 25], "set_initial_time_step": [0, 4, 7, 10, 15, 25], "set_max_absolute_error": [0, 4, 15, 25], "set_max_relative_error": [0, 4, 15, 25], "set_max_timestep_allowed_as_percent_of_simulation_tim": [0, 4, 15, 25], "set_max_timestep_increase_factor": [0, 4, 15, 25], "set_smallest_time_step_allow": [0, 4, 15, 25], "unit": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 22, 23, 24, 25], "mass_fract": [0, 4, 9, 10, 15, 24, 25], "mass_perc": [0, 4, 5, 9, 10, 15, 24, 25], "mole_fract": [0, 4, 15, 24, 25], "mole_perc": [0, 1, 4, 6, 11, 12, 15, 24, 25], "u_fract": [0, 4, 15, 25], "propertymodel": [0, 1, 2, 15, 20, 25], "propertymodelcalcul": [0, 11, 15, 23, 25], "add_poly_command": [0, 7, 9, 11, 15, 25], "get_argument_default": [0, 11, 15, 25], "get_argument_descript": [0, 11, 15, 25], "get_argu": [0, 1, 11, 15, 25], "get_dynamic_argu": [0, 11, 15, 25], "get_model_descript": [0, 11, 15, 25], "get_model_parameter_valu": [0, 11, 15, 25], "get_model_paramet": [0, 11, 15, 25], "invoke_dynamic_argu": [0, 11, 15, 25], "remove_all_poly_command": [0, 11, 15, 25], "remove_dependent_el": [0, 11, 15, 25], "set_argu": [0, 1, 11, 15, 25], "set_dependent_el": [0, 11, 15, 25], "set_model_paramet": [0, 11, 15, 20, 25], "propertymodelresult": [0, 11, 15, 22, 25], "get_result_quant": [0, 1, 11, 15, 25], "get_result_quantity_descript": [0, 11, 15, 25], "get_single_equilibrium_result": [0, 11, 15, 25], "material_to_materi": [0, 15, 25], "abstractconstantcondit": [0, 5, 15, 25], "abstractmaterialtomaterialcalculationaxi": [0, 5, 15, 25], "constantcondit": [0, 1, 5, 15, 25], "fraction_of_material_b": [0, 1, 5, 15, 25], "temperatur": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 24, 25], "fractionofmaterialbaxi": [0, 5, 15, 25], "fractionofmaterialbcondit": [0, 5, 15, 25], "materialtomaterialcalculationaxi": [0, 1, 5, 15, 25], "materialtomaterialcalculationcontain": [0, 5, 15, 23, 25], "with_phase_diagram_calcul": [0, 1, 5, 15, 23, 25], "with_property_diagram_calcul": [0, 1, 5, 15, 23, 25], "with_single_equilibrium_calcul": [0, 1, 2, 5, 15, 23, 25], "materialtomaterialphasediagramcalcul": [0, 5, 15, 25], "set_act": [0, 1, 5, 15, 25], "set_material_a": [0, 1, 5, 15, 25], "set_material_b": [0, 1, 5, 15, 25], "set_pressur": [0, 5, 7, 9, 10, 15, 25], "set_system_s": [0, 5, 15, 25], "materialtomaterialphasediagramresult": [0, 5, 15, 25], "materialtomaterialpropertydiagramcalcul": [0, 5, 15, 25], "with_constant_condit": [0, 1, 5, 15, 25], "materialtomaterialpropertydiagramresult": [0, 5, 15, 25], "materialtomaterialsingleequilibriumcalcul": [0, 5, 15, 25], "with_first_constant_condit": [0, 5, 15, 25], "with_second_constant_condit": [0, 5, 15, 25], "materialtomaterialsingleequilibriumresult": [0, 5, 15, 25], "temperatureaxi": [0, 5, 15, 25], "temperaturecondit": [0, 5, 15, 25], "packag": [0, 1, 2, 15, 25, 26, 27], "process_metallurgi": [0, 1, 2, 8, 9, 10, 15, 25], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "abstractaddit": [0, 7, 8, 9, 10, 15, 25], "get_composit": [0, 7, 8, 9, 10, 15], "get_composition_unit": [0, 7, 8, 9, 10, 15], "get_dependent_compon": [0, 7, 8, 15, 20, 25], "get_el": [0, 7, 8, 9, 10, 15], "get_id": [0, 7, 8, 10, 15, 20, 25], "get_temperatur": [0, 1, 7, 8, 9, 10, 15, 20, 25], "is_do_scal": [0, 7, 8, 15], "is_empti": [0, 7, 8, 15], "activityrefer": [0, 7, 8, 9, 10, 15, 25], "liquid": [0, 2, 5, 7, 8, 9, 10, 12, 14, 15, 17, 18, 20, 21, 25], "solid": [0, 7, 8, 9, 10, 12, 15, 18, 21, 25], "phasegroup": [0, 1, 7, 8, 9, 10, 15, 25], "all_met": [0, 1, 7, 8, 15], "all_slag": [0, 7, 8, 15], "ga": [0, 1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 18, 24, 25], "liquid_met": [0, 7, 8, 15], "liquid_slag": [0, 7, 8, 15], "solid_met": [0, 7, 8, 15], "solid_slag": [0, 7, 8, 15], "processdatabas": [0, 1, 2, 7, 8, 15, 22, 25], "latest": [0, 2, 7, 8, 15, 26, 27], "oxdemo": [0, 1, 2, 7, 8, 15], "tcox10": [0, 7, 8, 15], "tcox11": [0, 7, 8, 15], "tcox12": [0, 7, 8, 15], "tcox8": [0, 7, 8, 15], "tcox9": [0, 7, 8, 15], "get_nam": [0, 7, 8, 15, 17, 18, 20, 25], "processmetallurgyopt": [0, 7, 8, 9, 10, 15, 25], "set_process_minimization_polici": [0, 7, 8, 15], "processminimizationpolici": [0, 7, 8, 15, 25], "global": [0, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 21, 23, 26], "global_test": [0, 7, 8, 15], "global_test__glob": [0, 7, 8, 15], "local": [0, 2, 4, 6, 7, 8, 15, 20, 27], "local__global_test": [0, 7, 8, 15], "local__global_test__glob": [0, 7, 8, 15], "slagproperti": [0, 7, 8, 9, 10, 15, 25], "b2": [0, 7, 8, 15], "b3": [0, 7, 8, 15], "b4": [0, 7, 8, 15], "bas2": [0, 7, 8, 15], "bells_ratio": [0, 7, 8, 15], "log_10_sulphur_capac": [0, 7, 8, 15], "l": [0, 4, 7, 8, 15, 21], "slagtyp": [0, 7, 8, 9, 10, 15, 25], "equilibrium": [0, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 25], "abstractequilibriumaddit": [0, 7, 9, 15, 25], "set_amount": [0, 2, 7, 9, 15], "set_component_composit": [0, 7, 9, 15], "adiabaticequilibriumcalcul": [0, 7, 9, 15, 22, 25], "add_addit": [0, 1, 2, 7, 9, 10, 15], "remove_addit": [0, 7, 9, 15], "remove_all_addit": [0, 7, 9, 15], "equilibriumaddit": [0, 1, 2, 7, 9, 15, 25], "get_amount": [0, 7, 9, 10, 15], "equilibriumcalcul": [0, 1, 2, 7, 9, 15, 25], "update_addit": [0, 2, 7, 9, 15], "equilibriumgasaddit": [0, 1, 7, 9, 15, 25], "get_amount_unit": [0, 7, 9, 10, 15], "equilibriumresult": [0, 7, 8, 9, 15, 25], "get_activity_of_slag": [0, 7, 9, 10, 15], "get_amount_of_el": [0, 7, 9, 10, 15], "get_amount_of_phase_group": [0, 7, 9, 10, 15], "get_amount_of_phas": [0, 7, 9, 10, 15], "get_composition_of_phas": [0, 7, 9, 10, 15], "get_composition_of_phase_group": [0, 1, 7, 9, 10, 15], "get_formula_for_activity_of_slag": [0, 7, 8, 9, 10, 15], "get_formula_for_slag_properti": [0, 7, 9, 10, 15], "get_fraction_of_phase_group": [0, 7, 9, 10, 15], "get_fraction_of_phas": [0, 7, 9, 10, 15], "get_gas_compon": [0, 7, 9, 10, 15], "get_oxygen_partial_pressur": [0, 7, 9, 10, 15], "get_pressur": [0, 7, 9, 10, 15], "get_slag_properti": [0, 7, 9, 10, 15], "get_stable_phases_in_phase_group": [0, 7, 9, 10, 15], "get_viscosity_dynamic_of_phas": [0, 7, 9, 10, 15], "get_viscosity_kinematic_of_phas": [0, 7, 9, 10, 15], "isothermalequilibriumcalcul": [0, 7, 9, 15, 22, 25], "process": [0, 4, 6, 7, 8, 9, 15, 21, 22, 25, 26], "abstractcontinuousaddit": [0, 7, 10, 15, 25], "abstractprocessaddit": [0, 7, 10, 15, 25], "abstractsingletimeaddit": [0, 7, 10, 15, 25], "bulkzon": [0, 7, 10, 15, 25], "add_continuous_addit": [0, 1, 2, 7, 10, 15], "add_pow": [0, 2, 7, 10, 15], "disable_degass": [0, 7, 10, 15], "enable_degass": [0, 7, 10, 15], "get_dens": [0, 7, 10, 15], "get_phase_group_to_transf": [0, 7, 10, 15], "is_degassing_en": [0, 7, 10, 15], "continuousaddit": [0, 7, 10, 15, 25], "get_rat": [0, 7, 10, 15], "continuousgasaddit": [0, 1, 7, 10, 15, 25], "get_rate_unit": [0, 7, 10, 15], "exhaustgasresult": [0, 7, 10, 15, 25], "get_amount_of_compon": [0, 7, 10, 15], "masstransfercoeffici": [0, 7, 10, 15, 25], "metalbulkzon": [0, 1, 7, 10, 15, 25], "processsimulationcalcul": [0, 1, 7, 10, 15, 22, 25], "set_end_tim": [0, 1, 7, 10, 15], "set_max_allowed_temp_change_per_step": [0, 7, 10, 15], "set_min_time_step": [0, 7, 10, 15], "set_pressure_in_time_period": [0, 7, 10, 15], "with_reaction_zon": [0, 1, 7, 10, 15], "processsimulationresult": [0, 2, 7, 8, 10, 15, 25], "get_enthalpi": [0, 7, 10, 15, 18, 25], "get_exhaust_ga": [0, 2, 7, 10, 15], "get_num_of_performed_step": [0, 7, 10, 15], "get_time_point": [0, 7, 10, 15], "reactionzon": [0, 1, 2, 7, 10, 15, 25], "add_heat_transf": [0, 2, 7, 10, 15], "add_transfer_of_phase_group": [0, 2, 7, 10, 15], "singletimeaddit": [0, 1, 7, 10, 15, 25], "singletimegasaddit": [0, 7, 10, 15, 25], "slagbulkzon": [0, 1, 7, 10, 15, 25], "transferofphasegroup": [0, 7, 10, 15, 25], "get_transfer_source_zone_id": [0, 7, 10, 15], "zone": [0, 1, 7, 10, 15, 22, 25], "system": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27], "multidatabasesystembuild": [0, 22, 23, 25], "create_and_select_speci": [0, 23, 25], "deselect_constituent_on_sublattic": [0, 23, 25], "deselect_phas": [0, 23, 25], "deselect_speci": [0, 23, 25], "get_system": [0, 1, 2, 23, 25], "select_constituent_on_sublattic": [0, 23, 25], "select_phas": [0, 23, 25], "select_speci": [0, 23, 25], "with_new_composition_set": [0, 18, 23, 25], "without_default_phas": [0, 23, 25], "convert_composit": [0, 23, 25], "get_all_elements_in_databas": [0, 23, 25], "get_all_phases_in_databas": [0, 23, 25], "get_all_species_in_databas": [0, 23, 25], "get_element_object": [0, 23, 25], "get_elements_in_system": [0, 23, 25], "get_phase_object": [0, 23, 25], "get_phases_in_system": [0, 5, 13, 23, 25], "get_refer": [0, 23, 25], "get_species_in_system": [0, 23, 25], "get_species_object": [0, 23, 25], "with_batch_equilibrium_calcul": [0, 1, 23, 25], "with_cct_precipitation_calcul": [0, 23, 25], "with_isothermal_diffusion_calcul": [0, 1, 2, 23, 25], "with_isothermal_precipitation_calcul": [0, 1, 23, 25], "with_material_to_materi": [0, 1, 23, 25], "with_non_isothermal_diffusion_calcul": [0, 23, 25], "with_non_isothermal_precipitation_calcul": [0, 23, 25], "with_property_model_calcul": [0, 1, 2, 23, 25], "with_scheil_calcul": [0, 1, 23, 25], "with_ttt_precipitation_calcul": [0, 23, 25], "systembuild": [0, 18, 22, 23, 25], "select_database_and_el": [0, 1, 2, 22, 23, 25], "select_user_database_and_el": [0, 22, 23, 25], "entiti": [0, 25], "compositionset": [0, 18, 23, 25], "set_major_constituents_for_sublattic": [0, 18, 25], "element": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25], "get_entropy_diff_0_to_298k": [0, 18, 25], "get_molar_mass": [0, 18, 25], "get_stable_element_refer": [0, 18, 25], "is_interstiti": [0, 18, 25], "is_speci": [0, 18, 25], "is_valid": [0, 18, 25], "phase": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25], "get_speci": [0, 18, 25], "get_species_for_composition_profil": [0, 18, 25], "get_sublattic": [0, 18, 21, 25], "has_diffusion_data": [0, 18, 25], "has_molar_volume_data": [0, 18, 25], "is_dilute_diffusion_model": [0, 18, 25], "is_ga": [0, 18, 25], "is_ionic_liquid": [0, 18, 25], "is_liquid": [0, 18, 25], "is_solid": [0, 18, 25], "phasetyp": [0, 18, 25], "ionic_liquid": [0, 18, 25], "speci": [0, 4, 18, 23, 25], "get_all_el": [0, 18, 25], "get_charg": [0, 18, 25], "is_el": [0, 18, 25], "to_el": [0, 18, 25], "sublattic": [0, 2, 8, 12, 13, 14, 17, 18, 21, 23, 25], "get_constitu": [0, 18, 25], "get_nr_of_sit": [0, 18, 25], "server": [0, 1, 2, 4, 11, 16, 19, 25, 26, 27], "loggingpolici": [0, 22, 25], "file": [0, 1, 3, 4, 5, 6, 11, 12, 13, 14, 17, 19, 22, 23, 25, 26, 27], "screen": [0, 22, 25], "metallurgycalcul": [0, 22, 25], "with_adiabatic_equilibrium_calcul": [0, 1, 2, 22, 25], "with_adiabatic_process_calcul": [0, 1, 22, 25], "with_isothermal_equilibrium_calcul": [0, 22, 25], "resultload": [0, 22, 25], "phase_diagram": [0, 1, 22, 25], "precipitation_ttt_or_cct": [0, 22, 25], "precipitation_singl": [0, 22, 25], "property_diagram": [0, 1, 22, 25], "property_model": [0, 1, 2, 22, 25], "setup": [0, 1, 2, 4, 11, 22, 25], "disable_cach": [0, 22, 25], "get_database_info": [0, 22, 25], "get_database_path_on_disk": [0, 22, 25], "get_databas": [0, 22, 25, 27], "get_property_model": [0, 1, 22, 25], "load_result_from_disk": [0, 1, 2, 4, 5, 6, 11, 12, 13, 14, 22, 25], "select_thermodynamic_and_kinetic_databases_with_el": [0, 1, 2, 22, 25], "set_cache_fold": [0, 1, 2, 22, 25], "set_ges_vers": [0, 22, 25], "set_log_level_to_debug": [0, 22, 25], "set_log_level_to_info": [0, 22, 25], "with_metallurgi": [0, 1, 2, 22, 25], "tcpython": [0, 3, 4, 5, 6, 12, 13, 14, 19, 22, 25, 27], "start_api_serv": [0, 2, 22, 25], "start_matlab_serv": [0, 22, 25], "stop_api_serv": [0, 2, 22, 25], "quantity_factori": [0, 25], "diffusionquant": [0, 4, 21, 25], "activity_of_compon": [0, 21, 25], "chemical_diffusion_coeffici": [0, 21, 25], "chemical_potential_of_compon": [0, 21, 25], "distanc": [0, 1, 2, 4, 21, 25], "intrinsic_diffusion_coeffici": [0, 21, 25], "l_bi": [0, 21, 25], "mass_fraction_of_a_compon": [0, 1, 21, 25], "mass_fraction_of_a_phas": [0, 21, 25], "mobility_of_component_in_phas": [0, 21, 25], "mole_fraction_of_a_compon": [0, 1, 3, 21, 25], "mole_fraction_of_a_phas": [0, 21, 25], "position_of_lower_boundary_of_region": [0, 21, 25], "position_of_upper_boundary_of_region": [0, 21, 25], "thermodynamic_factor": [0, 21, 25], "time": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 20, 21, 22, 24, 25, 26], "total_mass_fraction_of_compon": [0, 21, 25], "total_mass_fraction_of_component_in_phas": [0, 21, 25], "total_mass_fraction_of_phas": [0, 21, 25], "total_mole_fraction_of_compon": [0, 21, 25], "total_mole_fraction_of_component_in_phas": [0, 21, 25], "total_volume_fraction_of_phas": [0, 21, 25], "tracer_diffusion_coeffici": [0, 21, 25], "u_fraction_of_a_compon": [0, 21, 25], "user_defined_funct": [0, 5, 14, 21, 25], "velocity_of_lower_boundary_of_region": [0, 21, 25], "velocity_of_upper_boundary_of_region": [0, 21, 25], "width_of_region": [0, 21, 25], "independentvari": [0, 4, 21, 25], "plotcondit": [0, 4, 21, 25], "integr": [0, 1, 4, 6, 21, 25], "interfac": [0, 1, 2, 4, 6, 10, 11, 20, 21, 24, 25], "scheilquant": [0, 1, 12, 21, 25], "apparent_heat_capacity_per_gram": [0, 21, 25], "apparent_heat_capacity_per_mol": [0, 21, 25], "apparent_volumetric_thermal_expansion_coeffici": [0, 21, 25], "average_composition_of_solid_phases_as_mass_fract": [0, 21, 25], "average_composition_of_solid_phases_as_mole_fract": [0, 21, 25], "composition_of_phase_as_mole_fract": [0, 21, 25], "composition_of_phase_as_weight_fract": [0, 21, 25], "density_of_phas": [0, 21, 25], "density_of_system": [0, 21, 25], "distribution_of_component_of_phas": [0, 21, 25], "heat_per_gram": [0, 21, 25], "heat_per_mol": [0, 21, 25], "latent_heat_per_gram": [0, 21, 25], "latent_heat_per_mol": [0, 21, 25], "mass_fraction_of_a_solid_phas": [0, 21, 25], "mass_fraction_of_all_liquid": [0, 21, 25], "mass_fraction_of_all_solid_phas": [0, 21, 25], "molar_volume_of_phas": [0, 21, 25], "molar_volume_of_system": [0, 21, 25], "mole_fraction_of_a_solid_phas": [0, 21, 25], "mole_fraction_of_all_liquid": [0, 21, 25], "mole_fraction_of_all_solid_phas": [0, 1, 21, 25], "site_fraction_of_component_in_phas": [0, 21, 25], "volume_fraction_of_a_solid_phas": [0, 21, 25], "volume_fraction_of_all_liquid": [0, 21, 25], "volume_fraction_of_all_solid_phas": [0, 21, 25], "thermodynamicquant": [0, 1, 2, 3, 5, 13, 14, 21, 25], "gibbs_energy_of_a_phas": [0, 21, 25], "normalized_driving_force_of_a_phas": [0, 21, 25], "pressur": [0, 3, 4, 5, 9, 10, 11, 13, 14, 21, 25], "system_s": [0, 5, 21, 25], "volume_fraction_of_a_phas": [0, 1, 21, 25], "util": [0, 20, 25], "compositiontyp": [0, 9, 10, 24, 25], "compon": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 23, 24, 25], "compositionunit": [0, 1, 5, 6, 9, 10, 11, 12, 24, 25], "conversionunit": [0, 23, 24, 25], "weight_fract": [0, 24, 25], "weight_perc": [0, 24, 25], "gasamountunit": [0, 1, 9, 10, 24, 25], "kilogram": [0, 24, 25], "norm_cubic_met": [0, 1, 9, 10, 24, 25], "gascompositionunit": [0, 9, 10, 24, 25], "gasrateunit": [0, 1, 10, 24, 25], "kilogram_per_sec": [0, 24, 25], "norm_cubic_meter_per_sec": [0, 1, 10, 24, 25], "interfaceposit": [0, 21, 24, 25], "lower": [0, 2, 4, 6, 8, 12, 13, 14, 17, 21, 24, 25], "upper": [0, 4, 6, 17, 21, 24, 25, 27], "phaseunit": [0, 9, 10, 24, 25], "resultvaluegroup": [0, 5, 12, 14, 24, 25], "get_label": [0, 24, 25], "temperatureprofil": [0, 4, 6, 24, 25], "add_time_temperatur": [0, 20, 24, 25], "propertymodel_sdk": [0, 1, 25], "cctresult": [0, 20, 25], "temperature_suffix": [0, 20, 25], "time_suffix": [0, 20, 25], "cctresultvalu": [0, 20, 25], "set_result_time_temperatur": [0, 20, 25], "calculationcontext": [0, 1, 20, 25], "get_argument_id": [0, 20, 25], "get_mass_fract": [0, 1, 20, 25], "get_mass_perc": [0, 20, 25], "get_mole_fract": [0, 20, 25], "get_mole_perc": [0, 20, 25], "get_ui_boolean_valu": [0, 1, 20, 25], "get_ui_condition_list": [0, 20, 25], "get_ui_float_valu": [0, 20, 25], "get_ui_list_valu": [0, 20, 25], "get_ui_string_valu": [0, 20, 25], "get_ui_temperature_valu": [0, 20, 25], "set_result_cct_valu": [0, 20, 25], "set_result_quantity_valu": [0, 1, 20, 25], "set_single_equilibrium_result": [0, 20, 25], "conditionlistentri": [0, 20, 25], "add_button_callback": [0, 20, 25], "after_evalu": [0, 20, 25], "before_evalu": [0, 20, 25], "evaluate_model": [0, 1, 2, 20, 25], "get_license_kei": [0, 20, 25], "provide_calculation_result_quant": [0, 1, 20, 25], "provide_model_categori": [0, 1, 20, 25], "provide_model_descript": [0, 1, 20, 25], "provide_model_nam": [0, 1, 20, 25], "provide_model_paramet": [0, 11, 20, 25], "provide_ui_panel_compon": [0, 1, 11, 20, 25], "remove_button_callback": [0, 20, 25], "resultquant": [0, 1, 20, 25], "get_descript": [0, 20, 25], "resultquantitytyp": [0, 20, 25], "cct_quantiti": [0, 20, 25], "energy_quant": [0, 20, 25], "general_quant": [0, 20, 25], "length_quant": [0, 20, 25], "single_equilibrium_quant": [0, 20, 25], "strength_quant": [0, 20, 25], "surface_energy_quant": [0, 20, 25], "temperature_quant": [0, 20, 25], "time_quant": [0, 20, 25], "speciallistmark": [0, 20, 25], "any_list_mark": [0, 20, 25], "none_list_mark": [0, 20, 25], "uibooleancompon": [0, 1, 20, 25], "connect_component_enabl": [0, 20, 25], "connect_component_vis": [0, 20, 25], "enable_add_button": [0, 20, 25], "enable_remove_button": [0, 20, 25], "get_set": [0, 20, 25], "remove_component_vis": [0, 20, 25], "set_index": [0, 20, 25], "uicompon": [0, 1, 20, 25], "set_en": [0, 20, 25], "set_vis": [0, 20, 25], "uiconditionlistcompon": [0, 20, 25], "uifloatcompon": [0, 20, 25], "get_valu": [0, 20, 25], "uigenerallistcompon": [0, 20, 25], "get_cont": [0, 20, 25], "get_selected_entri": [0, 20, 25], "uiphaselistcompon": [0, 20, 25], "get_any_marker_set": [0, 20, 25], "get_default_phas": [0, 20, 25], "uisectiondividercompon": [0, 20, 25], "uistringcompon": [0, 20, 25], "uitemperaturecompon": [0, 20, 25], "get_temp": [0, 20, 25], "create_boolean_ui_compon": [0, 20, 25], "create_condition_list_ui_compon": [0, 20, 25], "create_energy_quant": [0, 20, 25], "create_float_ui_compon": [0, 20, 25], "create_general_quant": [0, 1, 20, 25], "create_length_quant": [0, 20, 25], "create_list_ui_compon": [0, 20, 25], "create_phase_list_ui_compon": [0, 20, 25], "create_section_divider_ui_compon": [0, 20, 25], "create_strength_quant": [0, 20, 25], "create_string_ui_compon": [0, 20, 25], "create_surface_energy_quant": [0, 20, 25], "create_temperature_quant": [0, 20, 25], "create_temperature_ui_compon": [0, 20, 25], "create_time_quant": [0, 20, 25], "except": [0, 1, 2, 8, 12, 13, 14, 17, 18, 22, 25, 27], "apiserverexcept": [0, 19, 25], "calculationexcept": [0, 19, 25], "componentnotexistingexcept": [0, 19, 25], "databaseexcept": [0, 19, 25], "degreesoffreedomnotzeroexcept": [0, 19, 25], "equilibriumexcept": [0, 19, 25], "generalcalculationexcept": [0, 19, 25], "generalexcept": [0, 19, 25], "invalidcalculationconfigurationexcept": [0, 19, 25], "invalidcalculationstateexcept": [0, 19, 25], "invalidnumberofresultgroupsexcept": [0, 19, 25], "invalidresultconfigurationexcept": [0, 19, 25], "invalidresultstateexcept": [0, 13, 19, 25], "licenseexcept": [0, 19, 25], "nodataforphaseexcept": [0, 19, 25], "notallowedoperationexcept": [0, 19, 25], "phasenotexistingexcept": [0, 19, 25], "resultexcept": [0, 19, 25], "syntaxexcept": [0, 19, 25], "tcexcept": [0, 19, 25], "unrecoverablecalculationexcept": [0, 2, 3, 4, 5, 6, 12, 13, 14, 19, 22, 25], "handle_except": [0, 19, 25], "abstract_bas": [0, 25], "abstractcalcul": [0, 3, 4, 6, 11, 12, 13, 14, 17, 25], "get_configuration_as_str": [0, 17, 25], "abstractresult": [0, 4, 6, 9, 10, 11, 12, 13, 14, 17, 25], "phaseparamet": [0, 17, 25], "get_interv": [0, 17, 25], "get_lower_temperature_limit": [0, 17, 25], "remove_all_interv": [0, 17, 25], "remove_interval_with_upper_limit": [0, 17, 25], "set_expression_with_upper_limit": [0, 17, 25], "set_interv": [0, 17, 25], "set_lower_temperature_limit": [0, 17, 25], "systemdata": [0, 3, 4, 5, 6, 11, 12, 13, 14, 17, 23, 25], "get_phase_paramet": [0, 17, 25], "get_phase_parameter_nam": [0, 17, 25], "get_system_funct": [0, 17, 25], "get_system_function_nam": [0, 17, 25], "systemfunct": [0, 17, 25], "systemmodif": [0, 3, 4, 5, 6, 11, 12, 13, 14, 17, 25], "run_ges_command": [0, 17, 25], "set": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "temperatureinterv": [0, 17, 25], "get_express": [0, 17, 25], "get_upper_temperature_limit": [0, 17, 25], "set_express": [0, 17, 25], "set_upper_temperature_limit": [0, 17, 25], "contain": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 26, 27], "class": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24], "type": [1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 18, 20, 23, 24, 25], "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "i": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "where": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 19, 22, 23], "you": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 20, 21, 22, 23, 26, 27], "start": [1, 2, 4, 5, 6, 10, 12, 13, 14, 18, 20, 21, 22, 23, 26], "choos": [1, 4, 5, 6, 8, 12, 14, 16, 21, 22, 25], "databas": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 18, 19, 22, 23, 27], "etc": [1, 2, 3, 5, 6, 13, 14, 20, 23], "configur": [1, 3, 4, 5, 6, 10, 11, 12, 13, 14, 16, 19, 23, 25, 27], "get": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 26], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 26, 27], "have": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 26, 27], "run": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 22, 23, 25, 27], "point": [1, 2, 4, 5, 6, 8, 10, 12, 13, 14, 22, 24], "usag": [1, 6, 14, 20, 22, 25, 26], "can": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27], "think": [1, 2, 26], "wizard": 1, "us": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "select": [1, 2, 3, 4, 5, 9, 10, 12, 13, 14, 16, 18, 19, 20, 22, 23, 26, 27], "That": [1, 2, 4, 12], "take": [1, 2, 3, 4, 5, 6, 12, 14, 26], "next": [1, 2, 11, 20, 26], "exampl": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 25], "tc_python": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "import": [1, 2, 3, 4, 5, 8, 12, 13, 14, 27], "e": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 26, 27], "t": [1, 2, 3, 4, 5, 6, 11, 12, 14, 17, 20, 24, 27], "c": [1, 2, 4, 6, 9, 10, 12, 13, 17, 22, 23, 26, 27], "after": [1, 2, 3, 4, 5, 9, 10, 13, 14, 20, 23, 24, 26, 27], "claus": [1, 2, 19, 22], "like": [1, 2, 6, 9, 10, 14, 20], "If": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 26, 27], "jupyt": [1, 25, 27], "lab": 1, "notebook": [1, 25, 27], "should": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 25, 27], "slightli": [1, 4, 24], "differ": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 18, 19, 22, 23, 24, 26], "abl": [1, 26], "multipl": [1, 2, 4, 5, 6, 9, 11, 12, 14, 20, 22], "cell": [1, 2], "see": [1, 2, 4, 26, 27], "within": [1, 10, 11, 22, 25, 26, 27], "consol": [1, 3, 4, 5, 9, 10, 12, 13, 14, 17, 19, 20, 21, 25], "detail": [1, 4, 8, 11, 12, 13, 14, 17, 18, 20, 21, 23, 26, 27], "when": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27], "your": [1, 2, 3, 4, 5, 11, 13, 14, 25, 27], "script": [1, 2, 22, 23, 25], "row": 1, "code": [1, 11, 20, 25, 26], "via": 1, "socket": [1, 22, 27], "commun": [1, 19, 22, 26], "send": [1, 3, 17], "receiv": 1, "messag": [1, 19, 20, 26, 27], "ha": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 26, 27], "far": [1, 6], "shut": [1, 22], "down": [1, 2, 12, 21, 22], "temporari": [1, 2, 5, 13, 22], "ar": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "delet": [1, 2, 4, 22], "It": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 23, 26, 27], "ensur": [1, 6, 14], "happen": [1, 19, 20, 27], "structur": [1, 6, 17], "abov": [1, 2, 4, 12, 27], "To": [1, 2, 4, 5], "re": [1, 5, 13, 20, 22, 25, 27], "previou": [1, 2, 4, 5, 14, 20, 22, 26], "folder": [1, 2, 4, 5, 6, 11, 12, 13, 14, 22, 23, 26, 27], "save": [1, 4, 5, 6, 11, 12, 13, 14, 22, 25], "look": [1, 2], "done": [1, 2, 3, 9, 12, 22], "function": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 17, 20, 21, 23], "cach": [1, 2, 22], "network": [1, 2, 22, 25, 26], "share": [1, 2, 16, 22, 26], "mani": [1, 2, 4, 5, 6, 8, 12, 13, 14], "user": [1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 26, 27], "same": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 16, 17, 22, 23, 27], "cache_fold": 1, "exactli": [1, 2, 10, 13, 17, 27], "instead": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 22, 23, 26], "load": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 17, 19, 22, 23], "disk": [1, 2, 3, 4, 5, 11, 13, 17, 22], "also": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 20, 22, 23, 26, 27], "possibl": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 19, 20, 22, 23, 26, 27], "explicitli": [1, 2, 4, 6, 20], "could": [1, 2, 9, 10], "ani": [1, 2, 4, 5, 6, 10, 12, 13, 14, 17, 19, 20, 22, 23, 24, 26, 27], "calculation_result": 1, "path": [1, 2, 4, 5, 6, 11, 12, 13, 14, 22, 23, 26, 27], "loaded_result": 1, "A": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 27], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24], "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27], "let": [1, 4], "further": [1, 2, 3, 4, 5, 6, 12, 13, 14, 19, 20, 22, 26, 27], "specifi": [1, 3, 4, 5, 6, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23], "part": [1, 9, 10, 12, 18, 21], "aldemo": 1, "al": [1, 2, 6, 20], "sc": 1, "call": [1, 2, 3, 4, 5, 6, 11, 13, 14, 17, 19, 20, 21, 22, 27], "which": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 26], "an": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "instanc": [1, 2, 3, 5, 11, 20, 23], "fix": [1, 2, 3, 4, 5, 6, 13, 14, 25, 27], "cannot": [1, 13, 14, 22, 23, 27], "chang": [1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 25, 26, 27], "later": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 20, 22, 23], "want": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 23, 27], "someth": [1, 13], "els": 1, "again": [1, 2], "creat": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 17, 20, 21, 22, 23, 26, 27], "new": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26], "one": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23, 26], "more": [1, 2, 4, 5, 6, 8, 12, 13, 14, 18, 20, 22, 23, 26], "object": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "sever": [1, 3, 4, 5, 6, 10, 13, 14, 18, 19, 20, 22, 23, 25], "best": [1, 25], "wai": [1, 2, 5, 11, 12, 14, 16, 27], "how": [1, 2, 3, 5, 6, 8, 12, 13, 14, 22], "includ": [1, 2, 3, 4, 5, 6, 8, 12, 13, 14, 20, 26], "thermo": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27], "calc": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27], "instal": [1, 2, 22, 23, 25], "some": [1, 2, 5, 8, 11, 12, 13, 14, 16, 20, 26], "default": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 26, 27], "valu": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 24], "applic": [1, 4, 6, 8, 12, 13, 14, 16, 20, 22, 23, 25, 26], "overridden": [1, 12], "actual": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 18, 20, 23, 27], "In": [1, 2, 3, 4, 5, 9, 10, 12, 13, 14, 16, 18, 20, 21, 26, 27], "need": [1, 2, 3, 4, 5, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 26, 27], "correct": [1, 4, 8, 12, 13, 14, 22, 23], "number": [1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23, 27], "condit": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 19, 20, 21, 23], "depend": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 23, 24, 26, 27], "do": [1, 2, 4, 5, 14, 17, 26, 27], "other": [1, 2, 4, 5, 6, 10, 12, 13, 14, 16, 20, 21, 24, 26, 27], "two": [1, 2, 4, 5, 6, 10, 14, 18, 21, 23, 26, 27], "method": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26], "give": [1, 5, 8, 12, 13, 14, 18, 26, 27], "mean": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 19, 20], "rerun": 1, "current": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27], "longer": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 21, 22], "correspond": [1, 3, 4, 5, 9, 13, 14, 17, 20, 21, 24, 27], "work": [1, 2, 22, 23, 26, 27], "recommend": [1, 2, 4, 22, 26, 27], "almost": 1, "situat": [1, 2, 19], "much": [1, 8], "better": [1, 3, 27], "perform": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 19, 23], "than": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 27], "gibbs_energi": [1, 3, 5, 13, 14], "fedemo": [1, 2, 22, 23], "fe": [1, 2, 6, 9, 10, 17, 20, 21, 22, 23], "cr": [1, 2, 3, 9, 10, 11, 13, 14, 22, 23], "2000": [1, 2, 5, 8, 12, 13, 14], "0": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 26, 27], "1": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 27], "01": [1, 2, 5, 6, 12, 14], "g": [1, 2, 3, 4, 5, 6, 9, 10, 11, 13, 14, 17, 18, 21, 23, 26], "known": [1, 4, 5, 14], "begin": [1, 4, 10, 22, 26, 27], "requir": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27], "vector": [1, 3, 23], "reduc": [1, 4], "overhead": [1, 13, 22], "similar": [1, 2, 6, 25, 26], "approach": [1, 2, 8, 13, 26, 27], "numpi": [1, 2, 26], "significantli": [1, 3, 4], "loop": [1, 2, 3, 22, 23], "fast": [1, 2, 3, 6, 12, 23], "There": [1, 2, 3, 14, 19, 26, 27], "littl": [1, 3, 5, 14], "advantag": [1, 3], "long": [1, 3, 4], "typic": [1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 19, 20, 22, 23, 24], "larg": [1, 2, 3, 4, 10, 23, 27], "o": [1, 25, 26, 27], "basenam": 1, "__file__": 1, "_cach": 1, "nidemo": 1, "ni": [1, 2, 20], "800": [1, 3], "x": [1, 2, 3, 4, 5, 11, 12, 13, 14, 24], "1e": [1, 2, 4, 8, 12, 13, 14], "2": [1, 2, 4, 6, 8, 9, 10, 14, 17, 18, 20, 21, 22, 24, 25, 27], "list_of_x_": 1, "3": [1, 2, 4, 6, 8, 10, 14, 17, 18, 20, 21, 24, 25, 27], "4": [1, 2, 4, 6, 8, 9, 10, 14, 20, 24, 25], "5": [1, 2, 4, 5, 6, 8, 9, 10, 20, 22, 24, 25, 27], "6": [1, 4, 6, 8, 12, 13, 14, 20, 22], "7": [1, 2, 4, 6, 14, 20, 26], "8": [1, 20], "9": [1, 4], "10": [1, 2, 3, 4, 6, 9, 10, 12, 17, 27], "list_of_x_cr": 1, "11": [1, 3, 6], "13": 1, "15": [1, 2, 3, 9, 10, 12, 17, 18, 24], "lists_of_condit": 1, "x_al": 1, "x_cr": 1, "append": [1, 2, 5, 14, 22, 23], "100": [1, 2, 4, 6, 8, 9, 10, 23], "bm": 1, "vm": 1, "mass": [1, 2, 4, 9, 10, 12, 18, 20, 21, 24], "volum": [1, 4, 6, 9, 10, 13, 18, 21, 24], "print": [1, 2, 20, 27], "graphic": [1, 2, 12, 14, 20], "mode": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 17, 19, 20, 21], "here": [1, 2, 5, 10, 23, 27], "howev": [1, 2, 3, 4, 5, 8, 12, 13, 14, 20, 22, 26, 27], "must": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 18, 20, 23, 27], "least": [1, 4, 6, 8, 12, 13, 14, 27], "enter": [1, 2, 3, 4, 5, 6, 13, 14, 16, 18, 22, 23, 26], "matrix": [1, 4, 6, 13], "simul": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 18, 21, 22, 24], "composit": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 24], "precipitation_curv": 1, "maldemo": 1, "18": 1, "623": 1, "1e5": [1, 11], "fcc_a1": [1, 2, 3, 5, 6, 9, 10, 12, 13, 14, 17], "al3sc": 1, "avail": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 18, 19, 20, 22, 24, 26, 27], "minimum": [1, 5, 6, 8, 10, 12, 13, 14], "everyth": 1, "temperature_vs_mole_fraction_of_solid": 1, "For": [1, 2, 3, 4, 5, 6, 8, 12, 13, 14, 17, 20, 21, 23, 26], "One": [1, 2, 4, 5, 14], "axi": [1, 4, 5, 6, 12, 14, 20, 24], "command": [1, 2, 3, 4, 5, 9, 11, 13, 14, 17, 26, 27], "otherwis": [1, 4, 5, 17, 22, 23], "500": [1, 4, 8, 12, 13, 14], "3000": [1, 5, 17], "map": [1, 2, 5, 9, 14, 23], "ax": [1, 5, 14], "grid": [1, 4, 6, 8, 12, 13, 14], "width": [1, 4, 21], "initi": [1, 4, 5, 6, 9, 10, 13, 14, 20, 22], "diffusion_result": [1, 2], "mfedemo": [1, 2, 22], "1400": 1, "108000": [1, 2], "austenit": [1, 2, 12], "50": [1, 2, 4, 12], "ni_fract": [1, 2], "format": [1, 2, 4], "drive": [1, 2, 3, 4, 5, 6, 8, 12, 13, 14, 21], "forc": [1, 2, 3, 4, 5, 6, 8, 12, 13, 14, 21], "graphit": 1, "argument": [1, 11, 20], "quantiti": [1, 3, 4, 5, 9, 10, 11, 12, 13, 14, 20, 21, 24], "driving_forc": [1, 4], "normalizeddrivingforc": 1, "regular": [1, 2, 5, 6], "thei": [1, 3, 4, 5, 6, 9, 11, 12, 13, 14, 20, 23, 26], "specialis": [1, 5, 22], "handl": [1, 25], "mixtur": [1, 4, 5, 8, 12, 13, 14], "b": [1, 5, 9, 10, 27], "shown": [1, 2, 4, 20, 22], "below": [1, 2, 26, 27], "vari": [1, 2, 4, 5, 6, 14, 24], "amount": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 24], "fraction": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 20, 21, 24], "material_to_material_property_diagram": 1, "273": [1, 2], "from_fract": [1, 5], "to_fract": [1, 5], "start_fract": [1, 5], "data": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24], "material_b_fract": [1, 5], "all_phas": [1, 3, 5, 13, 14, 21], "group": [1, 2, 5, 6, 8, 9, 10, 12, 14, 19], "fractions_of_b": 1, "volume_fractions_of_phas": 1, "y": [1, 5, 12, 14, 24], "phase_nam": [1, 4, 12, 18, 23], "label": [1, 5, 12, 14, 24], "special": [1, 4, 18, 20, 23, 26], "support": [1, 2, 10, 19, 21, 26, 27], "conveni": [1, 2, 4, 14], "addit": [1, 2, 3, 5, 6, 8, 9, 10, 13, 14, 20, 23, 26], "slag": [1, 2, 8, 9, 10], "al2o3": [1, 5, 8, 9, 10, 23], "30": [1, 2, 8, 12, 13, 14], "cao": [1, 2, 8, 9, 10], "20": [1, 2, 9, 10, 17], "sio2": [1, 2, 8, 9, 10], "provid": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 26, 27], "tailor": 1, "made": [1, 2], "develop": [1, 11, 20, 22, 23, 25], "kinet": [1, 2, 4, 6, 19, 22, 23], "featur": [1, 2, 4, 12], "distinct": [1, 10], "isotherm": [1, 4, 6, 9, 22, 23, 24], "adiabat": [1, 9, 22], "effect": [1, 2, 4, 6, 11, 12, 22], "reaction": [1, 2, 4, 10, 22], "eerz": [1, 2, 22], "rang": [1, 2, 4, 14], "consid": [1, 4, 6, 8, 26], "unnecessari": [1, 4], "session": [1, 2, 19, 22, 27], "metal": [1, 6, 8, 9, 10, 24], "si": 1, "100e3": 1, "1650": 1, "75": [1, 9, 10, 23], "25": [1, 9, 10, 23], "3e3": 1, "1600": 1, "o2": [1, 9, 10], "1000": [1, 2, 4, 5, 11, 17, 23], "amount_unit": [1, 9, 10], "f": [1, 4, 5, 14, 17, 20], "stabl": [1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 18, 21, 23], "k": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 24], "principl": [1, 2], "especi": [1, 2, 4, 6, 8, 26], "steel": [1, 2, 10, 21], "make": [1, 2, 4, 12, 18, 20, 22, 26, 27], "up": [1, 2, 4, 8, 9, 10, 19, 22, 23], "concret": 1, "question": 1, "releas": [1, 2, 3, 10, 17, 21, 26, 27], "limit": [1, 2, 4, 5, 6, 10, 12, 17, 25], "connect": [1, 2, 20, 22, 25, 26], "bulk": [1, 2, 6, 10], "These": [1, 2, 4, 5, 6, 9, 10, 20, 22, 26], "melt": [1, 2, 10], "top": [1, 2, 10], "its": [1, 2, 5, 6, 13, 20, 23, 24], "version": [1, 2, 21, 22, 23, 25, 27], "proven": [1, 2], "industri": [1, 2], "ladl": [1, 2], "furnac": [1, 2], "aod": [1, 2], "vod": [1, 2], "convert": [1, 2, 20], "heat": [1, 2, 4, 6, 10, 21], "cool": [1, 2, 5, 6, 10, 12, 13, 20], "transfer": [1, 2, 4, 10, 20], "between": [1, 3, 4, 5, 6, 8, 10, 12, 13, 14, 17, 21, 22, 23, 24, 25], "inclus": [1, 2, 10], "flotat": [1, 2, 10], "veri": [1, 2, 19], "minim": [1, 3, 4, 5, 8, 12, 13, 14, 23], "complet": [1, 2, 3, 5, 10, 13, 23, 26, 27], "mimick": 1, "bof": 1, "60": 1, "steel_zon": 1, "densiti": [1, 4, 5, 6, 10, 13, 21], "7800": 1, "slag_zon": 1, "4500": 1, "120e3": 1, "2e3": 1, "1500": 1, "composition_unit": [1, 9, 10], "rate_unit": [1, 10], "area": [1, 10], "left_zon": [1, 10], "mass_transfer_coefficient_left": [1, 10], "0e": [1, 4, 6, 8, 12, 13, 14], "right_zon": [1, 10], "mass_transfer_coefficient_right": [1, 10], "content": [1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 16, 17, 20, 23, 26], "finish": [1, 12], "numer": [1, 2, 6, 10], "previous": [1, 2, 4, 5, 9, 13, 14, 17, 20, 22, 23], "r": [1, 6, 17, 20, 22, 23], "meanradiu": 1, "independ": [1, 4, 20, 21, 23, 27], "befor": [1, 2, 4, 8, 12, 13, 14, 20, 26], "valid": [1, 4, 10, 13, 18, 19, 22, 27], "were": [1, 12], "lifetim": [1, 13], "onli": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27], "As": [1, 3, 4, 5, 8, 9, 11, 12, 13, 14, 17], "follow": [1, 2, 4, 6, 12, 26, 27], "mix": [1, 4, 11], "old": [1, 17, 22], "anoth": [1, 5, 10, 12, 14, 25, 27], "single_eq_result": 1, "single_eq_calcul": 1, "prec_result": 1, "precipitation_calcul": 1, "scheil_result": 1, "scheil_calcul": 1, "now": [1, 2, 16, 23, 26], "without": [1, 2, 4, 5, 6, 8, 12, 13, 14, 17, 20], "becaus": [1, 4, 5, 10, 11, 12, 13, 14, 18, 23, 27], "been": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23], "state": [1, 3, 4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 22, 25], "gibb": [1, 3, 4, 5, 6, 13, 14, 17, 21, 22], "diffusioncalcul": 1, "normal": [1, 2, 4, 6, 8, 9, 10, 12, 13, 14, 19, 21, 22, 23, 26, 27], "continu": [1, 2, 4, 6, 10, 19, 20, 22], "first_diffusion_result": 1, "diffusion_calcul": 1, "continued_calcul": 1, "110000": 1, "second_result": 1, "just": [1, 5, 14], "even": [1, 2, 4, 5, 9, 10, 12, 14, 22], "sdk": [1, 25], "extend": [1, 2], "softwar": [1, 2, 4, 26], "enabl": [1, 2, 4, 5, 6, 8, 10, 12, 13, 14, 20, 27], "own": [1, 2], "usabl": [1, 3, 4, 5, 13, 14], "through": [1, 10, 22], "ui": [1, 11, 20], "simpl": [1, 2, 6], "martensit": [1, 2], "pearlit": 1, "standard": 1, "2021a": [1, 26], "access": [1, 2, 5, 13, 18, 19, 20, 22, 23, 26], "scipi": [1, 2, 26], "tensorflow": 1, "nearli": 1, "ident": [1, 2, 5, 10, 20, 24], "regardless": [1, 2, 6, 23], "rewrit": 1, "origin": [1, 4], "wa": [1, 4, 17, 19, 22, 27], "jython": 1, "therefor": [1, 2, 17, 26], "had": [1, 2, 23], "written": [1, 4], "compat": 1, "migrat": [1, 6], "rel": [1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 21, 22, 24], "easi": 1, "syntax": [1, 3, 4, 5, 9, 10, 12, 13, 14, 17, 19, 20, 21, 22, 23], "main": [1, 2, 20], "directli": [1, 3, 4, 5, 9, 10, 11, 13, 14, 17, 27], "plugin": 1, "while": [1, 2, 4, 9, 19, 23], "program": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 17, 19, 26], "appli": [1, 2, 4, 6, 17, 18, 22], "familiar": [1, 26], "languag": 1, "prefer": [1, 2, 4, 6], "implement": [1, 3, 4, 5, 9, 13, 14, 17, 20, 25], "well": [1, 2, 4, 6, 10, 18], "everi": [1, 4, 20], "name": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26], "convent": 1, "fulfil": 1, "pattern": [1, 2, 22], "xypythonmodel": 1, "py": [1, 2, 19, 26, 27], "match": [1, 17, 23, 27], "addition": [1, 2, 4, 27], "place": [1, 2, 4, 6, 12, 26], "xypython": 1, "placehold": [1, 4, 20, 22], "xy": 1, "freeli": 1, "chosen": [1, 3, 4, 5, 6, 10, 12, 13, 14, 18, 20, 23], "simplepythonmodel": 1, "simplepython": 1, "def": [1, 2], "self": [1, 20, 23], "list": [1, 3, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 27], "str": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 27], "demo": 1, "my": [1, 2, 22, 23], "checkbox": [1, 2, 20], "check": [1, 2, 4, 8, 12, 13, 14, 19, 20, 26], "fals": [1, 3, 4, 5, 9, 10, 13, 14, 18, 20, 21, 22, 23], "context": [1, 19, 20], "logger": [1, 20, 22], "info": [1, 2, 20, 22], "obtain": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23], "gui": [1, 2], "composition_as_mass_fract": 1, "temp_in_k": 1, "would": [1, 2, 13], "basic": [1, 8, 27], "build": [1, 2], "block": [1, 3, 4, 5, 6, 12, 13, 14], "api": [1, 3, 4, 5, 9, 10, 11, 13, 14, 17, 19, 22, 26], "defin": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "each": [1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 16, 18, 21, 22, 23, 27], "evalu": [1, 2, 3, 4, 5, 6, 10, 13, 14, 20, 23], "entrypoint": 1, "panel": [1, 11, 20], "text": [1, 11, 16, 20], "field": [1, 6, 16, 20], "locat": [1, 2, 22, 23, 26, 27], "subdirectori": 1, "menu": [1, 26, 27], "tool": [1, 2, 27], "oper": [1, 2, 4, 6, 16, 19, 23, 26, 27], "window": [1, 2, 16, 22, 23, 26, 27], "2023b": [1, 2, 16, 26, 27], "linux": [1, 2, 22, 23, 26, 27], "home": [1, 2, 26], "usernam": [1, 2, 26], "opt": 1, "maco": [1, 2, 26], "app": [1, 2, 16, 26], "resourc": [1, 2, 13, 16, 22, 26], "core": [2, 5, 14], "keep": [2, 4, 5, 14, 26], "intern": [2, 17, 19, 20, 22], "form": [2, 3, 4, 5, 10, 13, 14], "futur": [2, 26, 27], "overwritten": [2, 17], "strongli": [2, 6, 13], "influenc": 2, "converg": [2, 4, 8, 12, 13, 14, 18], "restor": 2, "case": [2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 26, 27], "improv": [2, 6, 13, 23], "speed": [2, 12], "complic": 2, "equilibria": [2, 3, 5, 12, 13, 14, 23], "alreadi": [2, 4, 9, 19, 22, 23, 26], "refer": [2, 3, 4, 5, 8, 9, 10, 13, 14, 18, 21, 23], "primarili": 2, "occur": [2, 4, 11, 19, 27], "nickel": 2, "tcni": 2, "switch": [2, 4, 14, 20], "lot": 2, "regard": [2, 14, 20], "suspend": [2, 3, 5, 13, 14], "mechan": [2, 6], "bookmark": [2, 13], "control": [2, 4, 6, 8, 10, 11, 12, 13, 14], "short": [2, 22], "demonstr": 2, "easili": [2, 18], "bookmark_temp_condit": 2, "bcc": [2, 3, 6, 12], "bookmark_fixed_phase_condit": 2, "result_temp": 2, "result_fixed_phas": 2, "yet": 2, "exact": [2, 22], "being": [2, 3, 4, 5, 8, 12, 13, 14, 21, 27], "alwai": [2, 3, 4, 5, 6, 8, 12, 13, 14, 18, 20, 21, 23], "reload": 2, "result_dir": 2, "frac": 2, "never": [2, 4, 5, 14, 20, 22], "copi": [2, 27], "neither": [2, 23], "built": 2, "deepcopi": 2, "nor": [2, 23], "proxi": [2, 26, 27], "underli": 2, "hold": [2, 6], "consequ": [2, 27], "calculator_2": 2, "both": [2, 4, 5, 6, 8, 12, 14, 22, 23, 26, 27], "collect": [2, 8], "third": [2, 4, 23], "parti": [2, 4], "fail": [2, 4, 5, 8, 14, 19, 25, 26], "execut": [2, 3, 4, 5, 9, 13, 14, 20, 27], "termin": [2, 12, 27], "pip": [2, 25, 26], "py3": [2, 26, 27], "whl": [2, 26, 27], "pycharm": [2, 16, 25, 27], "id": [2, 6, 8, 10, 11, 13, 20, 25, 27], "prevent": [2, 3, 4, 5, 6, 11, 12, 13, 14], "confus": 2, "most": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 19, 20, 21, 22, 26], "anaconda": [2, 25, 27], "prompt": [2, 26, 27], "onc": [2, 3, 4, 5, 13, 14, 22], "leav": 2, "java": [2, 22], "backend": [2, 19, 22], "stop": [2, 5, 6, 8, 12, 13, 14, 22], "final": [2, 4, 12, 22], "second": [2, 4, 5, 6, 8, 12, 13, 14, 17, 24], "appropri": [2, 6, 9, 10], "safe": [2, 22], "due": [2, 5, 12, 13, 14, 19, 21, 23, 27], "sens": 2, "per": [2, 3, 5, 6, 10, 13, 14, 20, 23, 24], "iter": [2, 8, 9, 12, 13, 14], "minut": 2, "clean": [2, 22], "pass": [2, 20, 22], "w": [2, 10], "immedi": [2, 3, 5, 10, 13, 14, 20], "__name__": 2, "__main__": 2, "multi": 2, "pleas": [2, 11, 17, 19, 26, 27], "note": [2, 5, 6, 12, 13, 14, 20, 21, 22, 26, 27], "thread": 2, "suitabl": [2, 3, 4, 5, 12, 13, 14], "computation": 2, "intens": 2, "task": 2, "dispatch": 2, "comput": [2, 3, 4, 5, 8, 12, 13, 14, 26, 27], "cluster": 2, "snippet": 2, "show": [2, 26], "combin": [2, 3, 4, 5, 13, 14, 20, 23], "reason": [2, 6, 21, 26, 27], "real": [2, 20], "probabl": 2, "arrai": 2, "concurr": 2, "do_perform": 2, "paramet": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "1100": 2, "phase_fract": 2, "cr_content": 2, "cr_min": 2, "cr_max": 2, "delta_cr": 2, "npm": [2, 3, 5, 9, 10, 13, 21], "bcc_a2": 2, "index": [2, 10, 18, 20, 26], "bcc_phase_fract": 2, "num_process": 2, "processpoolexecutor": 2, "executor": 2, "result_from_process": 2, "zip": 2, "param": [2, 12, 20], "identifi": [2, 6, 20], "phase_fractions_from_process": 2, "plot": [2, 4, 5, 14, 20, 21], "batch": [2, 3, 23, 25], "bring": 2, "thrown": [2, 3, 4, 5, 6, 11, 12, 13, 14, 17, 19, 22], "catch": [2, 19], "outsid": [2, 19, 20, 22], "900": 2, "try": [2, 3, 4, 5, 8, 9, 11, 13, 14, 17, 19, 22, 27], "interact": 2, "product": [2, 19], "manag": [2, 22], "standalon": 2, "manual": [2, 4, 11, 23, 26, 27], "directori": [2, 22, 23, 25, 27], "grow": 2, "size": [2, 5, 6, 8, 10, 11, 14, 21], "over": [2, 4, 6, 9, 10, 20], "clear": [2, 22], "sure": [2, 22, 26, 27], "extra": [2, 11], "might": [2, 5, 10, 12, 14, 17, 19, 22, 24, 26, 27], "present": [2, 4, 5, 6, 9, 10, 11, 13, 14, 17, 19, 20, 21, 22, 23], "space": [2, 3, 4, 12, 13, 17, 22, 26], "issu": [2, 25, 27], "resolv": [2, 26, 27], "tc_tmp4747588488953835507": 2, "random": 2, "accord": [2, 4, 11, 14, 20, 24], "tabl": 2, "appdata": 2, "temp": [2, 6, 20], "var": 2, "g7": 2, "7du81ti_b7mm84n184fn3k910000lg": 2, "tmp": 2, "auto": [2, 3, 5, 13, 14, 23], "tab": 2, "kei": [2, 5, 12, 14, 20], "lookup": 2, "press": [2, 11, 20, 26], "cursor": 2, "parenthesi": [2, 4, 11, 17, 23], "shift": 2, "whole": [2, 4, 11, 13], "docstr": 2, "them": [2, 4, 5, 9, 11, 13, 16, 22, 27], "right": [2, 4, 5, 16, 20, 26, 27], "corner": [2, 6], "updat": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 17, 25, 27], "choic": [2, 6, 11, 18, 25], "sucessfulli": 2, "log": [2, 3, 4, 20, 22], "34": 2, "42": 2, "170": 2, "wait": 2, "debugg": 2, "drivingforcepythonmodel": 2, "171": 2, "successfulli": 2, "restart": 2, "workflow": 2, "describ": [2, 3, 9, 10, 18, 24, 26, 27], "debug_model": [2, 23], "true": [2, 3, 4, 5, 9, 10, 12, 13, 14, 20, 22, 23], "split": 2, "librari": [2, 4], "__init__": 2, "criticaltemperaturespythonmodel": 2, "criticaltemperaturespython": 2, "criticaltemperatur": 2, "np": 2, "critical_temperatures_librari": 2, "highlight": 2, "error": [2, 4, 19, 20, 22, 25, 26], "mark": 2, "root": [2, 4, 19, 22], "click": [2, 16, 26], "project": [2, 25, 27], "sourc": [2, 10], "optim": [2, 11, 20], "enum": [2, 4, 6, 8, 14, 18, 20, 22, 24], "concern": 2, "statement": [2, 22], "AND": 2, "init": 2, "martensite_librari": 2, "major": [2, 3, 4, 5, 6, 13, 14, 17, 18, 20, 26], "matplotlib": [2, 26], "19": [2, 4, 26], "scikit": [2, 26], "learn": [2, 26], "23": [2, 26], "break": [2, 26], "avoid": [2, 6, 26], "broken": [2, 6, 26, 27], "reinstal": [2, 26], "remov": [2, 3, 4, 5, 9, 10, 11, 13, 14, 16, 17, 20, 23, 26], "contact": [2, 10, 26], "insuffici": 2, "platform": [2, 22, 23, 26], "ex": [2, 26], "bin": [2, 26], "python3": [2, 26], "modifi": [2, 3, 4, 5, 6, 11, 12, 13, 14, 17, 20, 23], "disadvantag": 2, "lost": [2, 5, 14, 17], "mai": [2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 17, 18, 20, 26], "lead": 2, "success": 2, "failur": 2, "respect": [2, 21], "zero": [2, 4, 8, 18, 19], "0e3": 2, "1700": 2, "70": 2, "al_addit": 2, "result_1": 2, "result_2": 2, "Or": [2, 3, 4, 5, 13, 14], "academ": 2, "metallurg": [2, 10, 22], "separ": [2, 4, 5, 12, 14, 22, 23, 24, 27], "Such": [2, 9, 10], "react": [2, 10], "critic": [2, 6], "accuraci": [2, 4, 6, 8, 12, 13, 14], "power": [2, 10], "materi": [2, 5, 6, 10, 13, 20, 23, 25], "exhaust": [2, 10], "definit": [2, 6, 8, 12, 13, 14, 24], "coeffici": [2, 4, 6, 10, 21], "broad": 2, "readi": [2, 26], "certain": [2, 4, 5, 6, 8, 10, 14, 18, 19, 20], "abstract": [2, 4, 5, 8, 9, 13, 14, 17, 20], "kept": 2, "experi": 2, "fundament": 2, "empir": 2, "mostli": [2, 5, 9, 10, 14], "geometri": [2, 4], "stir": 2, "usual": [2, 3, 4, 5, 6, 9, 12, 13, 14, 22, 23, 26], "given": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 19, 24, 26, 27], "exist": [2, 4, 6, 16, 17, 18, 19, 26], "suggest": 2, "literatur": 2, "deriv": 2, "interest": [2, 14, 21], "seri": [3, 4], "singl": [3, 4, 5, 6, 10, 13, 21, 23, 25], "fashion": 3, "union": [3, 4, 5, 10, 11, 12, 13, 14, 17, 21], "logging_frequ": 3, "int": [3, 4, 8, 10, 12, 13, 14, 18, 20, 21, 22, 23], "timeout_in_minut": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "float": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 24], "queri": [3, 4, 5, 6, 14, 17, 21], "determin": [3, 4, 5, 8, 9, 10, 12, 13, 14, 22], "often": [3, 6, 14, 18, 19, 23, 27], "what": [3, 4, 5, 6, 11, 12, 13, 14, 24, 25], "hang": [3, 4, 5, 6, 9, 11, 12, 13, 14, 17], "unus": [3, 4, 5, 6, 12, 13, 14], "specif": [3, 4, 5, 6, 11, 12, 13, 14, 17, 21, 22], "result": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 24, 25], "turn": [3, 5, 12, 13], "off": [3, 5, 6, 12, 13, 14, 20], "": [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 18, 20, 21, 23, 24], "energi": [3, 4, 5, 6, 13, 14, 17, 20, 21, 22], "term": [3, 5, 12, 13, 14], "ad": [3, 4, 5, 6, 8, 9, 10, 13, 14, 17, 20, 21, 22, 26], "stoichiometr": [3, 4, 5, 13, 14, 18, 23], "solut": [3, 4, 5, 6, 8, 12, 13, 14, 18, 27], "repres": [3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 18, 20, 21, 24], "nucleat": [3, 5, 6, 13, 14], "barrier": [3, 5, 13, 14], "surfac": [3, 4, 5, 13, 14, 20], "tension": [3, 5, 13, 14], "elast": [3, 5, 6, 13, 14], "mole": [3, 4, 5, 6, 11, 12, 13, 14, 20, 21, 24], "formula": [3, 4, 5, 9, 10, 13, 14, 23], "read": [3, 4, 5, 6, 11, 12, 13, 14, 17, 23], "unencrypt": [3, 4, 5, 6, 11, 12, 13, 14, 17, 23], "tdb": [3, 4, 5, 6, 11, 12, 13, 14, 17, 22, 23], "thermodynam": [3, 4, 5, 6, 9, 10, 13, 14, 18, 19, 21, 22, 23], "string": [3, 5, 6, 8, 12, 13, 14, 20, 21, 23, 26], "altern": [3, 4, 5, 6, 12, 13, 14, 21, 25, 27], "poli": [3, 5, 9, 11, 13, 14], "engin": [3, 4, 5, 9, 11, 13, 14, 17, 20, 25], "necessari": [3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 22, 23, 26, 27], "raw": [3, 4, 5, 9, 11, 13, 14, 17], "spell": [3, 4, 5, 9, 11, 13, 14, 17], "mistak": [3, 4, 5, 9, 11, 13, 14, 17], "forgotten": [3, 4, 5, 9, 11, 13, 14, 17], "equal": [3, 4, 5, 9, 13, 14], "sign": [3, 4, 5, 9, 13, 14], "statu": [3, 5, 13, 14], "all_compon": [3, 5, 13, 21], "reset_condit": [3, 5, 13], "bool": [3, 4, 5, 8, 9, 10, 12, 13, 14, 18, 20, 21, 23], "ignor": [3, 5, 6, 13, 14], "tupl": [3, 4, 5, 6, 12, 14, 18, 20], "itself": [3, 22], "850": 3, "dormant": [3, 5, 13, 14, 21], "guarante": [3, 5, 13, 14, 22], "ser": [3, 4, 5, 13, 14, 18, 21], "100000": [3, 4, 5, 9, 10, 13, 14, 23], "activ": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 22], "chemic": [3, 4, 5, 13, 14, 21, 23], "potenti": [3, 4, 5, 6, 12, 13, 14, 21, 25, 27], "enthalpi": [3, 4, 5, 10, 12, 13, 14, 18], "dissolv": [3, 4, 5, 6, 10, 13, 14], "care": [3, 4, 5, 13, 14], "By": [3, 4, 5, 6, 9, 10, 13, 14, 22, 23], "so": [3, 4, 5, 6, 13, 14, 19, 21, 26, 27], "forth": [3, 4, 5, 13, 14], "purpos": [3, 4, 5, 13, 14], "alloi": [3, 4, 5, 6, 12, 13, 14], "domin": [3, 4, 5, 13, 14], "end": [3, 4, 5, 10, 12, 13, 14, 20, 21, 22, 23, 24, 26], "member": [3, 4, 5, 13, 14], "associ": [3, 4, 5, 13, 14], "lowest": [3, 4, 5, 12, 13, 14], "current_temperatur": [3, 4, 5, 13, 14], "pa": [3, 4, 5, 9, 10, 11, 13, 14, 21, 24], "system_modif": [3, 4, 5, 6, 11, 12, 13, 14, 17], "suppli": [3, 4, 5, 6, 11, 12, 13, 14, 17], "modif": [3, 4, 5, 6, 11, 12, 13, 14, 17], "batch_result": 3, "batch_calcul": 3, "free": [3, 4, 17], "occupi": [3, 17], "dure": [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 17, 19, 20, 21], "No": [3, 12, 17, 19, 22, 25, 26], "retriev": [3, 6, 17, 18, 23], "afterward": [3, 17], "boundari": [4, 5, 6, 10, 12, 14, 21], "profil": [4, 6, 18, 24], "element_nam": [4, 6, 11, 12, 23], "n": [4, 5, 6, 11, 12, 13, 23, 27], "to_tim": [4, 10], "7976931348623157e": 4, "308": 4, "flux": [4, 6], "j": [4, 6, 10, 18, 20, 21], "p": [4, 5, 11, 23, 24], "integ": 4, "express": [4, 5, 14, 17, 19, 21], "dictra": [4, 18], "max": [4, 8, 12, 13, 14], "model": [4, 6, 8, 10, 11, 12, 13, 14, 18, 19, 20, 22, 23, 25, 26], "16": [4, 8], "balanc": [4, 6], "equat": [4, 6, 12], "find": [4, 5, 6, 8, 12, 13, 14, 27], "tie": [4, 6, 14], "line": [4, 5, 6, 12, 14, 24, 26, 27], "either": [4, 5, 6, 12, 14, 17, 18], "degre": [4, 6, 12, 19, 21], "freedom": [4, 19], "factori": [4, 5, 6, 12, 14, 21], "classmethod": [4, 5, 6, 12, 14, 21], "account": [4, 6], "finit": 4, "rate": [4, 6, 10, 12, 20, 24], "those": [4, 6, 18], "sproge": 4, "\u00e5gren": [4, 6], "experiment": [4, 11], "theoret": 4, "studi": [4, 6], "consumpt": 4, "carbur": 4, "treat": [4, 6], "1988": 4, "close": [4, 13, 26], "yield": 4, "molar": [4, 6, 12, 18, 21], "unit_enum": [4, 6, 11, 12], "mathemat": 4, "assum": [4, 5, 6, 10, 12, 13, 18, 24], "linearli": 4, "no_of_point": 4, "lower_geometrical_factor": 4, "upper_geometrical_factor": 4, "doubl": [4, 22, 23, 26], "high": [4, 5, 6, 13], "middl": 4, "factor": [4, 6, 12, 14, 21], "left": [4, 5], "half": 4, "larger": [4, 8, 12, 13, 14, 23], "higher": [4, 5, 6, 12, 13, 26], "vice": 4, "versa": 4, "smaller": [4, 6, 10], "geometrical_factor": 4, "concentr": [4, 6], "non": [4, 6, 8, 12, 13, 14, 18, 23, 24, 25], "subset": [4, 24], "simulation_tim": [4, 6], "boundary_condit": 4, "edg": [4, 6], "surface_act": 4, "timestep_control": 4, "timestep": 4, "variabl": [4, 5, 6, 8, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27], "search": [4, 6, 8, 12, 13, 14, 17, 27], "help": [4, 6, 17, 26], "timepoint": [4, 21, 24], "deviat": 4, "m": [4, 6, 9, 10, 12, 21], "hte": 4, "posit": [4, 8, 12, 13, 14, 20, 21, 24], "r_": 4, "total": [4, 9, 10, 21, 24], "x_axi": 4, "y_axi": 4, "plot_condit": 4, "independent_vari": 4, "allow": [4, 6, 10, 11, 12, 13, 19, 23], "equival": [4, 21], "Not": 4, "veloc": [4, 6, 21], "absolut": [4, 5, 6, 11, 13, 14, 22], "alter": 4, "console_command": 4, "regist": 4, "store": [4, 22], "until": [4, 10, 12, 13], "diffusionisothermocalcul": 4, "domain": 4, "replac": [4, 5, 6, 9, 23], "uniqu": [4, 8, 10, 20], "first_interface_posit": 4, "cylindr": 4, "infinit": 4, "cylind": 4, "radiu": [4, 6], "planar": 4, "With": 4, "spheric": [4, 6], "coordin": [4, 5, 14], "centr": 4, "tube": 4, "hollow": 4, "highest": 4, "along": [4, 5, 14], "temperature_profil": [4, 6], "dictra_console_mode_funct": 4, "complex": [4, 5, 14], "start_valu": 4, "end_valu": 4, "side": [4, 24, 25], "lower_boundari": 4, "upper_boundari": 4, "step_at": 4, "constructor": [4, 20], "hashin": 4, "shtrikman": 4, "bound": 4, "outermost": 4, "shell": 4, "consist": [4, 21], "sluggish": 4, "variant": 4, "interpret": [4, 5, 12, 14, 25, 27], "excluded_phas": 4, "exclud": 4, "innermost": 4, "matrix_phas": [4, 6, 13], "prescrib": 4, "wiener": 4, "layer": [4, 10], "orthogon": 4, "parallel": [4, 25], "labyrinth": 4, "impli": 4, "imped": 4, "dispers": 4, "taken": [4, 6, 12], "multipli": [4, 6], "squar": 4, "slower": 4, "behavior": [4, 5, 12, 13, 14], "disabl": [4, 5, 6, 8, 10, 12, 13, 14], "increas": [4, 11, 12], "risk": 4, "interpol": 4, "scheme": 4, "10000": 4, "discret": 4, "maximum": [4, 6, 8, 10, 12, 13, 14], "physic": 4, "memori": 4, "memory_in_megabyt": 4, "megabyt": 4, "mbyte": 4, "homogenization_funct": 4, "dimens": 4, "On": [4, 22, 23, 26, 27], "rule": 4, "dot": 4, "expon": [4, 6, 12], "exponenti": 4, "level": [4, 20, 22], "open": [4, 16, 22, 25, 27], "parenthes": 4, "sqrt": 4, "exp": 4, "natur": [4, 5, 12, 14], "log10": 4, "sin": 4, "co": [4, 12, 23], "tan": 4, "asin": 4, "aco": 4, "atan": 4, "sinh": 4, "cosh": 4, "tanh": 4, "asinh": 4, "acosh": 4, "atanh": 4, "erf": 4, "entir": 4, "enable_automatic_forced_starting_values_in_equilibrium_calcul": 4, "decid": 4, "every_nth_step": 4, "th": 4, "99": 4, "euler": 4, "backward": 4, "less": [4, 6, 8, 12, 13, 14], "accur": [4, 8, 12, 13, 14], "fluctuat": 4, "trapezoid": 4, "05": [4, 12], "dgm": 4, "ph": [4, 17], "whether": [4, 20], "inact": 4, "rt": 4, "dimensionless": [4, 6], "measur": 4, "grid_point": 4, "spheriod": 4, "is_matrix_phas": 4, "presenc": 4, "properti": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 25, 26], "averag": [4, 6, 21], "appear": 4, "suffici": [4, 26], "initial_composit": 4, "displac": 4, "func": 4, "initial_time_step": [4, 10], "07": [4, 6], "absolute_error": 4, "relative_error": 4, "max_timestep_allowed_as_percent_of_simulation_tim": 4, "percent": [4, 5, 6, 9, 10, 11, 12, 20, 24], "max_timestep_increase_factor": 4, "twice": 4, "smallest_time_step_allow": 4, "smallest": [4, 8, 12, 13, 14], "procedur": [4, 5, 8, 12, 13, 14], "small": [4, 6], "u": [4, 6, 20, 21], "weight": [5, 6, 21, 24], "from_temperatur": 5, "to_temperatur": 5, "start_temperatur": 5, "behav": [5, 13], "diagram": [5, 6, 12, 14, 21, 23, 25], "default_condit": [5, 23], "initial_equilibrium": [5, 14], "scan": [5, 12, 14], "cross": [5, 6, 14], "But": [5, 14], "rememb": [5, 14], "node": [5, 14, 16], "subsequ": [5, 14], "sequenc": [5, 14], "keep_previous_result": [5, 14], "Then": [5, 14, 26], "relev": [5, 6, 14, 22], "dict": [5, 8, 9, 10, 11, 12, 13, 14, 20, 23], "dependent_compon": [5, 23], "flag": [5, 12, 14], "creation": 5, "hpa": 5, "programmat": [5, 14], "x_quantiti": [5, 12, 14], "y_quantiti": [5, 12, 14], "dataset": [5, 12, 14, 24], "found": [5, 12, 14, 19, 27], "document": [5, 8, 12, 13, 14, 17, 23, 26, 27], "nan": [5, 8, 10, 12, 14, 20, 24], "subsect": [5, 12, 14], "sort": [5, 12, 14], "unsort": [5, 12, 14], "Its": [5, 14], "hm": [5, 14], "cp": [5, 14], "nv": [5, 12, 14], "eras": [5, 14], "disc": [5, 6, 12, 14, 22], "phase_name_style_enum": [5, 14], "style": [5, 14], "constitut": [5, 14, 18], "descript": [5, 6, 11, 14, 20], "order": [5, 6, 8, 9, 12, 13, 14, 16, 18, 20, 21, 22], "possibli": [5, 11, 13], "particularli": [5, 14], "miscibl": [5, 14, 18, 23], "gap": [5, 14, 18, 23], "disord": [5, 14], "sigma": [5, 14], "mu": [5, 14], "sort_and_merg": [5, 12, 14], "merg": [5, 12, 14], "few": [5, 12, 14, 26, 27], "divid": [5, 12, 14], "ambigu": [5, 12, 14], "hard": [5, 12, 14, 19, 22], "marker": [5, 14, 20], "massfractionofacompon": [5, 14, 21], "undefin": [5, 13], "room": [5, 13], "freez": [5, 13], "request": [5, 8, 9, 10, 11, 13, 23], "affect": [5, 8, 11, 13], "grain_radiu": 6, "0001": 6, "grain_aspect_ratio": 6, "grain": 6, "aspect": 6, "ratio": [6, 8], "grain_size_distribut": 6, "zener": 6, "pin": 6, "particl": 6, "growth": 6, "distribut": [6, 25, 27], "boundai": 6, "m2": 6, "activation_energi": 6, "242000": 6, "mobil": [6, 12, 21], "arrheniu": 6, "mol": [6, 18, 21], "pre_factor": 6, "004": 6, "prefactor": 6, "pre": 6, "evolut": [6, 10], "microstructur": 6, "number_dens": 6, "pair": [6, 11, 20], "length": [6, 20], "effici": [6, 25], "under": [6, 12], "assumpt": [6, 18], "supersatur": 6, "compar": [6, 21, 22], "substitut": [6, 18], "remark": 6, "zr": 6, "meanwhil": 6, "interstiti": [6, 18], "captur": 6, "propos": 6, "chen": 6, "jeppsson": 6, "cja": 6, "2008": 6, "move": [6, 12], "multicompon": 6, "rigor": 6, "spontan": 6, "transit": [6, 12], "le": 6, "transform": [6, 12, 21], "hoc": 6, "treatment": 6, "sinc": [6, 10, 13, 27], "solv": [6, 19], "morral": 6, "purdi": 6, "quasi": 6, "steadi": 6, "approxim": [6, 8, 12, 13, 14], "partit": 6, "design": 6, "deal": 6, "still": 6, "minor": 6, "overal": [6, 21], "instantan": [6, 10], "para": 6, "faster": [6, 8, 18], "neglig": 6, "contribut": [6, 13], "address": 6, "contrari": 6, "ortho": 6, "immobil": 6, "thu": [6, 8, 12, 13, 14], "across": 6, "12": [6, 12, 13, 14, 22], "pe": 6, "smooth": 6, "paraequilibrium": 6, "difficulti": 6, "matrix_phase_nam": 6, "precipitate_phas": [6, 13], "dislocation_dens": 6, "5000000000000": 6, "0e12": 6, "disloc": 6, "alement": 6, "adjust": [6, 20], "scale": [6, 8, 9, 10, 12, 14], "vacanc": [6, 18], "prior": 6, "solution": 6, "quench": 6, "mobility_enhancement_activation_energi": 6, "mobility_enhancement_prefactor": 6, "enhanc": 6, "inform": [6, 17, 18, 21, 22, 23, 26, 27], "c11": 6, "c12": 6, "c44": 6, "cubic": [6, 24], "stiff": 6, "tensor": 6, "gpa": 6, "shear_modulu": 6, "poisson_ratio": 6, "isotrop": 6, "shear": 6, "modulu": 6, "poisson": 6, "grain_growth_model": 6, "max_overall_volume_chang": 6, "001": 6, "max_radius_points_per_magnitud": 6, "200": 6, "magnitud": [6, 8, 12, 13, 14], "max_rel_change_critical_radiu": 6, "constraint": 6, "radium": 6, "put": [6, 13], "max_rel_change_nucleation_rate_log": 6, "max_rel_radius_chang": 6, "max_rel_solute_composition_chang": 6, "deplet": 6, "satur": 6, "stage": 6, "max_time_step": [6, 10], "max_time_step_during_h": 6, "enforc": [6, 18], "max_volume_fraction_dissolve_time_step": 6, "subcrit": 6, "min_radius_nucleus_as_particl": 6, "5e": [6, 12], "cut": 6, "nucleu": 6, "min_radius_points_per_magnitud": 6, "radius_points_per_magnitud": 6, "150": 6, "rel_radius_change_class_collis": 6, "collis": 6, "composition_valu": 6, "volume_fraction_of_phase_type_enum": 6, "percentag": [6, 10], "strain": 6, "e11": 6, "e12": 6, "e13": 6, "e22": 6, "e23": 6, "e33": 6, "morphologi": 6, "precipitate_phase_nam": 6, "simultan": [6, 23], "carbid": 6, "mc": 6, "nitrid": 6, "mn": 6, "caus": [6, 22, 27], "problem": [6, 19, 26, 27], "alia": 6, "site": [6, 8, 12, 13, 14, 18, 21], "m7c3": 6, "aspect_ratio_valu": 6, "gibbs_energy_addit": 6, "interfacial_energi": 6, "interfaci": [6, 13], "bond": [6, 13], "fcc": [6, 12], "crystal": 6, "110": 6, "111": 6, "lattic": 6, "plane": 6, "interfacial_energy_estimation_prefactor": 6, "amplif": 6, "overrid": [6, 20], "wetting_angl": 6, "90": [6, 9, 10], "phase_boundary_mobl": 6, "precipitate_morphology_enum": 6, "tran": 6, "transformation_strain_calculation_option_enum": 6, "cutoff_s": 6, "7e": 6, "kinetic_prefactor": 6, "93": 6, "neglect": 6, "elastic_properti": 6, "growth_rate_model_enum": 6, "particle_size_distribut": 6, "cct": [6, 20, 23], "cooling_r": [6, 12, 20], "max_temperatur": 6, "min_temperatur": 6, "stop_criterion_valu": 6, "criterion": [6, 12], "numerical_paramet": 6, "precipitate_id": 6, "frequenc": 6, "ttt": [6, 23], "precipitationnonthermalcalcul": 6, "max_annealing_tim": 6, "anneal": 6, "reach": [6, 8, 12, 13, 14, 19], "temperature_step": 6, "stop_at_percent_of_equilibria_fract": 6, "pure": 6, "dilat": 6, "getcompositionunit": 8, "empti": [8, 18, 20], "belong": 8, "metallurgi": [8, 9, 10, 22, 25], "metast": [8, 12, 13, 14], "favor": [8, 12, 13, 14], "hessian": [8, 12, 13, 14], "max_grid_point": [8, 12, 13, 14], "max_no_of_iter": [8, 12, 13, 14], "calphad": [8, 13], "cpu": [8, 12, 13, 14], "minimization_polici": 8, "polici": [8, 22], "06": [8, 12, 13, 14], "fewer": [8, 12, 13, 14], "machin": [8, 12, 13, 14], "precis": [8, 12, 13, 14], "smallest_fract": [8, 12, 13, 14], "constitu": [8, 12, 13, 14, 17, 18, 23], "unstabl": [8, 12, 13, 14], "low": [8, 12, 13, 14], "ideal": [8, 12, 13, 14], "routin": 8, "runtim": 8, "stabil": [8, 10], "consum": 8, "miss": [8, 19], "come": [8, 20], "test": [8, 12, 14, 22, 27], "compromis": 8, "getformulaforslagproperti": 8, "mgo": 8, "tio2": 8, "bell": 8, "sulphur": 8, "capac": [8, 21], "abort": [9, 10], "timeout": [9, 10], "293": [9, 10], "do_scal": [9, 10], "sum": [9, 10, 23], "wt": [9, 10], "kg": [9, 10], "metallurgical_react": 9, "isothermalmetallurgycalcul": 9, "vol": [9, 10], "composition_typ": [9, 10], "65": [9, 10], "35": [9, 10], "phase_group": [9, 10], "ac": [9, 10], "ionic_liq": [9, 10], "slag_properti": [9, 10], "slag_typ": [9, 10], "partial": [9, 10], "oxygen": [9, 10], "pick": [9, 10], "sulfur": [9, 10], "classic_express": [9, 10], "dynam": [9, 10, 11, 20], "viscos": [9, 10], "kinemat": [9, 10], "period": 10, "phase_group_to_transf": 10, "seldom": 10, "from_tim": 10, "degass": 10, "stai": 10, "attach": 10, "back": [10, 12, 22, 23], "accumul": 10, "v": [10, 24, 25], "mass_transfer_coeffici": 10, "end_tim": 10, "expect": [10, 20, 21, 27], "max_allowed_temp_chang": 10, "implicitli": 10, "180": 10, "min_time_step": 10, "pressure_in_pa": 10, "0e5": 10, "reaction_zon": 10, "repeat": 10, "heat_transfer_coeffici": 10, "transfer_of_phase_group": 10, "source_zon": 10, "transfer_r": 10, "poly_command": 11, "2024b": 11, "calculationengineexcept": 11, "argument_id": 11, "plu": 11, "button": [11, 16, 20, 27], "model_parameter_id": [11, 20], "optimiz": 11, "inject": 11, "fit": 11, "argument_1": 11, "argument_2": 11, "doe": [11, 23, 27], "classic_condit": 11, "dependent_element_nam": 11, "reset": [11, 13, 20], "result_quantity_id": 11, "parameter": [11, 20], "secondari": 12, "dendrit": 12, "arm": 12, "delta": 12, "ferrit": 12, "govern": 12, "\u00b5m": 12, "toward": 12, "gulliv": 12, "redistribut": 12, "33": 12, "primary_phase_nam": 12, "primari": 12, "tri": [12, 22], "secondary_dendrite_arm_spac": 12, "solidif": [12, 21, 23], "cost": 12, "robust": 12, "component_nam": 12, "temperature_in_kelvin": 12, "2500": 12, "liquidu": [12, 21], "scheil_calculation_typ": 12, "classicscheil": 12, "trap": 12, "scheil_typ": 12, "largest": 12, "compositionofphaseasweightfract": [12, 21], "angl": 12, "evapor": 12, "interv": [12, 14, 17], "number_of_step": 12, "final_temperatur": 12, "298": [12, 17, 18], "stepsiz": [12, 13, 14], "skip": [12, 26], "global_test_interv": [12, 14], "temperature_step_in_kelvin": 12, "decreas": 12, "adequ": 12, "fraction_to_terminate_at": 12, "remain": [12, 20], "togeth": [12, 26], "alpha": 12, "45": 12, "laser": 12, "fill": [12, 20], "scanning_spe": 12, "bookmark_id": 13, "whose": 13, "omit": [13, 20], "reflect": 13, "heavi": 13, "zero_volume_el": 13, "estim": 13, "becker": 13, "dictionari": [13, 20, 23], "ran": 13, "rais": 13, "40": 14, "variat": 14, "concept": 14, "min": 14, "center": 14, "axis_typ": 14, "enumer": 14, "first_axi": 14, "second_axi": 14, "direction_enum": 14, "max_step_s": 14, "min_nr_of_step": 14, "scale_factor": 14, "thermodynamiccalcul": 14, "insid": 14, "mesh": 14, "no_of_mesh_along_axi": 14, "phase_diagram_values_java": 14, "invari": 14, "section": [14, 27], "phase_label_java": 14, "accessor": [14, 24], "tc": [16, 19, 20, 22, 27], "python": [16, 19, 20, 22, 27], "tc23b_home": 16, "licens": [16, 19, 20, 22, 26, 27], "lshost": [16, 27], "lock": 16, "NO": [16, 27], "net": [16, 27], "lservrc": [16, 27], "edit": [16, 22], "debug": [16, 19, 22, 23, 25], "templat": 16, "recreat": 16, "about": [17, 18, 21, 22, 23, 27], "notic": 17, "reli": 17, "parameter_nam": 17, "upper_temperature_limit": 17, "parameter_express": 17, "6000": 17, "overwrit": [17, 20], "adjac": 17, "v34": 17, "ln": 17, "v35": 17, "v36": 17, "v37": 17, "lower_temperature_limit": 17, "system_data": 17, "hcp_a3": 17, "va": [17, 18], "ge": [17, 22], "renam": 17, "ghsercr": 17, "function_nam": 17, "function_express": 17, "ges_command": 17, "am": 17, "de": 17, "c_": 17, "parameter_or_funct": 17, "gfeliq": 17, "dgdef": 17, "consult": [17, 23], "sublattice_index": 18, "major_constitu": 18, "entropi": 18, "bar": 18, "carri": 18, "electron": 18, "denot": 18, "gaseou": 18, "ze": 18, "aqueou": 18, "dilut": 18, "contigu": 18, "ionic": 18, "compos": 18, "stoichiometri": [18, 23], "charg": 18, "represent": 18, "relat": [19, 21, 27], "misspel": 19, "inappropri": 19, "difficult": 19, "detect": 19, "got": 19, "encrypt": [19, 22], "action": 19, "fortran": [19, 22], "crash": [19, 22, 25], "quantity_id": 20, "time_temperature_id": 20, "suffix": 20, "cooling_rate_start_temperatur": 20, "cooling_rate_end_temperatur": 20, "model_util": 20, "rest": 20, "component_id": 20, "entri": [20, 27], "input": [20, 23], "unset": 20, "_local": 20, "en": 20, "signatur": 20, "getlogg": 20, "setlevel": 20, "warn": 20, "ui_compon": 20, "cleanup": 20, "prepar": 20, "categori": 20, "tree": [20, 26], "intend": 20, "whenev": 20, "go": [20, 26], "quantity_typ": 20, "strength": 20, "dependent_component_id": 20, "boolean": 20, "visibl": 20, "sub": 20, "selected_entri": 20, "entry_1_id": 20, "entry_2_id": 20, "selected_item_to_set_vis": 20, "default_phas": 20, "any_marker_set": 20, "initial_set": 20, "entry_list": 20, "any_mark": 20, "suppos": 20, "soon": 20, "act": 20, "spacer": 20, "initial_temp": 20, "kelvin": 20, "abstractquant": 21, "common": [21, 25, 26, 27], "use_s": 21, "activityofcompon": 21, "diffusing_el": 21, "gradient_el": 21, "reference_el": 21, "chemicaldiffusioncoeffici": 21, "gradient": 21, "chemicalpotentialofcompon": 21, "intrinsicdiffusioncoeffici": 21, "intrins": 21, "lbi": 21, "massfractionofaphas": 21, "mobilityofcomponentinphas": 21, "molefractionofacompon": 21, "molefractionofaphas": 21, "positionoflowerboundaryofregion": 21, "positionofupperboundaryofregion": 21, "thermodynamicfactor": 21, "totalmassfractionofcompon": 21, "totalmassfractionofcomponentinphas": 21, "totalmassfractionofphas": 21, "totalmolefractionofcompon": 21, "totalmolefractionofcomponentinphas": 21, "totalvolumefractionofphas": 21, "tracerdiffusioncoeffici": 21, "tracer": 21, "ufractionofacompon": 21, "velocityoflowerboundaryofregion": 21, "velocityofupperboundaryofregion": 21, "widthofregion": 21, "distancepoint": 21, "distancecondit": 21, "2019b": 21, "mandatori": 21, "integralcondit": 21, "interface_posit": 21, "interfacecondit": 21, "timecondit": 21, "apparentheatcapacitypergram": 21, "appar": 21, "apparentheatcapacitypermol": 21, "apparentvolumetricthermalexpansioncoeffici": 21, "volumetr": 21, "thermal": 21, "expans": 21, "averagecompositionofsolidphasesasmassfract": 21, "averagecompositionofsolidphasesasmolefract": 21, "compositionofphaseasmolefract": 21, "densityofphas": 21, "cm": 21, "densityofsystem": 21, "distributionofcomponentofphas": 21, "segreg": 21, "heatpergram": 21, "latent": 21, "heatpermol": 21, "latentheatpergram": 21, "cumul": 21, "latentheatpermol": 21, "massfractionofasolidphas": 21, "massfractionofallliquid": 21, "massfractionofallsolidphas": 21, "molarvolumeofphas": 21, "molarvolumeofsystem": 21, "molefractionofasolidphas": 21, "molefractionofallliquid": 21, "molefractionofallsolidphas": 21, "sub_lattice_ordinal_no": 21, "sitefractionofcomponentinphas": 21, "ordin": 21, "get_phase_in_system": 21, "volumefractionofasolidphas": 21, "volumefractionofallliquid": 21, "volumefractionofallsolidphas": 21, "gibbsenergyofaphas": 21, "normalizeddrivingforceofaphas": 21, "drivingforceofaphas": 21, "systems": 21, "volumefractionofaphas": 21, "metallurgy_calcul": 22, "result_load": 22, "debug_log": 22, "expos": 22, "precondit": 22, "database_short_nam": 22, "tcpath": 22, "tdc": 22, "path_to_model": [22, 23], "save_result": 22, "database_nam": [22, 23], "list_of_el": 22, "thermodynamic_db_nam": 22, "kinetic_db_nam": 22, "reject": [22, 23], "path_to_user_databas": [22, 23], "liter": [22, 23], "slash": [22, 23], "user_db": [22, 23], "mac": [22, 23, 25, 26], "sensit": [22, 23], "filenam": [22, 23], "precision_for_float": 22, "signific": 22, "figur": 22, "logging_polici": 22, "log_fil": 22, "debug_mod": 22, "do_throw_on_backend_hard_crash": 22, "port_numb": 22, "2019a": 22, "is_unittest": 22, "output": [22, 23], "sent": 22, "noth": [22, 27], "handler": 22, "adapt": 22, "simpli": [22, 27], "stacktrac": 22, "caught": 22, "port": [22, 26, 27], "anywai": 22, "gateway_id": 22, "multi_database_system_build": 23, "underscor": 23, "_": 23, "sublattice_no": 23, "constituent_name_to_deselect": 23, "deselect": 23, "phase_name_to_deselect": 23, "species_nam": 23, "basi": 23, "constituent_name_to_select": 23, "wrong": [23, 27], "2021b": 23, "phase_name_to_select": 23, "composition_set": 23, "system_inst": 23, "immut": 23, "input_composit": 23, "input_unit": 23, "output_unit": 23, "convers": [23, 24], "compound": 23, "involv": 23, "feo": 23, "know": 23, "individu": 23, "quick": [23, 27], "thousand": 23, "system_build": 23, "list_of_element_str": 23, "unselect": 23, "norm": 24, "meter": 24, "iso": 24, "2533": 24, "101325": 24, "288": 24, "trade": 24, "bottl": 24, "flow": 24, "result_line_group_java": 24, "guid": [25, 27], "bundl": 25, "environ": [25, 27], "newer": 25, "architectur": 25, "overview": 25, "diffusionresult": 25, "framework": 25, "practic": 25, "copyabl": 25, "virtual": [25, 26, 27], "troubleshoot": 25, "diagnost": 25, "establish": [25, 26], "pdf": 26, "kit": 26, "preinstal": 26, "popular": 26, "full": 26, "flexibl": 26, "pyex_m_01_input_from_fil": 26, "pyex_m_02_output_to_fil": 26, "editor": 26, "write": 26, "instruct": [26, 27], "great": 26, "navig": 26, "websit": 26, "http": [26, 27], "www": 26, "jetbrain": 26, "com": [26, 27], "download": [26, 27], "yourprojectnam": 26, "symbol": 26, "dropdown": 26, "confirm": 26, "yourself": 26, "moment": 26, "ok": 26, "subfold": 26, "examin": 26, "hidden": 26, "although": 26, "recent": 26, "2018a": 26, "understand": 26, "unless": [26, 27], "good": 26, "At": 26, "pip3": 26, "behind": [26, 27], "password": [26, 27], "proxy_ip": [26, 27], "py4j": [26, 27], "jproperti": [26, 27], "realli": 26, "hint": [26, 27], "chapter": 26, "wish": 26, "uninstal": 26, "faq": 27, "curl": 27, "thermocalc": 27, "sy": 27, "NOT": 27, "older": 27, "version_info": 27, "conda": 27, "env": 27, "neach": 27, "tc_env_vari": 27, "_home": 27, "url": 27, "numerical_vers": 27, "elif": 27, "__version__": 27, "we": 27, "unintention": 27, "unfortun": 27, "wide": 27, "2018b": 27, "venv": 27, "microsoft": 27, "16299": 27, "431": 27, "2017": 27, "corpor": 27, "reserv": 27, "bottom": 27, "view": 27, "retri": 27, "organ": 27, "Of": 27, "cours": 27, "six": 27, "transient": 27, "pypi": 27, "repositori": 27, "org": 27, "py2": 27, "insert": 27, "downsid": 27, "fulli": 27}, "objects": {"tc_python": [[17, 0, 0, "-", "abstract_base"], [3, 0, 0, "-", "batch_equilibrium"], [4, 0, 0, "-", "diffusion"], [18, 0, 0, "-", "entities"], [19, 0, 0, "-", "exceptions"], [5, 0, 0, "-", "material_to_material"], [6, 0, 0, "-", "precipitation"], [11, 0, 0, "-", "propertymodel"], [20, 0, 0, "-", "propertymodel_sdk"], [21, 0, 0, "-", "quantity_factory"], [12, 0, 0, "-", "scheil"], [22, 0, 0, "-", "server"], [13, 0, 0, "-", "single_equilibrium"], [14, 0, 0, "-", "step_or_map_diagrams"], [23, 0, 0, "-", "system"], [24, 0, 0, "-", "utils"]], "tc_python.abstract_base": [[17, 1, 1, "", "AbstractCalculation"], [17, 1, 1, "", "AbstractResult"], [17, 1, 1, "", "PhaseParameter"], [17, 1, 1, "", "SystemData"], [17, 1, 1, "", "SystemFunction"], [17, 1, 1, "", "SystemModifications"], [17, 1, 1, "", "TemperatureInterval"]], "tc_python.abstract_base.AbstractCalculation": [[17, 2, 1, "", "get_configuration_as_string"], [17, 2, 1, "", "get_system_data"], [17, 2, 1, "", "invalidate"], [17, 2, 1, "", "with_system_modifications"]], "tc_python.abstract_base.AbstractResult": [[17, 2, 1, "", "invalidate"]], "tc_python.abstract_base.PhaseParameter": [[17, 2, 1, "", "get_intervals"], [17, 2, 1, "", "get_lower_temperature_limit"], [17, 2, 1, "", "get_name"], [17, 2, 1, "", "remove_all_intervals"], [17, 2, 1, "", "remove_interval_with_upper_limit"], [17, 2, 1, "", "set_expression_with_upper_limit"], [17, 2, 1, "", "set_interval"], [17, 2, 1, "", "set_lower_temperature_limit"]], "tc_python.abstract_base.SystemData": [[17, 2, 1, "", "get_phase_parameter"], [17, 2, 1, "", "get_phase_parameter_names"], [17, 2, 1, "", "get_system_function"], [17, 2, 1, "", "get_system_function_names"]], "tc_python.abstract_base.SystemFunction": [[17, 2, 1, "", "get_intervals"], [17, 2, 1, "", "get_lower_temperature_limit"], [17, 2, 1, "", "get_name"], [17, 2, 1, "", "remove_all_intervals"], [17, 2, 1, "", "remove_interval_with_upper_limit"], [17, 2, 1, "", "set_expression_with_upper_limit"], [17, 2, 1, "", "set_interval"], [17, 2, 1, "", "set_lower_temperature_limit"]], "tc_python.abstract_base.SystemModifications": [[17, 2, 1, "", "run_ges_command"], [17, 2, 1, "", "set"]], "tc_python.abstract_base.TemperatureInterval": [[17, 2, 1, "", "get_expression"], [17, 2, 1, "", "get_upper_temperature_limit"], [17, 2, 1, "", "set_expression"], [17, 2, 1, "", "set_upper_temperature_limit"]], "tc_python.batch_equilibrium": [[3, 1, 1, "", "BatchEquilibriumCalculation"], [3, 1, 1, "", "BatchEquilibriumResult"]], "tc_python.batch_equilibrium.BatchEquilibriumCalculation": [[3, 2, 1, "", "calculate"], [3, 2, 1, "", "disable_global_minimization"], [3, 2, 1, "", "enable_global_minimization"], [3, 2, 1, "", "get_components"], [3, 2, 1, "", "get_gibbs_energy_addition_for"], [3, 2, 1, "", "get_system_data"], [3, 2, 1, "", "remove_all_conditions"], [3, 2, 1, "", "remove_condition"], [3, 2, 1, "", "run_poly_command"], [3, 2, 1, "", "set_component_to_entered"], [3, 2, 1, "", "set_component_to_suspended"], [3, 2, 1, "", "set_condition"], [3, 2, 1, "", "set_conditions_for_equilibria"], [3, 2, 1, "", "set_gibbs_energy_addition_for"], [3, 2, 1, "", "set_phase_to_dormant"], [3, 2, 1, "", "set_phase_to_entered"], [3, 2, 1, "", "set_phase_to_fixed"], [3, 2, 1, "", "set_phase_to_suspended"], [3, 2, 1, "", "with_options"], [3, 2, 1, "", "with_reference_state"], [3, 2, 1, "", "with_system_modifications"]], "tc_python.batch_equilibrium.BatchEquilibriumResult": [[3, 2, 1, "", "get_values_of"], [3, 2, 1, "", "invalidate"]], "tc_python.diffusion": [[4, 1, 1, "", "AbstractBoundaryCondition"], [4, 1, 1, "", "AbstractCalculatedGrid"], [4, 1, 1, "", "AbstractElementProfile"], [4, 1, 1, "", "AbstractGrid"], [4, 1, 1, "", "AbstractSolver"], [4, 1, 1, "", "ActivityFluxFunction"], [4, 1, 1, "", "AutomaticSolver"], [4, 1, 1, "", "BoundaryCondition"], [4, 1, 1, "", "CalculatedGrid"], [4, 1, 1, "", "ClassicSolver"], [4, 1, 1, "", "ClosedSystem"], [4, 1, 1, "", "CompositionProfile"], [4, 1, 1, "", "ConstantProfile"], [4, 1, 1, "", "ContinuedDiffusionCalculation"], [4, 1, 1, "", "DiffusionCalculationResult"], [4, 1, 1, "", "DiffusionIsoThermalCalculation"], [4, 1, 1, "", "DiffusionNonIsoThermalCalculation"], [4, 1, 1, "", "DoubleGeometricGrid"], [4, 1, 1, "", "ElementProfile"], [4, 1, 1, "", "FixFluxValue"], [4, 1, 1, "", "FixedCompositions"], [4, 1, 1, "", "FunctionProfile"], [4, 1, 1, "", "GeneralLowerHashinShtrikman"], [4, 1, 1, "", "GeneralLowerHashinShtrikmanExcludedPhase"], [4, 1, 1, "", "GeneralUpperHashinShtrikman"], [4, 1, 1, "", "GeneralUpperHashinShtrikmanExcludedPhase"], [4, 1, 1, "", "GeometricGrid"], [4, 1, 1, "", "GridPoint"], [4, 1, 1, "", "HashinShtrikmanBoundMajority"], [4, 1, 1, "", "HashinShtrikmanBoundMajorityExcludedPhase"], [4, 1, 1, "", "HashinShtrikmanBoundPrescribed"], [4, 1, 1, "", "HashinShtrikmanBoundPrescribedExcludedPhase"], [4, 1, 1, "", "HomogenizationFunction"], [4, 1, 1, "", "HomogenizationFunctions"], [4, 1, 1, "", "HomogenizationSolver"], [4, 1, 1, "", "InverseRuleOfMixtures"], [4, 1, 1, "", "InverseRuleOfMixturesExcludedPhase"], [4, 1, 1, "", "LabyrinthFactorF"], [4, 1, 1, "", "LabyrinthFactorF2"], [4, 1, 1, "", "LinearGrid"], [4, 1, 1, "", "LinearProfile"], [4, 1, 1, "", "MixedZeroFluxAndActivity"], [4, 1, 1, "", "Options"], [4, 1, 1, "", "PointByPointGrid"], [4, 1, 1, "", "Region"], [4, 1, 1, "", "RuleOfMixtures"], [4, 1, 1, "", "RuleOfMixturesExcludedPhase"], [4, 1, 1, "", "SimulationTime"], [4, 1, 1, "", "Solver"], [4, 1, 1, "", "StepProfile"], [4, 1, 1, "", "TimestepControl"], [4, 1, 1, "", "Unit"]], "tc_python.diffusion.ActivityFluxFunction": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_flux_function"]], "tc_python.diffusion.AutomaticSolver": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_flux_balance_equation_accuracy"], [4, 2, 1, "", "set_tieline_search_variable_to_activity"], [4, 2, 1, "", "set_tieline_search_variable_to_potential"]], "tc_python.diffusion.BoundaryCondition": [[4, 2, 1, "", "activity_flux_function"], [4, 2, 1, "", "closed_system"], [4, 2, 1, "", "fix_flux_value"], [4, 2, 1, "", "fixed_compositions"], [4, 2, 1, "", "mixed_zero_flux_and_activity"]], "tc_python.diffusion.CalculatedGrid": [[4, 2, 1, "", "double_geometric"], [4, 2, 1, "", "geometric"], [4, 2, 1, "", "linear"]], "tc_python.diffusion.ClassicSolver": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_flux_balance_equation_accuracy"], [4, 2, 1, "", "set_tieline_search_variable_to_activity"], [4, 2, 1, "", "set_tieline_search_variable_to_potential"]], "tc_python.diffusion.ClosedSystem": [[4, 2, 1, "", "get_type"]], "tc_python.diffusion.CompositionProfile": [[4, 2, 1, "", "add"]], "tc_python.diffusion.ConstantProfile": [[4, 2, 1, "", "get_type"]], "tc_python.diffusion.ContinuedDiffusionCalculation": [[4, 2, 1, "", "calculate"], [4, 2, 1, "", "set_simulation_time"], [4, 2, 1, "", "with_left_boundary_condition"], [4, 2, 1, "", "with_options"], [4, 2, 1, "", "with_right_boundary_condition"], [4, 2, 1, "", "with_solver"], [4, 2, 1, "", "with_timestep_control"]], "tc_python.diffusion.DiffusionCalculationResult": [[4, 2, 1, "", "get_mass_fraction_at_lower_interface"], [4, 2, 1, "", "get_mass_fraction_at_upper_interface"], [4, 2, 1, "", "get_mass_fraction_of_component_at_time"], [4, 2, 1, "", "get_mass_fraction_of_phase_at_time"], [4, 2, 1, "", "get_mole_fraction_at_lower_interface"], [4, 2, 1, "", "get_mole_fraction_at_upper_interface"], [4, 2, 1, "", "get_mole_fraction_of_component_at_time"], [4, 2, 1, "", "get_mole_fraction_of_phase_at_time"], [4, 2, 1, "", "get_position_of_lower_boundary_of_region"], [4, 2, 1, "", "get_position_of_upper_boundary_of_region"], [4, 2, 1, "", "get_regions"], [4, 2, 1, "", "get_time_steps"], [4, 2, 1, "", "get_total_mass_fraction_of_component"], [4, 2, 1, "", "get_total_mass_fraction_of_component_in_phase"], [4, 2, 1, "", "get_total_mass_fraction_of_phase"], [4, 2, 1, "", "get_total_mole_fraction_of_component"], [4, 2, 1, "", "get_total_mole_fraction_of_component_in_phase"], [4, 2, 1, "", "get_total_mole_fraction_of_phase"], [4, 2, 1, "", "get_total_volume_fraction_of_phase"], [4, 2, 1, "", "get_values_of"], [4, 2, 1, "", "get_velocity_of_lower_boundary_of_region"], [4, 2, 1, "", "get_velocity_of_upper_boundary_of_region"], [4, 2, 1, "", "get_width_of_region"], [4, 2, 1, "", "save_to_disk"], [4, 2, 1, "", "with_continued_calculation"]], "tc_python.diffusion.DiffusionIsoThermalCalculation": [[4, 2, 1, "", "add_console_command"], [4, 2, 1, "", "add_region"], [4, 2, 1, "", "calculate"], [4, 2, 1, "", "get_system_data"], [4, 2, 1, "", "remove_all_console_commands"], [4, 2, 1, "", "remove_all_regions"], [4, 2, 1, "", "set_simulation_time"], [4, 2, 1, "", "set_temperature"], [4, 2, 1, "", "with_cylindrical_geometry"], [4, 2, 1, "", "with_left_boundary_condition"], [4, 2, 1, "", "with_options"], [4, 2, 1, "", "with_planar_geometry"], [4, 2, 1, "", "with_reference_state"], [4, 2, 1, "", "with_right_boundary_condition"], [4, 2, 1, "", "with_solver"], [4, 2, 1, "", "with_spherical_geometry"], [4, 2, 1, "", "with_system_modifications"], [4, 2, 1, "", "with_timestep_control"]], "tc_python.diffusion.DiffusionNonIsoThermalCalculation": [[4, 2, 1, "", "add_console_command"], [4, 2, 1, "", "add_region"], [4, 2, 1, "", "calculate"], [4, 2, 1, "", "get_system_data"], [4, 2, 1, "", "remove_all_console_commands"], [4, 2, 1, "", "remove_all_regions"], [4, 2, 1, "", "set_simulation_time"], [4, 2, 1, "", "with_cylindrical_geometry"], [4, 2, 1, "", "with_left_boundary_condition"], [4, 2, 1, "", "with_options"], [4, 2, 1, "", "with_planar_geometry"], [4, 2, 1, "", "with_reference_state"], [4, 2, 1, "", "with_right_boundary_condition"], [4, 2, 1, "", "with_solver"], [4, 2, 1, "", "with_spherical_geometry"], [4, 2, 1, "", "with_system_modifications"], [4, 2, 1, "", "with_temperature_profile"], [4, 2, 1, "", "with_timestep_control"]], "tc_python.diffusion.DoubleGeometricGrid": [[4, 2, 1, "", "get_lower_geometrical_factor"], [4, 2, 1, "", "get_no_of_points"], [4, 2, 1, "", "get_type"], [4, 2, 1, "", "get_upper_geometrical_factor"], [4, 2, 1, "", "set_lower_geometrical_factor"], [4, 2, 1, "", "set_no_of_points"], [4, 2, 1, "", "set_upper_geometrical_factor"]], "tc_python.diffusion.ElementProfile": [[4, 2, 1, "", "constant"], [4, 2, 1, "", "funct"], [4, 2, 1, "", "linear"], [4, 2, 1, "", "step"]], "tc_python.diffusion.FixFluxValue": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_flux"]], "tc_python.diffusion.FixedCompositions": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_composition"]], "tc_python.diffusion.FunctionProfile": [[4, 2, 1, "", "get_type"]], "tc_python.diffusion.GeometricGrid": [[4, 2, 1, "", "get_geometrical_factor"], [4, 2, 1, "", "get_no_of_points"], [4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_geometrical_factor"], [4, 2, 1, "", "set_no_of_points"]], "tc_python.diffusion.GridPoint": [[4, 2, 1, "", "add_composition"]], "tc_python.diffusion.HomogenizationFunction": [[4, 3, 1, "", "GENERAL_LOWER_HASHIN_SHTRIKMAN"], [4, 3, 1, "", "GENERAL_UPPER_HASHIN_SHTRIKMAN"], [4, 3, 1, "", "HASHIN_SHTRIKMAN_BOUND_MAJORITY"], [4, 3, 1, "", "INVERSE_RULE_OF_MIXTURES"], [4, 3, 1, "", "RULE_OF_MIXTURES"]], "tc_python.diffusion.HomogenizationFunctions": [[4, 2, 1, "", "general_lower_hashin_shtrikman"], [4, 2, 1, "", "general_lower_hashin_shtrikman_excluded_phase"], [4, 2, 1, "", "general_upper_hashin_shtrikman"], [4, 2, 1, "", "general_upper_hashin_shtrikman_excluded_phase"], [4, 2, 1, "", "hashin_shtrikman_bound_majority"], [4, 2, 1, "", "hashin_shtrikman_bound_majority_excluded_phase"], [4, 2, 1, "", "hashin_shtrikman_bound_prescribed"], [4, 2, 1, "", "hashin_shtrikman_bound_prescribed_excluded_phase"], [4, 2, 1, "", "inverse_rule_of_mixtures"], [4, 2, 1, "", "inverse_rule_of_mixtures_excluded_phase"], [4, 2, 1, "", "labyrinth_factor_f"], [4, 2, 1, "", "labyrinth_factor_f2"], [4, 2, 1, "", "rule_of_mixtures"], [4, 2, 1, "", "rule_of_mixtures_excluded_phase"]], "tc_python.diffusion.HomogenizationSolver": [[4, 2, 1, "", "disable_global_minimization"], [4, 2, 1, "", "disable_interpolation_scheme"], [4, 2, 1, "", "enable_global_minimization"], [4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_fraction_of_free_memory_to_use"], [4, 2, 1, "", "set_memory_to_use"], [4, 2, 1, "", "with_function"], [4, 2, 1, "", "with_linear_interpolation_scheme"], [4, 2, 1, "", "with_logarithmic_interpolation_scheme"]], "tc_python.diffusion.LinearGrid": [[4, 2, 1, "", "get_no_of_points"], [4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_no_of_points"]], "tc_python.diffusion.LinearProfile": [[4, 2, 1, "", "get_type"]], "tc_python.diffusion.MixedZeroFluxAndActivity": [[4, 2, 1, "", "get_type"], [4, 2, 1, "", "set_activity_for_element"], [4, 2, 1, "", "set_zero_flux_for_element"]], "tc_python.diffusion.Options": [[4, 2, 1, "", "disable_forced_starting_values_in_equilibrium_calculations"], [4, 2, 1, "", "disable_save_results_to_file"], [4, 2, 1, "", "enable_automatic_forced_starting_values_in_eq_calculations"], [4, 2, 1, "", "enable_forced_starting_values_in_equilibrium_calculations"], [4, 2, 1, "", "enable_save_results_to_file"], [4, 2, 1, "", "enable_time_integration_method_automatic"], [4, 2, 1, "", "enable_time_integration_method_euler_backwards"], [4, 2, 1, "", "enable_time_integration_method_trapezoidal"], [4, 2, 1, "", "set_default_driving_force_for_phases_allowed_to_form_at_interf"]], "tc_python.diffusion.PointByPointGrid": [[4, 2, 1, "", "add_point"], [4, 2, 1, "", "get_type"]], "tc_python.diffusion.Region": [[4, 2, 1, "", "add_phase"], [4, 2, 1, "", "add_phase_allowed_to_form_at_left_interface"], [4, 2, 1, "", "add_phase_allowed_to_form_at_right_interface"], [4, 2, 1, "", "remove_all_phases"], [4, 2, 1, "", "set_width"], [4, 2, 1, "", "with_composition_profile"], [4, 2, 1, "", "with_grid"], [4, 2, 1, "", "with_point_by_point_grid_containing_compositions"]], "tc_python.diffusion.SimulationTime": [[4, 3, 1, "", "FIRST"], [4, 3, 1, "", "LAST"]], "tc_python.diffusion.Solver": [[4, 2, 1, "", "automatic"], [4, 2, 1, "", "classic"], [4, 2, 1, "", "homogenization"]], "tc_python.diffusion.StepProfile": [[4, 2, 1, "", "get_type"]], "tc_python.diffusion.TimestepControl": [[4, 2, 1, "", "disable_check_interface_position"], [4, 2, 1, "", "enable_automatic_check_interface_position"], [4, 2, 1, "", "enable_check_interface_position"], [4, 2, 1, "", "set_initial_time_step"], [4, 2, 1, "", "set_max_absolute_error"], [4, 2, 1, "", "set_max_relative_error"], [4, 2, 1, "", "set_max_timestep_allowed_as_percent_of_simulation_time"], [4, 2, 1, "", "set_max_timestep_increase_factor"], [4, 2, 1, "", "set_smallest_time_step_allowed"]], "tc_python.diffusion.Unit": [[4, 3, 1, "", "MASS_FRACTION"], [4, 3, 1, "", "MASS_PERCENT"], [4, 3, 1, "", "MOLE_FRACTION"], [4, 3, 1, "", "MOLE_PERCENT"], [4, 3, 1, "", "U_FRACTION"]], "tc_python.entities": [[18, 1, 1, "", "CompositionSet"], [18, 1, 1, "", "Element"], [18, 1, 1, "", "Phase"], [18, 1, 1, "", "PhaseType"], [18, 1, 1, "", "Species"], [18, 1, 1, "", "Sublattice"]], "tc_python.entities.CompositionSet": [[18, 2, 1, "", "set_major_constituents_for_sublattice"]], "tc_python.entities.Element": [[18, 2, 1, "", "get_enthalpy"], [18, 2, 1, "", "get_entropy_diff_0_to_298k"], [18, 2, 1, "", "get_molar_mass"], [18, 2, 1, "", "get_name"], [18, 2, 1, "", "get_stable_element_reference"], [18, 2, 1, "", "is_interstitial"], [18, 2, 1, "", "is_special"], [18, 2, 1, "", "is_valid"]], "tc_python.entities.Phase": [[18, 2, 1, "", "get_name"], [18, 2, 1, "", "get_species"], [18, 2, 1, "", "get_species_for_composition_profile"], [18, 2, 1, "", "get_sublattices"], [18, 2, 1, "", "get_type"], [18, 2, 1, "", "has_diffusion_data"], [18, 2, 1, "", "has_molar_volume_data"], [18, 2, 1, "", "is_dilute_diffusion_model"], [18, 2, 1, "", "is_gas"], [18, 2, 1, "", "is_ionic_liquid"], [18, 2, 1, "", "is_liquid"], [18, 2, 1, "", "is_solid"]], "tc_python.entities.PhaseType": [[18, 3, 1, "", "GAS"], [18, 3, 1, "", "IONIC_LIQUID"], [18, 3, 1, "", "LIQUID"], [18, 3, 1, "", "SOLID"]], "tc_python.entities.Species": [[18, 2, 1, "", "get_all_elements"], [18, 2, 1, "", "get_charge"], [18, 2, 1, "", "get_name"], [18, 2, 1, "", "is_element"], [18, 2, 1, "", "is_interstitial"], [18, 2, 1, "", "is_special"], [18, 2, 1, "", "is_valid"], [18, 2, 1, "", "to_element"]], "tc_python.entities.Sublattice": [[18, 2, 1, "", "get_constituents"], [18, 2, 1, "", "get_nr_of_sites"]], "tc_python.exceptions": [[19, 4, 1, "", "APIServerException"], [19, 4, 1, "", "CalculationException"], [19, 4, 1, "", "ComponentNotExistingException"], [19, 4, 1, "", "DatabaseException"], [19, 4, 1, "", "DegreesOfFreedomNotZeroException"], [19, 4, 1, "", "EquilibriumException"], [19, 4, 1, "", "GeneralCalculationException"], [19, 4, 1, "", "GeneralException"], [19, 4, 1, "", "InvalidCalculationConfigurationException"], [19, 4, 1, "", "InvalidCalculationStateException"], [19, 4, 1, "", "InvalidNumberOfResultGroupsException"], [19, 4, 1, "", "InvalidResultConfigurationException"], [19, 4, 1, "", "InvalidResultStateException"], [19, 4, 1, "", "LicenseException"], [19, 4, 1, "", "NoDataForPhaseException"], [19, 4, 1, "", "NotAllowedOperationException"], [19, 4, 1, "", "PhaseNotExistingException"], [19, 4, 1, "", "ResultException"], [19, 4, 1, "", "SyntaxException"], [19, 4, 1, "", "TCException"], [19, 4, 1, "", "UnrecoverableCalculationException"], [19, 5, 1, "", "handle_exception"]], "tc_python.material_to_material": [[5, 1, 1, "", "AbstractConstantCondition"], [5, 1, 1, "", "AbstractMaterialToMaterialCalculationAxis"], [5, 1, 1, "", "ConstantCondition"], [5, 1, 1, "", "FractionOfMaterialBAxis"], [5, 1, 1, "", "FractionOfMaterialBCondition"], [5, 1, 1, "", "MaterialToMaterialCalculationAxis"], [5, 1, 1, "", "MaterialToMaterialCalculationContainer"], [5, 1, 1, "", "MaterialToMaterialPhaseDiagramCalculation"], [5, 1, 1, "", "MaterialToMaterialPhaseDiagramResult"], [5, 1, 1, "", "MaterialToMaterialPropertyDiagramCalculation"], [5, 1, 1, "", "MaterialToMaterialPropertyDiagramResult"], [5, 1, 1, "", "MaterialToMaterialSingleEquilibriumCalculation"], [5, 1, 1, "", "MaterialToMaterialSingleEquilibriumResult"], [5, 1, 1, "", "TemperatureAxis"], [5, 1, 1, "", "TemperatureCondition"]], "tc_python.material_to_material.ConstantCondition": [[5, 2, 1, "", "fraction_of_material_b"], [5, 2, 1, "", "temperature"]], "tc_python.material_to_material.MaterialToMaterialCalculationAxis": [[5, 2, 1, "", "fraction_of_material_b"], [5, 2, 1, "", "temperature"]], "tc_python.material_to_material.MaterialToMaterialCalculationContainer": [[5, 2, 1, "", "with_phase_diagram_calculation"], [5, 2, 1, "", "with_property_diagram_calculation"], [5, 2, 1, "", "with_single_equilibrium_calculation"]], "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation": [[5, 2, 1, "", "add_initial_equilibrium"], [5, 2, 1, "", "calculate"], [5, 2, 1, "", "disable_global_minimization"], [5, 2, 1, "", "dont_keep_default_equilibria"], [5, 2, 1, "", "enable_global_minimization"], [5, 2, 1, "", "get_components"], [5, 2, 1, "", "get_gibbs_energy_addition_for"], [5, 2, 1, "", "get_system_data"], [5, 2, 1, "", "keep_default_equilibria"], [5, 2, 1, "", "remove_all_initial_equilibria"], [5, 2, 1, "", "run_poly_command"], [5, 2, 1, "", "set_activities"], [5, 2, 1, "", "set_composition_unit"], [5, 2, 1, "", "set_gibbs_energy_addition_for"], [5, 2, 1, "", "set_material_a"], [5, 2, 1, "", "set_material_b"], [5, 2, 1, "", "set_phase_to_dormant"], [5, 2, 1, "", "set_phase_to_entered"], [5, 2, 1, "", "set_phase_to_fixed"], [5, 2, 1, "", "set_phase_to_suspended"], [5, 2, 1, "", "set_pressure"], [5, 2, 1, "", "set_system_size"], [5, 2, 1, "", "with_first_axis"], [5, 2, 1, "", "with_options"], [5, 2, 1, "", "with_reference_state"], [5, 2, 1, "", "with_second_axis"], [5, 2, 1, "", "with_system_modifications"]], "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult": [[5, 2, 1, "", "add_coordinate_for_phase_label"], [5, 2, 1, "", "get_values_grouped_by_quantity_of"], [5, 2, 1, "", "get_values_grouped_by_stable_phases_of"], [5, 2, 1, "", "remove_phase_labels"], [5, 2, 1, "", "save_to_disk"], [5, 2, 1, "", "set_phase_name_style"]], "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation": [[5, 2, 1, "", "calculate"], [5, 2, 1, "", "disable_global_minimization"], [5, 2, 1, "", "disable_step_separate_phases"], [5, 2, 1, "", "enable_global_minimization"], [5, 2, 1, "", "enable_step_separate_phases"], [5, 2, 1, "", "get_components"], [5, 2, 1, "", "get_gibbs_energy_addition_for"], [5, 2, 1, "", "get_system_data"], [5, 2, 1, "", "run_poly_command"], [5, 2, 1, "", "set_activities"], [5, 2, 1, "", "set_composition_unit"], [5, 2, 1, "", "set_gibbs_energy_addition_for"], [5, 2, 1, "", "set_material_a"], [5, 2, 1, "", "set_material_b"], [5, 2, 1, "", "set_phase_to_dormant"], [5, 2, 1, "", "set_phase_to_entered"], [5, 2, 1, "", "set_phase_to_fixed"], [5, 2, 1, "", "set_phase_to_suspended"], [5, 2, 1, "", "set_pressure"], [5, 2, 1, "", "set_system_size"], [5, 2, 1, "", "with_axis"], [5, 2, 1, "", "with_constant_condition"], [5, 2, 1, "", "with_options"], [5, 2, 1, "", "with_reference_state"], [5, 2, 1, "", "with_system_modifications"]], "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult": [[5, 2, 1, "", "get_values_grouped_by_quantity_of"], [5, 2, 1, "", "get_values_grouped_by_stable_phases_of"], [5, 2, 1, "", "get_values_of"], [5, 2, 1, "", "save_to_disk"], [5, 2, 1, "", "set_phase_name_style"]], "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation": [[5, 2, 1, "", "calculate"], [5, 2, 1, "", "disable_global_minimization"], [5, 2, 1, "", "enable_global_minimization"], [5, 2, 1, "", "get_components"], [5, 2, 1, "", "get_gibbs_energy_addition_for"], [5, 2, 1, "", "get_system_data"], [5, 2, 1, "", "run_poly_command"], [5, 2, 1, "", "set_activities"], [5, 2, 1, "", "set_component_to_entered"], [5, 2, 1, "", "set_component_to_suspended"], [5, 2, 1, "", "set_composition_unit"], [5, 2, 1, "", "set_gibbs_energy_addition_for"], [5, 2, 1, "", "set_material_a"], [5, 2, 1, "", "set_material_b"], [5, 2, 1, "", "set_phase_to_dormant"], [5, 2, 1, "", "set_phase_to_entered"], [5, 2, 1, "", "set_phase_to_fixed"], [5, 2, 1, "", "set_phase_to_suspended"], [5, 2, 1, "", "set_pressure"], [5, 2, 1, "", "set_system_size"], [5, 2, 1, "", "with_first_constant_condition"], [5, 2, 1, "", "with_options"], [5, 2, 1, "", "with_reference_state"], [5, 2, 1, "", "with_second_constant_condition"], [5, 2, 1, "", "with_system_modifications"]], "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult": [[5, 2, 1, "", "change_pressure"], [5, 2, 1, "", "change_temperature"], [5, 2, 1, "", "get_components"], [5, 2, 1, "", "get_conditions"], [5, 2, 1, "", "get_phases"], [5, 2, 1, "", "get_stable_phases"], [5, 2, 1, "", "get_value_of"], [5, 2, 1, "", "run_poly_command"], [5, 2, 1, "", "save_to_disk"]], "tc_python.precipitation": [[6, 1, 1, "", "FixedGrainSize"], [6, 1, 1, "", "GrainGrowth"], [6, 1, 1, "", "GrainGrowthModel"], [6, 1, 1, "", "GrainSizeDistribution"], [6, 1, 1, "", "GrowthRateModel"], [6, 1, 1, "", "MatrixPhase"], [6, 1, 1, "", "NumericalParameters"], [6, 1, 1, "", "ParticleSizeDistribution"], [6, 1, 1, "", "PrecipitateElasticProperties"], [6, 1, 1, "", "PrecipitateMorphology"], [6, 1, 1, "", "PrecipitatePhase"], [6, 1, 1, "", "PrecipitationCCTCalculation"], [6, 1, 1, "", "PrecipitationCalculationResult"], [6, 1, 1, "", "PrecipitationCalculationSingleResult"], [6, 1, 1, "", "PrecipitationCalculationTTTorCCTResult"], [6, 1, 1, "", "PrecipitationIsoThermalCalculation"], [6, 1, 1, "", "PrecipitationNonIsoThermalCalculation"], [6, 1, 1, "", "PrecipitationTTTCalculation"], [6, 1, 1, "", "TransformationStrainCalculationOption"], [6, 1, 1, "", "VolumeFractionOfPhaseType"]], "tc_python.precipitation.FixedGrainSize": [[6, 2, 1, "", "set_grain_aspect_ratio"]], "tc_python.precipitation.GrainGrowth": [[6, 2, 1, "", "disable_zener_pinning"], [6, 2, 1, "", "enable_zener_pinning"], [6, 2, 1, "", "set_grain_boundary_energy"], [6, 2, 1, "", "set_grain_boundary_mobility_activation_energy"], [6, 2, 1, "", "set_grain_boundary_mobility_pre_factor"]], "tc_python.precipitation.GrainGrowthModel": [[6, 2, 1, "", "fixed_grain_size"], [6, 2, 1, "", "grain_growth"]], "tc_python.precipitation.GrainSizeDistribution": [[6, 2, 1, "", "add_radius_and_number_density"]], "tc_python.precipitation.GrowthRateModel": [[6, 3, 1, "", "ADVANCED"], [6, 3, 1, "", "GENERAL"], [6, 3, 1, "", "NPLE"], [6, 3, 1, "", "PARA_EQ"], [6, 3, 1, "", "PE_AUTOMATIC"], [6, 3, 1, "", "SIMPLIFIED"]], "tc_python.precipitation.MatrixPhase": [[6, 2, 1, "", "add_precipitate_phase"], [6, 2, 1, "", "set_dislocation_density"], [6, 2, 1, "", "set_mobility_adjustment"], [6, 2, 1, "", "set_mobility_enhancement_activation_energy"], [6, 2, 1, "", "set_mobility_enhancement_prefactor"], [6, 2, 1, "", "set_molar_volume"], [6, 2, 1, "", "with_elastic_properties_cubic"], [6, 2, 1, "", "with_elastic_properties_disregard"], [6, 2, 1, "", "with_elastic_properties_isotropic"], [6, 2, 1, "", "with_grain_growth_model"]], "tc_python.precipitation.NumericalParameters": [[6, 2, 1, "", "set_max_overall_volume_change"], [6, 2, 1, "", "set_max_radius_points_per_magnitude"], [6, 2, 1, "", "set_max_rel_change_critical_radius"], [6, 2, 1, "", "set_max_rel_change_nucleation_rate_log"], [6, 2, 1, "", "set_max_rel_radius_change"], [6, 2, 1, "", "set_max_rel_solute_composition_change"], [6, 2, 1, "", "set_max_time_step"], [6, 2, 1, "", "set_max_time_step_during_heating"], [6, 2, 1, "", "set_max_volume_fraction_dissolve_time_step"], [6, 2, 1, "", "set_min_radius_nucleus_as_particle"], [6, 2, 1, "", "set_min_radius_points_per_magnitude"], [6, 2, 1, "", "set_radius_points_per_magnitude"], [6, 2, 1, "", "set_rel_radius_change_class_collision"]], "tc_python.precipitation.ParticleSizeDistribution": [[6, 2, 1, "", "add_radius_and_number_density"], [6, 2, 1, "", "set_initial_composition"], [6, 2, 1, "", "set_volume_fraction_of_phase_type"], [6, 2, 1, "", "set_volume_fraction_of_phase_value"]], "tc_python.precipitation.PrecipitateElasticProperties": [[6, 2, 1, "", "set_e11"], [6, 2, 1, "", "set_e12"], [6, 2, 1, "", "set_e13"], [6, 2, 1, "", "set_e22"], [6, 2, 1, "", "set_e23"], [6, 2, 1, "", "set_e33"]], "tc_python.precipitation.PrecipitateMorphology": [[6, 3, 1, "", "CUBOID"], [6, 3, 1, "", "NEEDLE"], [6, 3, 1, "", "PLATE"], [6, 3, 1, "", "SPHERE"]], "tc_python.precipitation.PrecipitatePhase": [[6, 2, 1, "", "disable_calculate_aspect_ratio_from_elastic_energy"], [6, 2, 1, "", "disable_driving_force_approximation"], [6, 2, 1, "", "enable_calculate_aspect_ratio_from_elastic_energy"], [6, 2, 1, "", "enable_driving_force_approximation"], [6, 2, 1, "", "set_alias"], [6, 2, 1, "", "set_aspect_ratio_value"], [6, 2, 1, "", "set_gibbs_energy_addition"], [6, 2, 1, "", "set_interfacial_energy"], [6, 2, 1, "", "set_interfacial_energy_estimation_prefactor"], [6, 2, 1, "", "set_molar_volume"], [6, 2, 1, "", "set_nucleation_at_dislocations"], [6, 2, 1, "", "set_nucleation_at_grain_boundaries"], [6, 2, 1, "", "set_nucleation_at_grain_corners"], [6, 2, 1, "", "set_nucleation_at_grain_edges"], [6, 2, 1, "", "set_nucleation_in_bulk"], [6, 2, 1, "", "set_phase_boundary_mobility"], [6, 2, 1, "", "set_precipitate_morphology"], [6, 2, 1, "", "set_trans_interface_mobility_adjustment"], [6, 2, 1, "", "set_transformation_strain_calculation_option"], [6, 2, 1, "", "set_zener_pinning_parameters"], [6, 2, 1, "", "with_elastic_properties"], [6, 2, 1, "", "with_growth_rate_model"], [6, 2, 1, "", "with_particle_size_distribution"]], "tc_python.precipitation.PrecipitationCCTCalculation": [[6, 2, 1, "", "calculate"], [6, 2, 1, "", "get_system_data"], [6, 2, 1, "", "set_composition"], [6, 2, 1, "", "set_composition_unit"], [6, 2, 1, "", "set_cooling_rates"], [6, 2, 1, "", "set_max_temperature"], [6, 2, 1, "", "set_min_temperature"], [6, 2, 1, "", "stop_at_volume_fraction_of_phase"], [6, 2, 1, "", "with_matrix_phase"], [6, 2, 1, "", "with_numerical_parameters"], [6, 2, 1, "", "with_system_modifications"]], "tc_python.precipitation.PrecipitationCalculationResult": [[6, 2, 1, "", "save_to_disk"]], "tc_python.precipitation.PrecipitationCalculationSingleResult": [[6, 2, 1, "", "get_aspect_ratio_distribution_for_particle_length_of"], [6, 2, 1, "", "get_aspect_ratio_distribution_for_radius_of"], [6, 2, 1, "", "get_critical_radius_of"], [6, 2, 1, "", "get_cubic_factor_distribution_for_particle_length_of"], [6, 2, 1, "", "get_cubic_factor_distribution_for_radius_of"], [6, 2, 1, "", "get_driving_force_of"], [6, 2, 1, "", "get_grain_critical_radius"], [6, 2, 1, "", "get_grain_mean_radius"], [6, 2, 1, "", "get_grain_number_density"], [6, 2, 1, "", "get_grain_number_density_distribution_for_length"], [6, 2, 1, "", "get_grain_number_density_distribution_for_radius"], [6, 2, 1, "", "get_grain_size_distribution"], [6, 2, 1, "", "get_matrix_composition_in_mole_fraction_of"], [6, 2, 1, "", "get_matrix_composition_in_weight_fraction_of"], [6, 2, 1, "", "get_mean_aspect_ratio_of"], [6, 2, 1, "", "get_mean_cubic_factor_of"], [6, 2, 1, "", "get_mean_particle_length_of"], [6, 2, 1, "", "get_mean_radius_of"], [6, 2, 1, "", "get_normalized_grain_size_distribution"], [6, 2, 1, "", "get_normalized_number_density_distribution_of"], [6, 2, 1, "", "get_nucleation_rate_of"], [6, 2, 1, "", "get_number_density_distribution_for_particle_length_of"], [6, 2, 1, "", "get_number_density_distribution_for_radius_of"], [6, 2, 1, "", "get_number_density_of"], [6, 2, 1, "", "get_precipitate_composition_in_mole_fraction_of"], [6, 2, 1, "", "get_precipitate_composition_in_weight_fraction_of"], [6, 2, 1, "", "get_size_distribution_for_particle_length_of"], [6, 2, 1, "", "get_size_distribution_for_radius_of"], [6, 2, 1, "", "get_volume_fraction_of"]], "tc_python.precipitation.PrecipitationCalculationTTTorCCTResult": [[6, 2, 1, "", "get_result_for_precipitate"]], "tc_python.precipitation.PrecipitationIsoThermalCalculation": [[6, 2, 1, "", "calculate"], [6, 2, 1, "", "get_system_data"], [6, 2, 1, "", "set_composition"], [6, 2, 1, "", "set_composition_unit"], [6, 2, 1, "", "set_simulation_time"], [6, 2, 1, "", "set_temperature"], [6, 2, 1, "", "with_matrix_phase"], [6, 2, 1, "", "with_numerical_parameters"], [6, 2, 1, "", "with_system_modifications"]], "tc_python.precipitation.PrecipitationNonIsoThermalCalculation": [[6, 2, 1, "", "calculate"], [6, 2, 1, "", "get_system_data"], [6, 2, 1, "", "set_composition"], [6, 2, 1, "", "set_composition_unit"], [6, 2, 1, "", "set_simulation_time"], [6, 2, 1, "", "with_matrix_phase"], [6, 2, 1, "", "with_numerical_parameters"], [6, 2, 1, "", "with_system_modifications"], [6, 2, 1, "", "with_temperature_profile"]], "tc_python.precipitation.PrecipitationTTTCalculation": [[6, 2, 1, "", "calculate"], [6, 2, 1, "", "get_system_data"], [6, 2, 1, "", "set_composition"], [6, 2, 1, "", "set_composition_unit"], [6, 2, 1, "", "set_max_annealing_time"], [6, 2, 1, "", "set_max_temperature"], [6, 2, 1, "", "set_min_temperature"], [6, 2, 1, "", "set_temperature_step"], [6, 2, 1, "", "stop_at_percent_of_equilibrium_fraction"], [6, 2, 1, "", "stop_at_volume_fraction_of_phase"], [6, 2, 1, "", "with_matrix_phase"], [6, 2, 1, "", "with_numerical_parameters"], [6, 2, 1, "", "with_system_modifications"]], "tc_python.precipitation.TransformationStrainCalculationOption": [[6, 3, 1, "", "CALCULATE_FROM_MOLAR_VOLUME"], [6, 3, 1, "", "DISREGARD"], [6, 3, 1, "", "USER_DEFINED"]], "tc_python.precipitation.VolumeFractionOfPhaseType": [[6, 3, 1, "", "VOLUME_FRACTION"], [6, 3, 1, "", "VOLUME_PERCENT"]], "tc_python.process_metallurgy": [[8, 0, 0, "-", "base"], [9, 0, 0, "-", "equilibrium"], [10, 0, 0, "-", "process"]], "tc_python.process_metallurgy.base": [[8, 1, 1, "", "AbstractAddition"], [8, 1, 1, "", "ActivityReference"], [8, 1, 1, "", "PhaseGroup"], [8, 1, 1, "", "ProcessDatabase"], [8, 1, 1, "", "ProcessMetallurgyOptions"], [8, 1, 1, "", "ProcessMinimizationPolicy"], [8, 1, 1, "", "SlagProperty"], [8, 1, 1, "", "SlagType"]], "tc_python.process_metallurgy.base.AbstractAddition": [[8, 2, 1, "", "get_composition"], [8, 2, 1, "", "get_composition_unit"], [8, 2, 1, "", "get_dependent_component"], [8, 2, 1, "", "get_elements"], [8, 2, 1, "", "get_id"], [8, 2, 1, "", "get_temperature"], [8, 2, 1, "", "is_do_scale"], [8, 2, 1, "", "is_empty"]], "tc_python.process_metallurgy.base.ActivityReference": [[8, 3, 1, "", "LIQUID"], [8, 3, 1, "", "SOLID"]], "tc_python.process_metallurgy.base.PhaseGroup": [[8, 3, 1, "", "ALL_METAL"], [8, 3, 1, "", "ALL_SLAG"], [8, 3, 1, "", "GAS"], [8, 3, 1, "", "LIQUID_METAL"], [8, 3, 1, "", "LIQUID_SLAG"], [8, 3, 1, "", "SOLID_METAL"], [8, 3, 1, "", "SOLID_SLAG"]], "tc_python.process_metallurgy.base.ProcessDatabase": [[8, 3, 1, "", "LATEST"], [8, 3, 1, "", "OXDEMO"], [8, 3, 1, "", "TCOX10"], [8, 3, 1, "", "TCOX11"], [8, 3, 1, "", "TCOX12"], [8, 3, 1, "", "TCOX8"], [8, 3, 1, "", "TCOX9"], [8, 2, 1, "", "get_name"]], "tc_python.process_metallurgy.base.ProcessMetallurgyOptions": [[8, 2, 1, "", "disable_approximate_driving_force_for_metastable_phases"], [8, 2, 1, "", "disable_control_step_size_during_minimization"], [8, 2, 1, "", "disable_force_positive_definite_phase_hessian"], [8, 2, 1, "", "enable_approximate_driving_force_for_metastable_phases"], [8, 2, 1, "", "enable_control_step_size_during_minimization"], [8, 2, 1, "", "enable_force_positive_definite_phase_hessian"], [8, 2, 1, "", "set_global_minimization_max_grid_points"], [8, 2, 1, "", "set_max_no_of_iterations"], [8, 2, 1, "", "set_process_minimization_policy"], [8, 2, 1, "", "set_required_accuracy"], [8, 2, 1, "", "set_smallest_fraction"]], "tc_python.process_metallurgy.base.ProcessMinimizationPolicy": [[8, 3, 1, "", "GLOBAL"], [8, 3, 1, "", "GLOBAL_TEST"], [8, 3, 1, "", "GLOBAL_TEST__GLOBAL"], [8, 3, 1, "", "LOCAL"], [8, 3, 1, "", "LOCAL__GLOBAL_TEST"], [8, 3, 1, "", "LOCAL__GLOBAL_TEST__GLOBAL"]], "tc_python.process_metallurgy.base.SlagProperty": [[8, 3, 1, "", "B2"], [8, 3, 1, "", "B3"], [8, 3, 1, "", "B4"], [8, 3, 1, "", "BAS2"], [8, 3, 1, "", "BELLS_RATIO"], [8, 3, 1, "", "LOG_10_SULPHUR_CAPACITY"], [8, 3, 1, "", "LS"]], "tc_python.process_metallurgy.base.SlagType": [[8, 3, 1, "", "ALL"], [8, 3, 1, "", "LIQUID"], [8, 3, 1, "", "SOLID"]], "tc_python.process_metallurgy.equilibrium": [[9, 1, 1, "", "AbstractEquilibriumAddition"], [9, 1, 1, "", "AdiabaticEquilibriumCalculation"], [9, 1, 1, "", "EquilibriumAddition"], [9, 1, 1, "", "EquilibriumCalculation"], [9, 1, 1, "", "EquilibriumGasAddition"], [9, 1, 1, "", "EquilibriumResult"], [9, 1, 1, "", "IsoThermalEquilibriumCalculation"]], "tc_python.process_metallurgy.equilibrium.AbstractEquilibriumAddition": [[9, 2, 1, "", "set_amount"], [9, 2, 1, "", "set_component_composition"]], "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation": [[9, 2, 1, "", "add_addition"], [9, 2, 1, "", "add_poly_command"], [9, 2, 1, "", "calculate"], [9, 2, 1, "", "remove_addition"], [9, 2, 1, "", "remove_all_additions"], [9, 2, 1, "", "set_pressure"], [9, 2, 1, "", "with_options"]], "tc_python.process_metallurgy.equilibrium.EquilibriumAddition": [[9, 2, 1, "", "get_amount"], [9, 2, 1, "", "get_composition_unit"]], "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation": [[9, 2, 1, "", "add_addition"], [9, 2, 1, "", "add_poly_command"], [9, 2, 1, "", "calculate"], [9, 2, 1, "", "remove_addition"], [9, 2, 1, "", "remove_all_additions"], [9, 2, 1, "", "set_pressure"], [9, 2, 1, "", "update_addition"], [9, 2, 1, "", "with_options"]], "tc_python.process_metallurgy.equilibrium.EquilibriumGasAddition": [[9, 2, 1, "", "get_amount"], [9, 2, 1, "", "get_amount_unit"], [9, 2, 1, "", "get_composition_unit"]], "tc_python.process_metallurgy.equilibrium.EquilibriumResult": [[9, 2, 1, "", "get_activity_of_slag"], [9, 2, 1, "", "get_amount"], [9, 2, 1, "", "get_amount_of_elements"], [9, 2, 1, "", "get_amount_of_phase_groups"], [9, 2, 1, "", "get_amount_of_phases"], [9, 2, 1, "", "get_components"], [9, 2, 1, "", "get_composition"], [9, 2, 1, "", "get_composition_of_phase"], [9, 2, 1, "", "get_composition_of_phase_group"], [9, 2, 1, "", "get_elements"], [9, 2, 1, "", "get_formula_for_activity_of_slag"], [9, 2, 1, "", "get_formula_for_slag_property"], [9, 2, 1, "", "get_fraction_of_phase_groups"], [9, 2, 1, "", "get_fraction_of_phases"], [9, 2, 1, "", "get_gas_components"], [9, 2, 1, "", "get_oxygen_partial_pressure"], [9, 2, 1, "", "get_pressure"], [9, 2, 1, "", "get_slag_property"], [9, 2, 1, "", "get_stable_phases"], [9, 2, 1, "", "get_stable_phases_in_phase_group"], [9, 2, 1, "", "get_temperature"], [9, 2, 1, "", "get_value_of"], [9, 2, 1, "", "get_viscosity_dynamic_of_phase"], [9, 2, 1, "", "get_viscosity_kinematic_of_phase"]], "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation": [[9, 2, 1, "", "add_addition"], [9, 2, 1, "", "add_poly_command"], [9, 2, 1, "", "calculate"], [9, 2, 1, "", "remove_addition"], [9, 2, 1, "", "remove_all_additions"], [9, 2, 1, "", "set_pressure"], [9, 2, 1, "", "set_temperature"], [9, 2, 1, "", "update_addition"], [9, 2, 1, "", "with_options"]], "tc_python.process_metallurgy.process": [[10, 1, 1, "", "AbstractContinuousAddition"], [10, 1, 1, "", "AbstractProcessAddition"], [10, 1, 1, "", "AbstractSingleTimeAddition"], [10, 1, 1, "", "BulkZone"], [10, 1, 1, "", "ContinuousAddition"], [10, 1, 1, "", "ContinuousGasAddition"], [10, 1, 1, "", "ExhaustGasResult"], [10, 1, 1, "", "MassTransferCoefficients"], [10, 1, 1, "", "MetalBulkZone"], [10, 1, 1, "", "ProcessSimulationCalculation"], [10, 1, 1, "", "ProcessSimulationResult"], [10, 1, 1, "", "ReactionZone"], [10, 1, 1, "", "SingleTimeAddition"], [10, 1, 1, "", "SingleTimeGasAddition"], [10, 1, 1, "", "SlagBulkZone"], [10, 1, 1, "", "TransferOfPhaseGroup"], [10, 1, 1, "", "Zone"]], "tc_python.process_metallurgy.process.BulkZone": [[10, 2, 1, "", "add_addition"], [10, 2, 1, "", "add_continuous_addition"], [10, 2, 1, "", "add_power"], [10, 2, 1, "", "disable_degassing"], [10, 2, 1, "", "enable_degassing"], [10, 2, 1, "", "get_density"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_id"], [10, 2, 1, "", "get_phase_group_to_transfer"], [10, 2, 1, "", "is_degassing_enabled"]], "tc_python.process_metallurgy.process.ContinuousAddition": [[10, 2, 1, "", "get_composition_unit"], [10, 2, 1, "", "get_rate"]], "tc_python.process_metallurgy.process.ContinuousGasAddition": [[10, 2, 1, "", "get_composition_unit"], [10, 2, 1, "", "get_rate"], [10, 2, 1, "", "get_rate_unit"]], "tc_python.process_metallurgy.process.ExhaustGasResult": [[10, 2, 1, "", "get_amount"], [10, 2, 1, "", "get_amount_of_components"], [10, 2, 1, "", "get_composition"], [10, 2, 1, "", "get_pressure"], [10, 2, 1, "", "get_stable_phases"], [10, 2, 1, "", "get_temperature"]], "tc_python.process_metallurgy.process.MassTransferCoefficients": [[10, 2, 1, "", "add"]], "tc_python.process_metallurgy.process.MetalBulkZone": [[10, 2, 1, "", "add_addition"], [10, 2, 1, "", "add_continuous_addition"], [10, 2, 1, "", "add_power"], [10, 2, 1, "", "disable_degassing"], [10, 2, 1, "", "enable_degassing"], [10, 2, 1, "", "get_density"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_id"], [10, 2, 1, "", "get_phase_group_to_transfer"], [10, 2, 1, "", "is_degassing_enabled"]], "tc_python.process_metallurgy.process.ProcessSimulationCalculation": [[10, 2, 1, "", "calculate"], [10, 2, 1, "", "set_end_time"], [10, 2, 1, "", "set_initial_time_step"], [10, 2, 1, "", "set_max_allowed_temp_change_per_step"], [10, 2, 1, "", "set_max_time_step"], [10, 2, 1, "", "set_min_time_step"], [10, 2, 1, "", "set_pressure"], [10, 2, 1, "", "set_pressure_in_time_period"], [10, 2, 1, "", "with_options"], [10, 2, 1, "", "with_reaction_zone"]], "tc_python.process_metallurgy.process.ProcessSimulationResult": [[10, 2, 1, "", "get_activity_of_slag"], [10, 2, 1, "", "get_amount"], [10, 2, 1, "", "get_amount_of_elements"], [10, 2, 1, "", "get_amount_of_phase_groups"], [10, 2, 1, "", "get_amount_of_phases"], [10, 2, 1, "", "get_components"], [10, 2, 1, "", "get_composition"], [10, 2, 1, "", "get_composition_of_phase"], [10, 2, 1, "", "get_composition_of_phase_group"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_enthalpy"], [10, 2, 1, "", "get_exhaust_gas"], [10, 2, 1, "", "get_formula_for_activity_of_slag"], [10, 2, 1, "", "get_formula_for_slag_property"], [10, 2, 1, "", "get_fraction_of_phase_groups"], [10, 2, 1, "", "get_fraction_of_phases"], [10, 2, 1, "", "get_gas_components"], [10, 2, 1, "", "get_num_of_performed_steps"], [10, 2, 1, "", "get_oxygen_partial_pressure"], [10, 2, 1, "", "get_pressure"], [10, 2, 1, "", "get_slag_property"], [10, 2, 1, "", "get_stable_phases"], [10, 2, 1, "", "get_stable_phases_in_phase_group"], [10, 2, 1, "", "get_temperature"], [10, 2, 1, "", "get_time_points"], [10, 2, 1, "", "get_value_of"], [10, 2, 1, "", "get_viscosity_dynamic_of_phase"], [10, 2, 1, "", "get_viscosity_kinematic_of_phase"]], "tc_python.process_metallurgy.process.ReactionZone": [[10, 2, 1, "", "add_addition"], [10, 2, 1, "", "add_continuous_addition"], [10, 2, 1, "", "add_heat_transfer"], [10, 2, 1, "", "add_power"], [10, 2, 1, "", "add_transfer_of_phase_group"], [10, 2, 1, "", "disable_degassing"], [10, 2, 1, "", "enable_degassing"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_id"], [10, 2, 1, "", "is_degassing_enabled"]], "tc_python.process_metallurgy.process.SingleTimeAddition": [[10, 2, 1, "", "get_amount"], [10, 2, 1, "", "get_composition_unit"]], "tc_python.process_metallurgy.process.SingleTimeGasAddition": [[10, 2, 1, "", "get_amount"], [10, 2, 1, "", "get_amount_unit"], [10, 2, 1, "", "get_composition_unit"]], "tc_python.process_metallurgy.process.SlagBulkZone": [[10, 2, 1, "", "add_addition"], [10, 2, 1, "", "add_continuous_addition"], [10, 2, 1, "", "add_power"], [10, 2, 1, "", "disable_degassing"], [10, 2, 1, "", "enable_degassing"], [10, 2, 1, "", "get_density"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_id"], [10, 2, 1, "", "get_phase_group_to_transfer"], [10, 2, 1, "", "is_degassing_enabled"]], "tc_python.process_metallurgy.process.TransferOfPhaseGroup": [[10, 2, 1, "", "add"], [10, 2, 1, "", "get_phase_group_to_transfer"], [10, 2, 1, "", "get_transfer_source_zone_id"]], "tc_python.process_metallurgy.process.Zone": [[10, 2, 1, "", "add_addition"], [10, 2, 1, "", "add_continuous_addition"], [10, 2, 1, "", "add_power"], [10, 2, 1, "", "disable_degassing"], [10, 2, 1, "", "enable_degassing"], [10, 2, 1, "", "get_elements"], [10, 2, 1, "", "get_id"], [10, 2, 1, "", "is_degassing_enabled"]], "tc_python.propertymodel": [[11, 1, 1, "", "PropertyModelCalculation"], [11, 1, 1, "", "PropertyModelResult"]], "tc_python.propertymodel.PropertyModelCalculation": [[11, 2, 1, "", "add_poly_command"], [11, 2, 1, "", "calculate"], [11, 2, 1, "", "get_argument_default"], [11, 2, 1, "", "get_argument_description"], [11, 2, 1, "", "get_arguments"], [11, 2, 1, "", "get_dynamic_arguments"], [11, 2, 1, "", "get_model_description"], [11, 2, 1, "", "get_model_parameter_value"], [11, 2, 1, "", "get_model_parameters"], [11, 2, 1, "", "get_system_data"], [11, 2, 1, "", "invoke_dynamic_argument"], [11, 2, 1, "", "remove_all_conditions"], [11, 2, 1, "", "remove_all_poly_commands"], [11, 2, 1, "", "remove_dependent_element"], [11, 2, 1, "", "set_argument"], [11, 2, 1, "", "set_composition"], [11, 2, 1, "", "set_composition_unit"], [11, 2, 1, "", "set_condition"], [11, 2, 1, "", "set_dependent_element"], [11, 2, 1, "", "set_model_parameter"], [11, 2, 1, "", "set_temperature"], [11, 2, 1, "", "with_system_modifications"]], "tc_python.propertymodel.PropertyModelResult": [[11, 2, 1, "", "get_result_quantities"], [11, 2, 1, "", "get_result_quantity_description"], [11, 2, 1, "", "get_single_equilibrium_result"], [11, 2, 1, "", "get_value_of"], [11, 2, 1, "", "save_to_disk"]], "tc_python.propertymodel_sdk": [[20, 1, 1, "", "CCTResult"], [20, 1, 1, "", "CCTResultValues"], [20, 1, 1, "", "CalculationContext"], [20, 1, 1, "", "ConditionListEntry"], [20, 1, 1, "", "PropertyModel"], [20, 1, 1, "", "ResultQuantity"], [20, 1, 1, "", "ResultQuantityType"], [20, 1, 1, "", "SpecialListMarkers"], [20, 1, 1, "", "UIBooleanComponent"], [20, 1, 1, "", "UIComponent"], [20, 1, 1, "", "UIConditionListComponent"], [20, 1, 1, "", "UIFloatComponent"], [20, 1, 1, "", "UIGeneralListComponent"], [20, 1, 1, "", "UIPhaseListComponent"], [20, 1, 1, "", "UISectionDividerComponent"], [20, 1, 1, "", "UIStringComponent"], [20, 1, 1, "", "UITemperatureComponent"], [20, 5, 1, "", "create_boolean_ui_component"], [20, 5, 1, "", "create_condition_list_ui_component"], [20, 5, 1, "", "create_energy_quantity"], [20, 5, 1, "", "create_float_ui_component"], [20, 5, 1, "", "create_general_quantity"], [20, 5, 1, "", "create_length_quantity"], [20, 5, 1, "", "create_list_ui_component"], [20, 5, 1, "", "create_phase_list_ui_component"], [20, 5, 1, "", "create_section_divider_ui_component"], [20, 5, 1, "", "create_strength_quantity"], [20, 5, 1, "", "create_string_ui_component"], [20, 5, 1, "", "create_surface_energy_quantity"], [20, 5, 1, "", "create_temperature_quantity"], [20, 5, 1, "", "create_temperature_ui_component"], [20, 5, 1, "", "create_time_quantity"]], "tc_python.propertymodel_sdk.CCTResult": [[20, 2, 1, "", "add_time_temperature"], [20, 3, 1, "", "temperature_suffix"], [20, 3, 1, "", "time_suffix"]], "tc_python.propertymodel_sdk.CCTResultValues": [[20, 2, 1, "", "set_result_time_temperature"]], "tc_python.propertymodel_sdk.CalculationContext": [[20, 2, 1, "", "get_argument_ids"], [20, 2, 1, "", "get_dependent_component"], [20, 2, 1, "", "get_mass_fractions"], [20, 2, 1, "", "get_mass_percents"], [20, 2, 1, "", "get_mole_fractions"], [20, 2, 1, "", "get_mole_percents"], [20, 2, 1, "", "get_temperature"], [20, 2, 1, "", "get_ui_boolean_value"], [20, 2, 1, "", "get_ui_condition_list"], [20, 2, 1, "", "get_ui_float_value"], [20, 2, 1, "", "get_ui_list_value"], [20, 2, 1, "", "get_ui_string_value"], [20, 2, 1, "", "get_ui_temperature_value"], [20, 2, 1, "", "set_result_cct_values"], [20, 2, 1, "", "set_result_quantity_value"], [20, 2, 1, "", "set_single_equilibrium_result"]], "tc_python.propertymodel_sdk.PropertyModel": [[20, 2, 1, "", "add_button_callback"], [20, 2, 1, "", "after_evaluations"], [20, 2, 1, "", "before_evaluations"], [20, 2, 1, "", "evaluate_model"], [20, 2, 1, "", "get_license_key"], [20, 2, 1, "", "provide_calculation_result_quantities"], [20, 2, 1, "", "provide_model_category"], [20, 2, 1, "", "provide_model_description"], [20, 2, 1, "", "provide_model_name"], [20, 2, 1, "", "provide_model_parameters"], [20, 2, 1, "", "provide_ui_panel_components"], [20, 2, 1, "", "remove_button_callback"], [20, 2, 1, "", "set_model_parameter"]], "tc_python.propertymodel_sdk.ResultQuantity": [[20, 2, 1, "", "get_description"], [20, 2, 1, "", "get_id"], [20, 2, 1, "", "get_type"]], "tc_python.propertymodel_sdk.ResultQuantityType": [[20, 3, 1, "", "CCT_QUANTITY"], [20, 3, 1, "", "ENERGY_QUANTITY"], [20, 3, 1, "", "GENERAL_QUANTITY"], [20, 3, 1, "", "LENGTH_QUANTITY"], [20, 3, 1, "", "SINGLE_EQUILIBRIUM_QUANTITY"], [20, 3, 1, "", "STRENGTH_QUANTITY"], [20, 3, 1, "", "SURFACE_ENERGY_QUANTITY"], [20, 3, 1, "", "TEMPERATURE_QUANTITY"], [20, 3, 1, "", "TIME_QUANTITY"]], "tc_python.propertymodel_sdk.SpecialListMarkers": [[20, 3, 1, "", "ANY_LIST_MARKER"], [20, 3, 1, "", "NONE_LIST_MARKER"]], "tc_python.propertymodel_sdk.UIBooleanComponent": [[20, 2, 1, "", "connect_component_enableability"], [20, 2, 1, "", "connect_component_visibility"], [20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_dependent_components"], [20, 2, 1, "", "get_setting"], [20, 2, 1, "", "remove_component_visibility"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UIComponent": [[20, 2, 1, "", "get_description"], [20, 2, 1, "", "get_id"], [20, 2, 1, "", "get_name"], [20, 2, 1, "", "set_enabled"], [20, 2, 1, "", "set_visible"]], "tc_python.propertymodel_sdk.UIFloatComponent": [[20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_value"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UIGeneralListComponent": [[20, 2, 1, "", "connect_component_visibility"], [20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_content"], [20, 2, 1, "", "get_dependent_components"], [20, 2, 1, "", "get_selected_entry"], [20, 2, 1, "", "remove_component_visibility"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UIPhaseListComponent": [[20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_any_marker_setting"], [20, 2, 1, "", "get_default_phase"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UISectionDividerComponent": [[20, 2, 1, "", "get_value"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UIStringComponent": [[20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_value"], [20, 2, 1, "", "set_index"]], "tc_python.propertymodel_sdk.UITemperatureComponent": [[20, 2, 1, "", "enable_add_button"], [20, 2, 1, "", "enable_remove_button"], [20, 2, 1, "", "get_temp"], [20, 2, 1, "", "set_index"]], "tc_python.quantity_factory": [[21, 1, 1, "", "DiffusionQuantity"], [21, 1, 1, "", "IndependentVariable"], [21, 1, 1, "", "PlotCondition"], [21, 1, 1, "", "ScheilQuantity"], [21, 1, 1, "", "ThermodynamicQuantity"]], "tc_python.quantity_factory.DiffusionQuantity": [[21, 2, 1, "", "activity_of_component"], [21, 2, 1, "", "chemical_diffusion_coefficient"], [21, 2, 1, "", "chemical_potential_of_component"], [21, 2, 1, "", "distance"], [21, 2, 1, "", "intrinsic_diffusion_coefficient"], [21, 2, 1, "", "l_bis"], [21, 2, 1, "", "mass_fraction_of_a_component"], [21, 2, 1, "", "mass_fraction_of_a_phase"], [21, 2, 1, "", "mobility_of_component_in_phase"], [21, 2, 1, "", "mole_fraction_of_a_component"], [21, 2, 1, "", "mole_fraction_of_a_phase"], [21, 2, 1, "", "position_of_lower_boundary_of_region"], [21, 2, 1, "", "position_of_upper_boundary_of_region"], [21, 2, 1, "", "temperature"], [21, 2, 1, "", "thermodynamic_factor"], [21, 2, 1, "", "time"], [21, 2, 1, "", "total_mass_fraction_of_component"], [21, 2, 1, "", "total_mass_fraction_of_component_in_phase"], [21, 2, 1, "", "total_mass_fraction_of_phase"], [21, 2, 1, "", "total_mole_fraction_of_component"], [21, 2, 1, "", "total_mole_fraction_of_component_in_phase"], [21, 2, 1, "", "total_volume_fraction_of_phase"], [21, 2, 1, "", "tracer_diffusion_coefficient"], [21, 2, 1, "", "u_fraction_of_a_component"], [21, 2, 1, "", "user_defined_function"], [21, 2, 1, "", "velocity_of_lower_boundary_of_region"], [21, 2, 1, "", "velocity_of_upper_boundary_of_region"], [21, 2, 1, "", "width_of_region"]], "tc_python.quantity_factory.IndependentVariable": [[21, 2, 1, "", "distance"], [21, 2, 1, "", "time"]], "tc_python.quantity_factory.PlotCondition": [[21, 2, 1, "", "distance"], [21, 2, 1, "", "integral"], [21, 2, 1, "", "interface"], [21, 2, 1, "", "time"]], "tc_python.quantity_factory.ScheilQuantity": [[21, 2, 1, "", "apparent_heat_capacity_per_gram"], [21, 2, 1, "", "apparent_heat_capacity_per_mole"], [21, 2, 1, "", "apparent_volumetric_thermal_expansion_coefficient"], [21, 2, 1, "", "average_composition_of_solid_phases_as_mass_fraction"], [21, 2, 1, "", "average_composition_of_solid_phases_as_mole_fraction"], [21, 2, 1, "", "composition_of_phase_as_mole_fraction"], [21, 2, 1, "", "composition_of_phase_as_weight_fraction"], [21, 2, 1, "", "density_of_phase"], [21, 2, 1, "", "density_of_system"], [21, 2, 1, "", "distribution_of_component_of_phase"], [21, 2, 1, "", "heat_per_gram"], [21, 2, 1, "", "heat_per_mole"], [21, 2, 1, "", "latent_heat_per_gram"], [21, 2, 1, "", "latent_heat_per_mole"], [21, 2, 1, "", "mass_fraction_of_a_solid_phase"], [21, 2, 1, "", "mass_fraction_of_all_liquid"], [21, 2, 1, "", "mass_fraction_of_all_solid_phases"], [21, 2, 1, "", "molar_volume_of_phase"], [21, 2, 1, "", "molar_volume_of_system"], [21, 2, 1, "", "mole_fraction_of_a_solid_phase"], [21, 2, 1, "", "mole_fraction_of_all_liquid"], [21, 2, 1, "", "mole_fraction_of_all_solid_phases"], [21, 2, 1, "", "site_fraction_of_component_in_phase"], [21, 2, 1, "", "temperature"], [21, 2, 1, "", "volume_fraction_of_a_solid_phase"], [21, 2, 1, "", "volume_fraction_of_all_liquid"], [21, 2, 1, "", "volume_fraction_of_all_solid_phases"]], "tc_python.quantity_factory.ThermodynamicQuantity": [[21, 2, 1, "", "activity_of_component"], [21, 2, 1, "", "chemical_diffusion_coefficient"], [21, 2, 1, "", "chemical_potential_of_component"], [21, 2, 1, "", "composition_of_phase_as_mole_fraction"], [21, 2, 1, "", "composition_of_phase_as_weight_fraction"], [21, 2, 1, "", "gibbs_energy_of_a_phase"], [21, 2, 1, "", "mass_fraction_of_a_component"], [21, 2, 1, "", "mass_fraction_of_a_phase"], [21, 2, 1, "", "mole_fraction_of_a_component"], [21, 2, 1, "", "mole_fraction_of_a_phase"], [21, 2, 1, "", "normalized_driving_force_of_a_phase"], [21, 2, 1, "", "pressure"], [21, 2, 1, "", "system_size"], [21, 2, 1, "", "temperature"], [21, 2, 1, "", "tracer_diffusion_coefficient"], [21, 2, 1, "", "u_fraction_of_a_component"], [21, 2, 1, "", "user_defined_function"], [21, 2, 1, "", "volume_fraction_of_a_phase"]], "tc_python.scheil": [[12, 1, 1, "", "CalculateSecondaryDendriteArmSpacing"], [12, 1, 1, "", "ConstantSecondaryDendriteArmSpacing"], [12, 1, 1, "", "ScheilBackDiffusion"], [12, 1, 1, "", "ScheilCalculation"], [12, 1, 1, "", "ScheilCalculationResult"], [12, 1, 1, "", "ScheilCalculationType"], [12, 1, 1, "", "ScheilClassic"], [12, 1, 1, "", "ScheilOptions"], [12, 1, 1, "", "ScheilSoluteTrapping"]], "tc_python.scheil.CalculateSecondaryDendriteArmSpacing": [[12, 2, 1, "", "disable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "enable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "set_c"], [12, 2, 1, "", "set_cooling_rate"], [12, 2, 1, "", "set_fast_diffusing_elements"], [12, 2, 1, "", "set_n"], [12, 2, 1, "", "set_primary_phasename"]], "tc_python.scheil.ConstantSecondaryDendriteArmSpacing": [[12, 2, 1, "", "disable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "enable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "set_cooling_rate"], [12, 2, 1, "", "set_fast_diffusing_elements"], [12, 2, 1, "", "set_primary_phasename"]], "tc_python.scheil.ScheilBackDiffusion": [[12, 2, 1, "", "calculate_secondary_dendrite_arm_spacing"], [12, 2, 1, "", "constant_secondary_dendrite_arm_spacing"]], "tc_python.scheil.ScheilCalculation": [[12, 2, 1, "", "calculate"], [12, 2, 1, "", "disable_global_minimization"], [12, 2, 1, "", "enable_global_minimization"], [12, 2, 1, "", "get_system_data"], [12, 2, 1, "", "set_composition"], [12, 2, 1, "", "set_composition_unit"], [12, 2, 1, "", "set_start_temperature"], [12, 2, 1, "", "with_calculation_type"], [12, 2, 1, "", "with_options"], [12, 2, 1, "", "with_system_modifications"]], "tc_python.scheil.ScheilCalculationResult": [[12, 2, 1, "", "get_solid_phase_with_largest_mole_fraction"], [12, 2, 1, "", "get_stable_phases"], [12, 2, 1, "", "get_values_grouped_by_quantity_of"], [12, 2, 1, "", "get_values_grouped_by_stable_phases_of"], [12, 2, 1, "", "get_values_of"], [12, 2, 1, "", "save_to_disk"]], "tc_python.scheil.ScheilCalculationType": [[12, 2, 1, "", "scheil_back_diffusion"], [12, 2, 1, "", "scheil_classic"], [12, 2, 1, "", "scheil_solute_trapping"]], "tc_python.scheil.ScheilClassic": [[12, 2, 1, "", "disable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "enable_delta_ferrite_to_austenite_transition"], [12, 2, 1, "", "set_fast_diffusing_elements"]], "tc_python.scheil.ScheilOptions": [[12, 2, 1, "", "calculate_from_gas"], [12, 2, 1, "", "calculate_from_liquidus"], [12, 2, 1, "", "calculate_from_start_temperature"], [12, 2, 1, "", "calculate_to_end_of_scheil"], [12, 2, 1, "", "calculate_to_temperature_below_solidus"], [12, 2, 1, "", "disable_approximate_driving_force_for_metastable_phases"], [12, 2, 1, "", "disable_control_step_size_during_minimization"], [12, 2, 1, "", "disable_equilibrium_solidification_calculation"], [12, 2, 1, "", "disable_evaporation_property_calculation"], [12, 2, 1, "", "disable_force_positive_definite_phase_hessian"], [12, 2, 1, "", "enable_approximate_driving_force_for_metastable_phases"], [12, 2, 1, "", "enable_control_step_size_during_minimization"], [12, 2, 1, "", "enable_equilibrium_solidification_calculation"], [12, 2, 1, "", "enable_evaporation_property_calculation"], [12, 2, 1, "", "enable_force_positive_definite_phase_hessian"], [12, 2, 1, "", "set_gas_phase"], [12, 2, 1, "", "set_global_minimization_max_grid_points"], [12, 2, 1, "", "set_global_minimization_test_interval"], [12, 2, 1, "", "set_liquid_phase"], [12, 2, 1, "", "set_max_no_of_iterations"], [12, 2, 1, "", "set_required_accuracy"], [12, 2, 1, "", "set_smallest_fraction"], [12, 2, 1, "", "set_temperature_step"], [12, 2, 1, "", "terminate_on_fraction_of_liquid_phase"], [12, 2, 1, "", "terminate_on_temperature"]], "tc_python.scheil.ScheilSoluteTrapping": [[12, 2, 1, "", "set_angle"], [12, 2, 1, "", "set_primary_phasename"], [12, 2, 1, "", "set_scanning_speed"]], "tc_python.server": [[22, 1, 1, "", "LoggingPolicy"], [22, 1, 1, "", "MetallurgyCalculations"], [22, 1, 1, "", "ResultLoader"], [22, 1, 1, "", "SetUp"], [22, 1, 1, "", "TCPython"], [22, 5, 1, "", "start_api_server"], [22, 5, 1, "", "start_matlab_server"], [22, 5, 1, "", "stop_api_server"]], "tc_python.server.LoggingPolicy": [[22, 3, 1, "", "FILE"], [22, 3, 1, "", "NONE"], [22, 3, 1, "", "SCREEN"]], "tc_python.server.MetallurgyCalculations": [[22, 2, 1, "", "with_adiabatic_equilibrium_calculation"], [22, 2, 1, "", "with_adiabatic_process_calculation"], [22, 2, 1, "", "with_isothermal_equilibrium_calculation"]], "tc_python.server.ResultLoader": [[22, 2, 1, "", "diffusion"], [22, 2, 1, "", "phase_diagram"], [22, 2, 1, "", "precipitation_TTT_or_CCT"], [22, 2, 1, "", "precipitation_single"], [22, 2, 1, "", "property_diagram"], [22, 2, 1, "", "property_model"], [22, 2, 1, "", "scheil"], [22, 2, 1, "", "single_equilibrium"]], "tc_python.server.SetUp": [[22, 2, 1, "", "disable_caching"], [22, 2, 1, "", "get_database_info"], [22, 2, 1, "", "get_database_path_on_disk"], [22, 2, 1, "", "get_databases"], [22, 2, 1, "", "get_property_models"], [22, 2, 1, "", "load_result_from_disk"], [22, 2, 1, "", "select_database_and_elements"], [22, 2, 1, "", "select_thermodynamic_and_kinetic_databases_with_elements"], [22, 2, 1, "", "select_user_database_and_elements"], [22, 2, 1, "", "set_cache_folder"], [22, 2, 1, "", "set_ges_version"], [22, 2, 1, "", "set_log_level_to_debug"], [22, 2, 1, "", "set_log_level_to_info"], [22, 2, 1, "", "with_metallurgy"]], "tc_python.single_equilibrium": [[13, 1, 1, "", "AbstractSingleEquilibriumCalculation"], [13, 1, 1, "", "SingleEquilibriumCalculation"], [13, 1, 1, "", "SingleEquilibriumOptions"], [13, 1, 1, "", "SingleEquilibriumResult"], [13, 1, 1, "", "SingleEquilibriumTempResult"]], "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation": [[13, 2, 1, "", "disable_global_minimization"], [13, 2, 1, "", "enable_global_minimization"], [13, 2, 1, "", "get_components"], [13, 2, 1, "", "get_gibbs_energy_addition_for"], [13, 2, 1, "", "get_system_data"], [13, 2, 1, "", "run_poly_command"], [13, 2, 1, "", "set_component_to_entered"], [13, 2, 1, "", "set_component_to_suspended"], [13, 2, 1, "", "set_gibbs_energy_addition_for"], [13, 2, 1, "", "set_phase_to_dormant"], [13, 2, 1, "", "set_phase_to_entered"], [13, 2, 1, "", "set_phase_to_fixed"], [13, 2, 1, "", "set_phase_to_suspended"], [13, 2, 1, "", "with_options"], [13, 2, 1, "", "with_reference_state"], [13, 2, 1, "", "with_system_modifications"]], "tc_python.single_equilibrium.SingleEquilibriumCalculation": [[13, 2, 1, "", "bookmark_state"], [13, 2, 1, "", "calculate"], [13, 2, 1, "", "calculate_with_state"], [13, 2, 1, "", "disable_global_minimization"], [13, 2, 1, "", "enable_global_minimization"], [13, 2, 1, "", "get_components"], [13, 2, 1, "", "get_gibbs_energy_addition_for"], [13, 2, 1, "", "get_interfacial_energy"], [13, 2, 1, "", "get_system_data"], [13, 2, 1, "", "remove_all_conditions"], [13, 2, 1, "", "remove_condition"], [13, 2, 1, "", "run_poly_command"], [13, 2, 1, "", "set_component_to_entered"], [13, 2, 1, "", "set_component_to_suspended"], [13, 2, 1, "", "set_condition"], [13, 2, 1, "", "set_gibbs_energy_addition_for"], [13, 2, 1, "", "set_phase_to_dormant"], [13, 2, 1, "", "set_phase_to_entered"], [13, 2, 1, "", "set_phase_to_fixed"], [13, 2, 1, "", "set_phase_to_suspended"], [13, 2, 1, "", "set_state_to_bookmark"], [13, 2, 1, "", "with_options"], [13, 2, 1, "", "with_reference_state"], [13, 2, 1, "", "with_system_modifications"]], "tc_python.single_equilibrium.SingleEquilibriumOptions": [[13, 2, 1, "", "disable_approximate_driving_force_for_metastable_phases"], [13, 2, 1, "", "disable_control_step_size_during_minimization"], [13, 2, 1, "", "disable_force_positive_definite_phase_hessian"], [13, 2, 1, "", "enable_approximate_driving_force_for_metastable_phases"], [13, 2, 1, "", "enable_control_step_size_during_minimization"], [13, 2, 1, "", "enable_force_positive_definite_phase_hessian"], [13, 2, 1, "", "set_global_minimization_max_grid_points"], [13, 2, 1, "", "set_max_no_of_iterations"], [13, 2, 1, "", "set_required_accuracy"], [13, 2, 1, "", "set_smallest_fraction"]], "tc_python.single_equilibrium.SingleEquilibriumResult": [[13, 2, 1, "", "change_pressure"], [13, 2, 1, "", "change_temperature"], [13, 2, 1, "", "get_components"], [13, 2, 1, "", "get_conditions"], [13, 2, 1, "", "get_phases"], [13, 2, 1, "", "get_stable_phases"], [13, 2, 1, "", "get_value_of"], [13, 2, 1, "", "run_poly_command"], [13, 2, 1, "", "save_to_disk"]], "tc_python.single_equilibrium.SingleEquilibriumTempResult": [[13, 2, 1, "", "change_pressure"], [13, 2, 1, "", "change_temperature"], [13, 2, 1, "", "get_components"], [13, 2, 1, "", "get_conditions"], [13, 2, 1, "", "get_phases"], [13, 2, 1, "", "get_stable_phases"], [13, 2, 1, "", "get_value_of"], [13, 2, 1, "", "run_poly_command"]], "tc_python.step_or_map_diagrams": [[14, 1, 1, "", "AbstractAxisType"], [14, 1, 1, "", "AbstractPhaseDiagramCalculation"], [14, 1, 1, "", "AbstractPropertyDiagramCalculation"], [14, 1, 1, "", "AxisType"], [14, 1, 1, "", "CalculationAxis"], [14, 1, 1, "", "Direction"], [14, 1, 1, "", "InitialEquilibrium"], [14, 1, 1, "", "Linear"], [14, 1, 1, "", "Logarithmic"], [14, 1, 1, "", "PhaseDiagramCalculation"], [14, 1, 1, "", "PhaseDiagramOptions"], [14, 1, 1, "", "PhaseDiagramResult"], [14, 1, 1, "", "PhaseDiagramResultValues"], [14, 1, 1, "", "PhaseLabel"], [14, 1, 1, "", "PhaseNameStyle"], [14, 1, 1, "", "PropertyDiagramCalculation"], [14, 1, 1, "", "PropertyDiagramOptions"], [14, 1, 1, "", "PropertyDiagramResult"]], "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation": [[14, 2, 1, "", "add_initial_equilibrium"], [14, 2, 1, "", "calculate"], [14, 2, 1, "", "disable_global_minimization"], [14, 2, 1, "", "dont_keep_default_equilibria"], [14, 2, 1, "", "enable_global_minimization"], [14, 2, 1, "", "get_components"], [14, 2, 1, "", "get_gibbs_energy_addition_for"], [14, 2, 1, "", "get_system_data"], [14, 2, 1, "", "keep_default_equilibria"], [14, 2, 1, "", "remove_all_initial_equilibria"], [14, 2, 1, "", "run_poly_command"], [14, 2, 1, "", "set_gibbs_energy_addition_for"], [14, 2, 1, "", "set_phase_to_dormant"], [14, 2, 1, "", "set_phase_to_entered"], [14, 2, 1, "", "set_phase_to_fixed"], [14, 2, 1, "", "set_phase_to_suspended"], [14, 2, 1, "", "with_options"], [14, 2, 1, "", "with_reference_state"], [14, 2, 1, "", "with_system_modifications"]], "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation": [[14, 2, 1, "", "calculate"], [14, 2, 1, "", "disable_global_minimization"], [14, 2, 1, "", "disable_step_separate_phases"], [14, 2, 1, "", "enable_global_minimization"], [14, 2, 1, "", "enable_step_separate_phases"], [14, 2, 1, "", "get_components"], [14, 2, 1, "", "get_gibbs_energy_addition_for"], [14, 2, 1, "", "get_system_data"], [14, 2, 1, "", "run_poly_command"], [14, 2, 1, "", "set_gibbs_energy_addition_for"], [14, 2, 1, "", "set_phase_to_dormant"], [14, 2, 1, "", "set_phase_to_entered"], [14, 2, 1, "", "set_phase_to_fixed"], [14, 2, 1, "", "set_phase_to_suspended"], [14, 2, 1, "", "with_options"], [14, 2, 1, "", "with_reference_state"], [14, 2, 1, "", "with_system_modifications"]], "tc_python.step_or_map_diagrams.AxisType": [[14, 2, 1, "", "linear"], [14, 2, 1, "", "logarithmic"]], "tc_python.step_or_map_diagrams.CalculationAxis": [[14, 2, 1, "", "set_max"], [14, 2, 1, "", "set_min"], [14, 2, 1, "", "set_start_at"], [14, 2, 1, "", "with_axis_type"]], "tc_python.step_or_map_diagrams.Direction": [[14, 3, 1, "", "DECREASE_FIRST_AXIS"], [14, 3, 1, "", "DECREASE_SECOND_AXIS"], [14, 3, 1, "", "INCREASE_FIRST_AXIS"], [14, 3, 1, "", "INCREASE_SECOND_AXIS"]], "tc_python.step_or_map_diagrams.InitialEquilibrium": [[14, 2, 1, "", "add_equilibria_at_all_phase_changes"], [14, 2, 1, "", "add_equilibria_at_first_phase_change"], [14, 2, 1, "", "set_direction"]], "tc_python.step_or_map_diagrams.Linear": [[14, 2, 1, "", "get_type"], [14, 2, 1, "", "set_max_step_size"], [14, 2, 1, "", "set_min_nr_of_steps"]], "tc_python.step_or_map_diagrams.Logarithmic": [[14, 2, 1, "", "get_type"], [14, 2, 1, "", "set_scale_factor"]], "tc_python.step_or_map_diagrams.PhaseDiagramCalculation": [[14, 2, 1, "", "add_initial_equilibrium"], [14, 2, 1, "", "calculate"], [14, 2, 1, "", "disable_global_minimization"], [14, 2, 1, "", "dont_keep_default_equilibria"], [14, 2, 1, "", "enable_global_minimization"], [14, 2, 1, "", "get_components"], [14, 2, 1, "", "get_gibbs_energy_addition_for"], [14, 2, 1, "", "get_system_data"], [14, 2, 1, "", "keep_default_equilibria"], [14, 2, 1, "", "remove_all_conditions"], [14, 2, 1, "", "remove_all_initial_equilibria"], [14, 2, 1, "", "remove_condition"], [14, 2, 1, "", "run_poly_command"], [14, 2, 1, "", "set_condition"], [14, 2, 1, "", "set_gibbs_energy_addition_for"], [14, 2, 1, "", "set_phase_to_dormant"], [14, 2, 1, "", "set_phase_to_entered"], [14, 2, 1, "", "set_phase_to_fixed"], [14, 2, 1, "", "set_phase_to_suspended"], [14, 2, 1, "", "with_first_axis"], [14, 2, 1, "", "with_options"], [14, 2, 1, "", "with_reference_state"], [14, 2, 1, "", "with_second_axis"], [14, 2, 1, "", "with_system_modifications"]], "tc_python.step_or_map_diagrams.PhaseDiagramOptions": [[14, 2, 1, "", "disable_approximate_driving_force_for_metastable_phases"], [14, 2, 1, "", "disable_control_step_size_during_minimization"], [14, 2, 1, "", "disable_force_positive_definite_phase_hessian"], [14, 2, 1, "", "dont_use_auto_start_points"], [14, 2, 1, "", "dont_use_inside_mesh_points"], [14, 2, 1, "", "enable_approximate_driving_force_for_metastable_phases"], [14, 2, 1, "", "enable_control_step_size_during_minimization"], [14, 2, 1, "", "enable_force_positive_definite_phase_hessian"], [14, 2, 1, "", "set_global_minimization_max_grid_points"], [14, 2, 1, "", "set_global_minimization_test_interval"], [14, 2, 1, "", "set_max_no_of_iterations"], [14, 2, 1, "", "set_no_of_mesh_along_axis"], [14, 2, 1, "", "set_required_accuracy"], [14, 2, 1, "", "set_smallest_fraction"], [14, 2, 1, "", "use_auto_start_points"], [14, 2, 1, "", "use_inside_mesh_points"]], "tc_python.step_or_map_diagrams.PhaseDiagramResult": [[14, 2, 1, "", "add_coordinate_for_phase_label"], [14, 2, 1, "", "get_values_grouped_by_quantity_of"], [14, 2, 1, "", "get_values_grouped_by_stable_phases_of"], [14, 2, 1, "", "remove_phase_labels"], [14, 2, 1, "", "save_to_disk"], [14, 2, 1, "", "set_phase_name_style"]], "tc_python.step_or_map_diagrams.PhaseDiagramResultValues": [[14, 2, 1, "", "get_invariants"], [14, 2, 1, "", "get_lines"], [14, 2, 1, "", "get_phase_labels"], [14, 2, 1, "", "get_tie_lines"]], "tc_python.step_or_map_diagrams.PhaseLabel": [[14, 2, 1, "", "get_text"], [14, 2, 1, "", "get_x"], [14, 2, 1, "", "get_y"]], "tc_python.step_or_map_diagrams.PhaseNameStyle": [[14, 3, 1, "", "ALL"], [14, 3, 1, "", "CONSTITUTION_DESCRIPTION"], [14, 3, 1, "", "NONE"], [14, 3, 1, "", "ORDERING_DESCRIPTION"]], "tc_python.step_or_map_diagrams.PropertyDiagramCalculation": [[14, 2, 1, "", "calculate"], [14, 2, 1, "", "disable_global_minimization"], [14, 2, 1, "", "disable_step_separate_phases"], [14, 2, 1, "", "enable_global_minimization"], [14, 2, 1, "", "enable_step_separate_phases"], [14, 2, 1, "", "get_components"], [14, 2, 1, "", "get_gibbs_energy_addition_for"], [14, 2, 1, "", "get_system_data"], [14, 2, 1, "", "remove_all_conditions"], [14, 2, 1, "", "remove_condition"], [14, 2, 1, "", "run_poly_command"], [14, 2, 1, "", "set_condition"], [14, 2, 1, "", "set_gibbs_energy_addition_for"], [14, 2, 1, "", "set_phase_to_dormant"], [14, 2, 1, "", "set_phase_to_entered"], [14, 2, 1, "", "set_phase_to_fixed"], [14, 2, 1, "", "set_phase_to_suspended"], [14, 2, 1, "", "with_axis"], [14, 2, 1, "", "with_options"], [14, 2, 1, "", "with_reference_state"], [14, 2, 1, "", "with_system_modifications"]], "tc_python.step_or_map_diagrams.PropertyDiagramOptions": [[14, 2, 1, "", "disable_approximate_driving_force_for_metastable_phases"], [14, 2, 1, "", "disable_control_step_size_during_minimization"], [14, 2, 1, "", "disable_force_positive_definite_phase_hessian"], [14, 2, 1, "", "enable_approximate_driving_force_for_metastable_phases"], [14, 2, 1, "", "enable_control_step_size_during_minimization"], [14, 2, 1, "", "enable_force_positive_definite_phase_hessian"], [14, 2, 1, "", "set_global_minimization_max_grid_points"], [14, 2, 1, "", "set_global_minimization_test_interval"], [14, 2, 1, "", "set_max_no_of_iterations"], [14, 2, 1, "", "set_required_accuracy"], [14, 2, 1, "", "set_smallest_fraction"]], "tc_python.step_or_map_diagrams.PropertyDiagramResult": [[14, 2, 1, "", "get_values_grouped_by_quantity_of"], [14, 2, 1, "", "get_values_grouped_by_stable_phases_of"], [14, 2, 1, "", "get_values_of"], [14, 2, 1, "", "save_to_disk"], [14, 2, 1, "", "set_phase_name_style"]], "tc_python.system": [[23, 1, 1, "", "MultiDatabaseSystemBuilder"], [23, 1, 1, "", "System"], [23, 1, 1, "", "SystemBuilder"]], "tc_python.system.MultiDatabaseSystemBuilder": [[23, 2, 1, "", "create_and_select_species"], [23, 2, 1, "", "deselect_constituent_on_sublattice"], [23, 2, 1, "", "deselect_phase"], [23, 2, 1, "", "deselect_species"], [23, 2, 1, "", "get_system"], [23, 2, 1, "", "select_constituent_on_sublattice"], [23, 2, 1, "", "select_phase"], [23, 2, 1, "", "select_species"], [23, 2, 1, "", "with_new_composition_set"], [23, 2, 1, "", "without_default_phases"]], "tc_python.system.System": [[23, 2, 1, "", "convert_composition"], [23, 2, 1, "", "get_all_elements_in_databases"], [23, 2, 1, "", "get_all_phases_in_databases"], [23, 2, 1, "", "get_all_species_in_databases"], [23, 2, 1, "", "get_element_object"], [23, 2, 1, "", "get_elements_in_system"], [23, 2, 1, "", "get_phase_object"], [23, 2, 1, "", "get_phases_in_system"], [23, 2, 1, "", "get_references"], [23, 2, 1, "", "get_species_in_system"], [23, 2, 1, "", "get_species_object"], [23, 2, 1, "", "get_system_data"], [23, 2, 1, "", "with_batch_equilibrium_calculation"], [23, 2, 1, "", "with_cct_precipitation_calculation"], [23, 2, 1, "", "with_isothermal_diffusion_calculation"], [23, 2, 1, "", "with_isothermal_precipitation_calculation"], [23, 2, 1, "", "with_material_to_material"], [23, 2, 1, "", "with_non_isothermal_diffusion_calculation"], [23, 2, 1, "", "with_non_isothermal_precipitation_calculation"], [23, 2, 1, "", "with_phase_diagram_calculation"], [23, 2, 1, "", "with_property_diagram_calculation"], [23, 2, 1, "", "with_property_model_calculation"], [23, 2, 1, "", "with_scheil_calculation"], [23, 2, 1, "", "with_single_equilibrium_calculation"], [23, 2, 1, "", "with_ttt_precipitation_calculation"]], "tc_python.system.SystemBuilder": [[23, 2, 1, "", "create_and_select_species"], [23, 2, 1, "", "deselect_constituent_on_sublattice"], [23, 2, 1, "", "deselect_phase"], [23, 2, 1, "", "deselect_species"], [23, 2, 1, "", "get_system"], [23, 2, 1, "", "select_constituent_on_sublattice"], [23, 2, 1, "", "select_database_and_elements"], [23, 2, 1, "", "select_phase"], [23, 2, 1, "", "select_species"], [23, 2, 1, "", "select_user_database_and_elements"], [23, 2, 1, "", "with_new_composition_set"], [23, 2, 1, "", "without_default_phases"]], "tc_python.utils": [[24, 1, 1, "", "CompositionType"], [24, 1, 1, "", "CompositionUnit"], [24, 1, 1, "", "ConversionUnit"], [24, 1, 1, "", "GasAmountUnit"], [24, 1, 1, "", "GasCompositionUnit"], [24, 1, 1, "", "GasRateUnit"], [24, 1, 1, "", "InterfacePosition"], [24, 1, 1, "", "PhaseUnit"], [24, 1, 1, "", "ResultValueGroup"], [24, 1, 1, "", "TemperatureProfile"]], "tc_python.utils.CompositionType": [[24, 3, 1, "", "COMPONENT"], [24, 3, 1, "", "ELEMENT"]], "tc_python.utils.CompositionUnit": [[24, 3, 1, "", "MASS_FRACTION"], [24, 3, 1, "", "MASS_PERCENT"], [24, 3, 1, "", "MOLE_FRACTION"], [24, 3, 1, "", "MOLE_PERCENT"]], "tc_python.utils.ConversionUnit": [[24, 3, 1, "", "MOLE_FRACTION"], [24, 3, 1, "", "MOLE_PERCENT"], [24, 3, 1, "", "WEIGHT_FRACTION"], [24, 3, 1, "", "WEIGHT_PERCENT"]], "tc_python.utils.GasAmountUnit": [[24, 3, 1, "", "KILOGRAM"], [24, 3, 1, "", "NORM_CUBIC_METER"]], "tc_python.utils.GasCompositionUnit": [[24, 3, 1, "", "MASS_FRACTION"], [24, 3, 1, "", "MASS_PERCENT"], [24, 3, 1, "", "MOLE_FRACTION"], [24, 3, 1, "", "MOLE_PERCENT"], [24, 3, 1, "", "VOLUME_FRACTION"], [24, 3, 1, "", "VOLUME_PERCENT"]], "tc_python.utils.GasRateUnit": [[24, 3, 1, "", "KILOGRAM_PER_SEC"], [24, 3, 1, "", "NORM_CUBIC_METER_PER_SEC"]], "tc_python.utils.InterfacePosition": [[24, 3, 1, "", "LOWER"], [24, 3, 1, "", "UPPER"]], "tc_python.utils.PhaseUnit": [[24, 3, 1, "", "MASS_FRACTION"], [24, 3, 1, "", "MOLE_FRACTION"], [24, 3, 1, "", "VOLUME_FRACTION"]], "tc_python.utils.ResultValueGroup": [[24, 2, 1, "", "get_label"], [24, 2, 1, "", "get_x"], [24, 2, 1, "", "get_y"]], "tc_python.utils.TemperatureProfile": [[24, 2, 1, "", "add_time_temperature"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 25], "refer": [0, 25], "architectur": 1, "overview": 1, "tcpython": [1, 2], "systembuild": 1, "system": [1, 23], "calcul": [1, 2, 15], "singl": [1, 2], "equilibrium": [1, 2, 9], "batch": 1, "precipit": [1, 6], "scheil": [1, 12], "properti": [1, 2], "diagram": 1, "phase": 1, "diffus": [1, 4], "model": [1, 2], "materi": 1, "process": [1, 2, 10], "metallurgi": [1, 2], "result": [1, 2], "diffusionresult": 1, "framework": [1, 2], "v": 1, "tc": [1, 2, 25, 26], "python": [1, 2, 25, 26], "directori": 1, "best": 2, "practic": 2, "re": 2, "us": [2, 26], "state": 2, "save": 2, "all": 2, "object": 2, "ar": 2, "non": 2, "copyabl": 2, "virtual": 2, "environ": [2, 16, 26], "effici": 2, "parallel": 2, "handl": 2, "crash": 2, "engin": 2, "within": 2, "jupyt": 2, "notebook": 2, "consol": 2, "debug": 2, "code": 2, "develop": [2, 26], "sever": 2, "file": 2, "side": 2, "modul": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27], "common": 2, "altern": 2, "default": 2, "bundl": [2, 26], "interpret": [2, 26], "configur": [2, 26], "anoth": 2, "chang": 2, "element": 2, "between": 2, "zone": 2, "applic": 2, "implement": 2, "batch_equilibrium": 3, "material_to_materi": 5, "packag": 7, "process_metallurgi": 7, "base": 8, "propertymodel": 11, "single_equilibrium": 13, "step_or_map_diagram": 14, "mac": 16, "o": 16, "set": 16, "variabl": 16, "abstract_bas": 17, "entiti": 18, "except": 19, "propertymodel_sdk": 20, "quantity_factori": 21, "server": 22, "util": 24, "document": 25, "instal": [26, 27], "guid": 26, "what": 26, "type": 26, "should": 26, "i": 26, "choos": 26, "thermo": 26, "calc": 26, "limit": 26, "step": 26, "1": 26, "an": 26, "id": 26, "integr": 26, "2": 26, "pycharm": 26, "3": 26, "run": 26, "exampl": 26, "open": 26, "project": 26, "your": 26, "choic": 26, "distribut": 26, "anaconda": 26, "sdk": 26, "4": 26, "5": 26, "fix": 26, "potenti": 26, "issu": 26, "updat": 26, "newer": 26, "version": 26, "troubleshoot": 27, "diagnost": 27, "script": 27, "No": 27, "name": 27, "tc_python": 27, "error": 27, "first": 27, "usag": 27, "pip": 27, "fail": 27, "establish": 27, "new": 27, "network": 27, "connect": 27, "similar": 27}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Architecture overview": [[1, "architecture-overview"]], "TCPython": [[1, "tcpython"]], "SystemBuilder and System": [[1, "systembuilder-and-system"]], "Calculation": [[1, "calculation"]], "Single equilibrium calculations": [[1, "single-equilibrium-calculations"]], "Batch equilibrium calculations": [[1, "batch-equilibrium-calculations"]], "Precipitation calculations": [[1, "precipitation-calculations"]], "Scheil calculations": [[1, "scheil-calculations"]], "Property diagram calculations": [[1, "property-diagram-calculations"]], "Phase diagram calculations": [[1, "phase-diagram-calculations"]], "Diffusion calculations": [[1, "diffusion-calculations"]], "Property Model calculations": [[1, "property-model-calculations"]], "Material to Material calculations": [[1, "material-to-material-calculations"]], "Process Metallurgy calculations": [[1, "process-metallurgy-calculations"]], "Result": [[1, "result"]], "DiffusionResult": [[1, "diffusionresult"]], "Property Model Framework": [[1, "property-model-framework"], [2, "property-model-framework"]], "Property models vs. TC-Python": [[1, "property-models-vs-tc-python"]], "Architecture": [[1, "architecture"]], "Property Model directory": [[1, "property-model-directory"]], "Best Practices": [[2, "best-practices"]], "Re-use of the single equilibrium calculation state": [[2, "re-use-of-the-single-equilibrium-calculation-state"]], "Re-use and saving of results": [[2, "re-use-and-saving-of-results"]], "All TC-Python objects are non-copyable": [[2, "all-tc-python-objects-are-non-copyable"]], "Python Virtual Environments": [[2, "python-virtual-environments"]], "Using with TCPython() efficiently": [[2, "using-with-tcpython-efficiently"]], "Parallel calculations": [[2, "parallel-calculations"]], "Handling crashes of the calculation engine": [[2, "handling-crashes-of-the-calculation-engine"]], "Using TC-Python within a Jupyter Notebook or the Python console": [[2, "using-tc-python-within-a-jupyter-notebook-or-the-python-console"]], "Debugging Property Model code": [[2, "debugging-property-model-code"]], "Developing Property Models in several files": [[2, "developing-property-models-in-several-files"]], "side-by-side modules": [[2, "side-by-side-modules"]], "common modules": [[2, "common-modules"]], "Alternative Python for Property Models": [[2, "alternative-python-for-property-models"]], "Default bundled Python interpreter": [[2, "default-bundled-python-interpreter"]], "Configuring another Python interpreter": [[2, "configuring-another-python-interpreter"]], "Process Metallurgy Calculations": [[2, "process-metallurgy-calculations"]], "Equilibrium calculations with changing elements between calculations": [[2, "equilibrium-calculations-with-changing-elements-between-calculations"]], "Zones": [[2, "zones"]], "Applications": [[2, "applications"]], "Implementation of practical process models": [[2, "implementation-of-practical-process-models"]], "Module \u201cbatch_equilibrium\u201d": [[3, "module-tc_python.batch_equilibrium"]], "Module \u201cdiffusion\u201d": [[4, "module-tc_python.diffusion"]], "Module \u201cmaterial_to_material\u201d": [[5, "module-tc_python.material_to_material"]], "Module \u201cprecipitation\u201d": [[6, "module-tc_python.precipitation"]], "Package \u201cprocess_metallurgy\u201d": [[7, "package-process-metallurgy"]], "Module \u201cbase\u201d": [[8, "module-tc_python.process_metallurgy.base"]], "Module \u201cequilibrium\u201d": [[9, "module-tc_python.process_metallurgy.equilibrium"]], "Module \u201cprocess\u201d": [[10, "module-tc_python.process_metallurgy.process"]], "Module \u201cpropertymodel\u201d": [[11, "module-tc_python.propertymodel"]], "Module \u201cscheil\u201d": [[12, "module-tc_python.scheil"]], "Module \u201csingle_equilibrium\u201d": [[13, "module-tc_python.single_equilibrium"]], "Module \u201cstep_or_map_diagrams\u201d": [[14, "module-tc_python.step_or_map_diagrams"]], "Calculations": [[15, "calculations"]], "Mac OS: Setting Environment Variables": [[16, "mac-os-setting-environment-variables"]], "Module \u201cabstract_base\u201d": [[17, "module-tc_python.abstract_base"]], "Module \u201centities\u201d": [[18, "module-tc_python.entities"]], "Module \u201cexceptions\u201d": [[19, "module-tc_python.exceptions"]], "Module \u201cpropertymodel_sdk\u201d": [[20, "module-tc_python.propertymodel_sdk"]], "Module \u201cquantity_factory\u201d": [[21, "module-tc_python.quantity_factory"]], "Module \u201cserver\u201d": [[22, "module-tc_python.server"]], "Module \u201csystem\u201d": [[23, "module-tc_python.system"]], "Module \u201cutils\u201d": [[24, "module-tc_python.utils"]], "TC-Python API reference documentation": [[25, "tc-python-api-reference-documentation"]], "Installation Guide": [[26, "installation-guide"]], "What type of installation should I choose?": [[26, "what-type-of-installation-should-i-choose"]], "Using the Python-interpreter bundled to Thermo-Calc": [[26, "using-the-python-interpreter-bundled-to-thermo-calc"]], "Limitations": [[26, "limitations"]], "Step 1: Install an IDE (Integrated Development Environment)": [[26, "step-1-install-an-ide-integrated-development-environment"]], "Step 2: Configure PyCharm to use the bundled Python-interpreter": [[26, "step-2-configure-pycharm-to-use-the-bundled-python-interpreter"]], "Step 3: Run a TC-Python Example": [[26, "step-3-run-a-tc-python-example"]], "Open the TC-Python Project in PyCharm": [[26, "open-the-tc-python-project-in-pycharm"], [26, "id1"]], "Installing TC-Python into the Python-interpreter of your choice": [[26, "installing-tc-python-into-the-python-interpreter-of-your-choice"]], "Step 1: Install a Python Distribution": [[26, "step-1-install-a-python-distribution"]], "Install Anaconda": [[26, "install-anaconda"]], "Step 2: Install Thermo-Calc and the TC-Python SDK": [[26, "step-2-install-thermo-calc-and-the-tc-python-sdk"]], "Step 3: Install TC-Python": [[26, "step-3-install-tc-python"]], "Step 4: Install an IDE (Integrated Development Environment)": [[26, "step-4-install-an-ide-integrated-development-environment"]], "Step 5: Open the IDE and Run a TC-Python Example": [[26, "step-5-open-the-ide-and-run-a-tc-python-example"]], "Fixing potential issues with the environment": [[26, "fixing-potential-issues-with-the-environment"]], "Updating to a newer version": [[26, "updating-to-a-newer-version"]], "Troubleshooting": [[27, "troubleshooting"]], "Diagnostics script": [[27, "diagnostics-script"]], "\u201cNo module named tc_python\u201d error on first usage": [[27, "no-module-named-tc-python-error-on-first-usage"]], "\u201cpip install\u201d fails with \u201cFailed to establish a new network connection\u201d or similar": [[27, "pip-install-fails-with-failed-to-establish-a-new-network-connection-or-similar"]]}, "indexentries": {"batchequilibriumcalculation (class in tc_python.batch_equilibrium)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation"]], "batchequilibriumresult (class in tc_python.batch_equilibrium)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumResult"]], "calculate() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.calculate"]], "disable_global_minimization() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.disable_global_minimization"]], "enable_global_minimization() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.enable_global_minimization"]], "get_components() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.get_components"]], "get_gibbs_energy_addition_for() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.get_gibbs_energy_addition_for"]], "get_system_data() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.get_system_data"]], "get_values_of() (tc_python.batch_equilibrium.batchequilibriumresult method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumResult.get_values_of"]], "invalidate() (tc_python.batch_equilibrium.batchequilibriumresult method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumResult.invalidate"]], "module": [[3, "module-tc_python.batch_equilibrium"], [4, "module-tc_python.diffusion"], [5, "module-tc_python.material_to_material"], [6, "module-tc_python.precipitation"], [8, "module-tc_python.process_metallurgy.base"], [9, "module-tc_python.process_metallurgy.equilibrium"], [10, "module-tc_python.process_metallurgy.process"], [11, "module-tc_python.propertymodel"], [12, "module-tc_python.scheil"], [13, "module-tc_python.single_equilibrium"], [14, "module-tc_python.step_or_map_diagrams"], [17, "module-tc_python.abstract_base"], [18, "module-tc_python.entities"], [19, "module-tc_python.exceptions"], [20, "module-tc_python.propertymodel_sdk"], [21, "module-tc_python.quantity_factory"], [22, "module-tc_python.server"], [23, "module-tc_python.system"], [24, "module-tc_python.utils"]], "remove_all_conditions() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.remove_all_conditions"]], "remove_condition() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.remove_condition"]], "run_poly_command() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.run_poly_command"]], "set_component_to_entered() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_component_to_entered"]], "set_component_to_suspended() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_component_to_suspended"]], "set_condition() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_condition"]], "set_conditions_for_equilibria() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_conditions_for_equilibria"]], "set_gibbs_energy_addition_for() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_gibbs_energy_addition_for"]], "set_phase_to_dormant() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_phase_to_dormant"]], "set_phase_to_entered() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_phase_to_entered"]], "set_phase_to_fixed() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_phase_to_fixed"]], "set_phase_to_suspended() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.set_phase_to_suspended"]], "tc_python.batch_equilibrium": [[3, "module-tc_python.batch_equilibrium"]], "with_options() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.with_options"]], "with_reference_state() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.with_reference_state"]], "with_system_modifications() (tc_python.batch_equilibrium.batchequilibriumcalculation method)": [[3, "tc_python.batch_equilibrium.BatchEquilibriumCalculation.with_system_modifications"]], "abstractboundarycondition (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AbstractBoundaryCondition"]], "abstractcalculatedgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AbstractCalculatedGrid"]], "abstractelementprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AbstractElementProfile"]], "abstractgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AbstractGrid"]], "abstractsolver (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AbstractSolver"]], "activityfluxfunction (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ActivityFluxFunction"]], "automaticsolver (class in tc_python.diffusion)": [[4, "tc_python.diffusion.AutomaticSolver"]], "boundarycondition (class in tc_python.diffusion)": [[4, "tc_python.diffusion.BoundaryCondition"]], "calculatedgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.CalculatedGrid"]], "classicsolver (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ClassicSolver"]], "closedsystem (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ClosedSystem"]], "compositionprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.CompositionProfile"]], "constantprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ConstantProfile"]], "continueddiffusioncalculation (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation"]], "diffusioncalculationresult (class in tc_python.diffusion)": [[4, "tc_python.diffusion.DiffusionCalculationResult"]], "diffusionisothermalcalculation (class in tc_python.diffusion)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation"]], "diffusionnonisothermalcalculation (class in tc_python.diffusion)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation"]], "doublegeometricgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.DoubleGeometricGrid"]], "elementprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.ElementProfile"]], "first (tc_python.diffusion.simulationtime attribute)": [[4, "tc_python.diffusion.SimulationTime.FIRST"]], "fixfluxvalue (class in tc_python.diffusion)": [[4, "tc_python.diffusion.FixFluxValue"]], "fixedcompositions (class in tc_python.diffusion)": [[4, "tc_python.diffusion.FixedCompositions"]], "functionprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.FunctionProfile"]], "general_lower_hashin_shtrikman (tc_python.diffusion.homogenizationfunction attribute)": [[4, "tc_python.diffusion.HomogenizationFunction.GENERAL_LOWER_HASHIN_SHTRIKMAN"]], "general_upper_hashin_shtrikman (tc_python.diffusion.homogenizationfunction attribute)": [[4, "tc_python.diffusion.HomogenizationFunction.GENERAL_UPPER_HASHIN_SHTRIKMAN"]], "generallowerhashinshtrikman (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GeneralLowerHashinShtrikman"]], "generallowerhashinshtrikmanexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GeneralLowerHashinShtrikmanExcludedPhase"]], "generalupperhashinshtrikman (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GeneralUpperHashinShtrikman"]], "generalupperhashinshtrikmanexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GeneralUpperHashinShtrikmanExcludedPhase"]], "geometricgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GeometricGrid"]], "gridpoint (class in tc_python.diffusion)": [[4, "tc_python.diffusion.GridPoint"]], "hashin_shtrikman_bound_majority (tc_python.diffusion.homogenizationfunction attribute)": [[4, "tc_python.diffusion.HomogenizationFunction.HASHIN_SHTRIKMAN_BOUND_MAJORITY"]], "hashinshtrikmanboundmajority (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HashinShtrikmanBoundMajority"]], "hashinshtrikmanboundmajorityexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HashinShtrikmanBoundMajorityExcludedPhase"]], "hashinshtrikmanboundprescribed (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HashinShtrikmanBoundPrescribed"]], "hashinshtrikmanboundprescribedexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HashinShtrikmanBoundPrescribedExcludedPhase"]], "homogenizationfunction (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HomogenizationFunction"]], "homogenizationfunctions (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HomogenizationFunctions"]], "homogenizationsolver (class in tc_python.diffusion)": [[4, "tc_python.diffusion.HomogenizationSolver"]], "inverse_rule_of_mixtures (tc_python.diffusion.homogenizationfunction attribute)": [[4, "tc_python.diffusion.HomogenizationFunction.INVERSE_RULE_OF_MIXTURES"]], "inverseruleofmixtures (class in tc_python.diffusion)": [[4, "tc_python.diffusion.InverseRuleOfMixtures"]], "inverseruleofmixturesexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.InverseRuleOfMixturesExcludedPhase"]], "last (tc_python.diffusion.simulationtime attribute)": [[4, "tc_python.diffusion.SimulationTime.LAST"]], "labyrinthfactorf (class in tc_python.diffusion)": [[4, "tc_python.diffusion.LabyrinthFactorF"]], "labyrinthfactorf2 (class in tc_python.diffusion)": [[4, "tc_python.diffusion.LabyrinthFactorF2"]], "lineargrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.LinearGrid"]], "linearprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.LinearProfile"]], "mass_fraction (tc_python.diffusion.unit attribute)": [[4, "tc_python.diffusion.Unit.MASS_FRACTION"]], "mass_percent (tc_python.diffusion.unit attribute)": [[4, "tc_python.diffusion.Unit.MASS_PERCENT"]], "mole_fraction (tc_python.diffusion.unit attribute)": [[4, "tc_python.diffusion.Unit.MOLE_FRACTION"]], "mole_percent (tc_python.diffusion.unit attribute)": [[4, "tc_python.diffusion.Unit.MOLE_PERCENT"]], "mixedzerofluxandactivity (class in tc_python.diffusion)": [[4, "tc_python.diffusion.MixedZeroFluxAndActivity"]], "options (class in tc_python.diffusion)": [[4, "tc_python.diffusion.Options"]], "pointbypointgrid (class in tc_python.diffusion)": [[4, "tc_python.diffusion.PointByPointGrid"]], "rule_of_mixtures (tc_python.diffusion.homogenizationfunction attribute)": [[4, "tc_python.diffusion.HomogenizationFunction.RULE_OF_MIXTURES"]], "region (class in tc_python.diffusion)": [[4, "tc_python.diffusion.Region"]], "ruleofmixtures (class in tc_python.diffusion)": [[4, "tc_python.diffusion.RuleOfMixtures"]], "ruleofmixturesexcludedphase (class in tc_python.diffusion)": [[4, "tc_python.diffusion.RuleOfMixturesExcludedPhase"]], "simulationtime (class in tc_python.diffusion)": [[4, "tc_python.diffusion.SimulationTime"]], "solver (class in tc_python.diffusion)": [[4, "tc_python.diffusion.Solver"]], "stepprofile (class in tc_python.diffusion)": [[4, "tc_python.diffusion.StepProfile"]], "timestepcontrol (class in tc_python.diffusion)": [[4, "tc_python.diffusion.TimestepControl"]], "u_fraction (tc_python.diffusion.unit attribute)": [[4, "tc_python.diffusion.Unit.U_FRACTION"]], "unit (class in tc_python.diffusion)": [[4, "tc_python.diffusion.Unit"]], "activity_flux_function() (tc_python.diffusion.boundarycondition class method)": [[4, "tc_python.diffusion.BoundaryCondition.activity_flux_function"]], "add() (tc_python.diffusion.compositionprofile method)": [[4, "tc_python.diffusion.CompositionProfile.add"]], "add_composition() (tc_python.diffusion.gridpoint method)": [[4, "tc_python.diffusion.GridPoint.add_composition"]], "add_console_command() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.add_console_command"]], "add_console_command() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.add_console_command"]], "add_phase() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.add_phase"]], "add_phase_allowed_to_form_at_left_interface() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.add_phase_allowed_to_form_at_left_interface"]], "add_phase_allowed_to_form_at_right_interface() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.add_phase_allowed_to_form_at_right_interface"]], "add_point() (tc_python.diffusion.pointbypointgrid method)": [[4, "tc_python.diffusion.PointByPointGrid.add_point"]], "add_region() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.add_region"]], "add_region() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.add_region"]], "automatic() (tc_python.diffusion.solver class method)": [[4, "tc_python.diffusion.Solver.automatic"]], "calculate() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.calculate"]], "calculate() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.calculate"]], "calculate() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.calculate"]], "classic() (tc_python.diffusion.solver class method)": [[4, "tc_python.diffusion.Solver.classic"]], "closed_system() (tc_python.diffusion.boundarycondition class method)": [[4, "tc_python.diffusion.BoundaryCondition.closed_system"]], "constant() (tc_python.diffusion.elementprofile class method)": [[4, "tc_python.diffusion.ElementProfile.constant"]], "disable_check_interface_position() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.disable_check_interface_position"]], "disable_forced_starting_values_in_equilibrium_calculations() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.disable_forced_starting_values_in_equilibrium_calculations"]], "disable_global_minimization() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.disable_global_minimization"]], "disable_interpolation_scheme() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.disable_interpolation_scheme"]], "disable_save_results_to_file() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.disable_save_results_to_file"]], "double_geometric() (tc_python.diffusion.calculatedgrid class method)": [[4, "tc_python.diffusion.CalculatedGrid.double_geometric"]], "enable_automatic_check_interface_position() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.enable_automatic_check_interface_position"]], "enable_automatic_forced_starting_values_in_eq_calculations() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_automatic_forced_starting_values_in_eq_calculations"]], "enable_check_interface_position() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.enable_check_interface_position"]], "enable_forced_starting_values_in_equilibrium_calculations() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_forced_starting_values_in_equilibrium_calculations"]], "enable_global_minimization() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.enable_global_minimization"]], "enable_save_results_to_file() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_save_results_to_file"]], "enable_time_integration_method_automatic() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_time_integration_method_automatic"]], "enable_time_integration_method_euler_backwards() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_time_integration_method_euler_backwards"]], "enable_time_integration_method_trapezoidal() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.enable_time_integration_method_trapezoidal"]], "fix_flux_value() (tc_python.diffusion.boundarycondition class method)": [[4, "tc_python.diffusion.BoundaryCondition.fix_flux_value"]], "fixed_compositions() (tc_python.diffusion.boundarycondition class method)": [[4, "tc_python.diffusion.BoundaryCondition.fixed_compositions"]], "funct() (tc_python.diffusion.elementprofile class method)": [[4, "tc_python.diffusion.ElementProfile.funct"]], "general_lower_hashin_shtrikman() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.general_lower_hashin_shtrikman"]], "general_lower_hashin_shtrikman_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.general_lower_hashin_shtrikman_excluded_phase"]], "general_upper_hashin_shtrikman() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.general_upper_hashin_shtrikman"]], "general_upper_hashin_shtrikman_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.general_upper_hashin_shtrikman_excluded_phase"]], "geometric() (tc_python.diffusion.calculatedgrid class method)": [[4, "tc_python.diffusion.CalculatedGrid.geometric"]], "get_geometrical_factor() (tc_python.diffusion.geometricgrid method)": [[4, "tc_python.diffusion.GeometricGrid.get_geometrical_factor"]], "get_lower_geometrical_factor() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.get_lower_geometrical_factor"]], "get_mass_fraction_at_lower_interface() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mass_fraction_at_lower_interface"]], "get_mass_fraction_at_upper_interface() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mass_fraction_at_upper_interface"]], "get_mass_fraction_of_component_at_time() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mass_fraction_of_component_at_time"]], "get_mass_fraction_of_phase_at_time() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mass_fraction_of_phase_at_time"]], "get_mole_fraction_at_lower_interface() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mole_fraction_at_lower_interface"]], "get_mole_fraction_at_upper_interface() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mole_fraction_at_upper_interface"]], "get_mole_fraction_of_component_at_time() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mole_fraction_of_component_at_time"]], "get_mole_fraction_of_phase_at_time() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_mole_fraction_of_phase_at_time"]], "get_no_of_points() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.get_no_of_points"]], "get_no_of_points() (tc_python.diffusion.geometricgrid method)": [[4, "tc_python.diffusion.GeometricGrid.get_no_of_points"]], "get_no_of_points() (tc_python.diffusion.lineargrid method)": [[4, "tc_python.diffusion.LinearGrid.get_no_of_points"]], "get_position_of_lower_boundary_of_region() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_position_of_lower_boundary_of_region"]], "get_position_of_upper_boundary_of_region() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_position_of_upper_boundary_of_region"]], "get_regions() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_regions"]], "get_system_data() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.get_system_data"]], "get_system_data() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.get_system_data"]], "get_time_steps() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_time_steps"]], "get_total_mass_fraction_of_component() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mass_fraction_of_component"]], "get_total_mass_fraction_of_component_in_phase() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mass_fraction_of_component_in_phase"]], "get_total_mass_fraction_of_phase() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mass_fraction_of_phase"]], "get_total_mole_fraction_of_component() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mole_fraction_of_component"]], "get_total_mole_fraction_of_component_in_phase() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mole_fraction_of_component_in_phase"]], "get_total_mole_fraction_of_phase() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_mole_fraction_of_phase"]], "get_total_volume_fraction_of_phase() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_total_volume_fraction_of_phase"]], "get_type() (tc_python.diffusion.activityfluxfunction method)": [[4, "tc_python.diffusion.ActivityFluxFunction.get_type"]], "get_type() (tc_python.diffusion.automaticsolver method)": [[4, "tc_python.diffusion.AutomaticSolver.get_type"]], "get_type() (tc_python.diffusion.classicsolver method)": [[4, "tc_python.diffusion.ClassicSolver.get_type"]], "get_type() (tc_python.diffusion.closedsystem method)": [[4, "tc_python.diffusion.ClosedSystem.get_type"]], "get_type() (tc_python.diffusion.constantprofile method)": [[4, "tc_python.diffusion.ConstantProfile.get_type"]], "get_type() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.get_type"]], "get_type() (tc_python.diffusion.fixfluxvalue method)": [[4, "tc_python.diffusion.FixFluxValue.get_type"]], "get_type() (tc_python.diffusion.fixedcompositions method)": [[4, "tc_python.diffusion.FixedCompositions.get_type"]], "get_type() (tc_python.diffusion.functionprofile method)": [[4, "tc_python.diffusion.FunctionProfile.get_type"]], "get_type() (tc_python.diffusion.geometricgrid method)": [[4, "tc_python.diffusion.GeometricGrid.get_type"]], "get_type() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.get_type"]], "get_type() (tc_python.diffusion.lineargrid method)": [[4, "tc_python.diffusion.LinearGrid.get_type"]], "get_type() (tc_python.diffusion.linearprofile method)": [[4, "tc_python.diffusion.LinearProfile.get_type"]], "get_type() (tc_python.diffusion.mixedzerofluxandactivity method)": [[4, "tc_python.diffusion.MixedZeroFluxAndActivity.get_type"]], "get_type() (tc_python.diffusion.pointbypointgrid method)": [[4, "tc_python.diffusion.PointByPointGrid.get_type"]], "get_type() (tc_python.diffusion.stepprofile method)": [[4, "tc_python.diffusion.StepProfile.get_type"]], "get_upper_geometrical_factor() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.get_upper_geometrical_factor"]], "get_values_of() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_values_of"]], "get_velocity_of_lower_boundary_of_region() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_velocity_of_lower_boundary_of_region"]], "get_velocity_of_upper_boundary_of_region() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_velocity_of_upper_boundary_of_region"]], "get_width_of_region() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.get_width_of_region"]], "hashin_shtrikman_bound_majority() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.hashin_shtrikman_bound_majority"]], "hashin_shtrikman_bound_majority_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.hashin_shtrikman_bound_majority_excluded_phase"]], "hashin_shtrikman_bound_prescribed() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.hashin_shtrikman_bound_prescribed"]], "hashin_shtrikman_bound_prescribed_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.hashin_shtrikman_bound_prescribed_excluded_phase"]], "homogenization() (tc_python.diffusion.solver class method)": [[4, "tc_python.diffusion.Solver.homogenization"]], "inverse_rule_of_mixtures() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.inverse_rule_of_mixtures"]], "inverse_rule_of_mixtures_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.inverse_rule_of_mixtures_excluded_phase"]], "labyrinth_factor_f() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.labyrinth_factor_f"]], "labyrinth_factor_f2() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.labyrinth_factor_f2"]], "linear() (tc_python.diffusion.calculatedgrid class method)": [[4, "tc_python.diffusion.CalculatedGrid.linear"]], "linear() (tc_python.diffusion.elementprofile class method)": [[4, "tc_python.diffusion.ElementProfile.linear"]], "mixed_zero_flux_and_activity() (tc_python.diffusion.boundarycondition class method)": [[4, "tc_python.diffusion.BoundaryCondition.mixed_zero_flux_and_activity"]], "remove_all_console_commands() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.remove_all_console_commands"]], "remove_all_console_commands() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.remove_all_console_commands"]], "remove_all_phases() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.remove_all_phases"]], "remove_all_regions() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.remove_all_regions"]], "remove_all_regions() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.remove_all_regions"]], "rule_of_mixtures() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.rule_of_mixtures"]], "rule_of_mixtures_excluded_phase() (tc_python.diffusion.homogenizationfunctions class method)": [[4, "tc_python.diffusion.HomogenizationFunctions.rule_of_mixtures_excluded_phase"]], "save_to_disk() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.save_to_disk"]], "set_activity_for_element() (tc_python.diffusion.mixedzerofluxandactivity method)": [[4, "tc_python.diffusion.MixedZeroFluxAndActivity.set_activity_for_element"]], "set_composition() (tc_python.diffusion.fixedcompositions method)": [[4, "tc_python.diffusion.FixedCompositions.set_composition"]], "set_default_driving_force_for_phases_allowed_to_form_at_interf() (tc_python.diffusion.options method)": [[4, "tc_python.diffusion.Options.set_default_driving_force_for_phases_allowed_to_form_at_interf"]], "set_flux() (tc_python.diffusion.fixfluxvalue method)": [[4, "tc_python.diffusion.FixFluxValue.set_flux"]], "set_flux_balance_equation_accuracy() (tc_python.diffusion.automaticsolver method)": [[4, "tc_python.diffusion.AutomaticSolver.set_flux_balance_equation_accuracy"]], "set_flux_balance_equation_accuracy() (tc_python.diffusion.classicsolver method)": [[4, "tc_python.diffusion.ClassicSolver.set_flux_balance_equation_accuracy"]], "set_flux_function() (tc_python.diffusion.activityfluxfunction method)": [[4, "tc_python.diffusion.ActivityFluxFunction.set_flux_function"]], "set_fraction_of_free_memory_to_use() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.set_fraction_of_free_memory_to_use"]], "set_geometrical_factor() (tc_python.diffusion.geometricgrid method)": [[4, "tc_python.diffusion.GeometricGrid.set_geometrical_factor"]], "set_initial_time_step() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_initial_time_step"]], "set_lower_geometrical_factor() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.set_lower_geometrical_factor"]], "set_max_absolute_error() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_max_absolute_error"]], "set_max_relative_error() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_max_relative_error"]], "set_max_timestep_allowed_as_percent_of_simulation_time() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_max_timestep_allowed_as_percent_of_simulation_time"]], "set_max_timestep_increase_factor() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_max_timestep_increase_factor"]], "set_memory_to_use() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.set_memory_to_use"]], "set_no_of_points() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.set_no_of_points"]], "set_no_of_points() (tc_python.diffusion.geometricgrid method)": [[4, "tc_python.diffusion.GeometricGrid.set_no_of_points"]], "set_no_of_points() (tc_python.diffusion.lineargrid method)": [[4, "tc_python.diffusion.LinearGrid.set_no_of_points"]], "set_simulation_time() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.set_simulation_time"]], "set_simulation_time() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.set_simulation_time"]], "set_simulation_time() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.set_simulation_time"]], "set_smallest_time_step_allowed() (tc_python.diffusion.timestepcontrol method)": [[4, "tc_python.diffusion.TimestepControl.set_smallest_time_step_allowed"]], "set_temperature() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.set_temperature"]], "set_tieline_search_variable_to_activity() (tc_python.diffusion.automaticsolver method)": [[4, "tc_python.diffusion.AutomaticSolver.set_tieline_search_variable_to_activity"]], "set_tieline_search_variable_to_activity() (tc_python.diffusion.classicsolver method)": [[4, "tc_python.diffusion.ClassicSolver.set_tieline_search_variable_to_activity"]], "set_tieline_search_variable_to_potential() (tc_python.diffusion.automaticsolver method)": [[4, "tc_python.diffusion.AutomaticSolver.set_tieline_search_variable_to_potential"]], "set_tieline_search_variable_to_potential() (tc_python.diffusion.classicsolver method)": [[4, "tc_python.diffusion.ClassicSolver.set_tieline_search_variable_to_potential"]], "set_upper_geometrical_factor() (tc_python.diffusion.doublegeometricgrid method)": [[4, "tc_python.diffusion.DoubleGeometricGrid.set_upper_geometrical_factor"]], "set_width() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.set_width"]], "set_zero_flux_for_element() (tc_python.diffusion.mixedzerofluxandactivity method)": [[4, "tc_python.diffusion.MixedZeroFluxAndActivity.set_zero_flux_for_element"]], "step() (tc_python.diffusion.elementprofile class method)": [[4, "tc_python.diffusion.ElementProfile.step"]], "tc_python.diffusion": [[4, "module-tc_python.diffusion"]], "with_composition_profile() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.with_composition_profile"]], "with_continued_calculation() (tc_python.diffusion.diffusioncalculationresult method)": [[4, "tc_python.diffusion.DiffusionCalculationResult.with_continued_calculation"]], "with_cylindrical_geometry() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_cylindrical_geometry"]], "with_cylindrical_geometry() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_cylindrical_geometry"]], "with_function() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.with_function"]], "with_grid() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.with_grid"]], "with_left_boundary_condition() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.with_left_boundary_condition"]], "with_left_boundary_condition() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_left_boundary_condition"]], "with_left_boundary_condition() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_left_boundary_condition"]], "with_linear_interpolation_scheme() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.with_linear_interpolation_scheme"]], "with_logarithmic_interpolation_scheme() (tc_python.diffusion.homogenizationsolver method)": [[4, "tc_python.diffusion.HomogenizationSolver.with_logarithmic_interpolation_scheme"]], "with_options() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.with_options"]], "with_options() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_options"]], "with_options() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_options"]], "with_planar_geometry() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_planar_geometry"]], "with_planar_geometry() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_planar_geometry"]], "with_point_by_point_grid_containing_compositions() (tc_python.diffusion.region method)": [[4, "tc_python.diffusion.Region.with_point_by_point_grid_containing_compositions"]], "with_reference_state() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_reference_state"]], "with_reference_state() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_reference_state"]], "with_right_boundary_condition() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.with_right_boundary_condition"]], "with_right_boundary_condition() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_right_boundary_condition"]], "with_right_boundary_condition() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_right_boundary_condition"]], "with_solver() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.with_solver"]], "with_solver() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_solver"]], "with_solver() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_solver"]], "with_spherical_geometry() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_spherical_geometry"]], "with_spherical_geometry() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_spherical_geometry"]], "with_system_modifications() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_system_modifications"]], "with_temperature_profile() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_temperature_profile"]], "with_timestep_control() (tc_python.diffusion.continueddiffusioncalculation method)": [[4, "tc_python.diffusion.ContinuedDiffusionCalculation.with_timestep_control"]], "with_timestep_control() (tc_python.diffusion.diffusionisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionIsoThermalCalculation.with_timestep_control"]], "with_timestep_control() (tc_python.diffusion.diffusionnonisothermalcalculation method)": [[4, "tc_python.diffusion.DiffusionNonIsoThermalCalculation.with_timestep_control"]], "abstractconstantcondition (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.AbstractConstantCondition"]], "abstractmaterialtomaterialcalculationaxis (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.AbstractMaterialToMaterialCalculationAxis"]], "constantcondition (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.ConstantCondition"]], "fractionofmaterialbaxis (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.FractionOfMaterialBAxis"]], "fractionofmaterialbcondition (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.FractionOfMaterialBCondition"]], "materialtomaterialcalculationaxis (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationAxis"]], "materialtomaterialcalculationcontainer (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationContainer"]], "materialtomaterialphasediagramcalculation (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation"]], "materialtomaterialphasediagramresult (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult"]], "materialtomaterialpropertydiagramcalculation (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation"]], "materialtomaterialpropertydiagramresult (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult"]], "materialtomaterialsingleequilibriumcalculation (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation"]], "materialtomaterialsingleequilibriumresult (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult"]], "temperatureaxis (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.TemperatureAxis"]], "temperaturecondition (class in tc_python.material_to_material)": [[5, "tc_python.material_to_material.TemperatureCondition"]], "add_coordinate_for_phase_label() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.add_coordinate_for_phase_label"]], "add_initial_equilibrium() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.add_initial_equilibrium"]], "calculate() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.calculate"]], "calculate() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.calculate"]], "calculate() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.calculate"]], "change_pressure() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.change_pressure"]], "change_temperature() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.change_temperature"]], "disable_global_minimization() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.disable_global_minimization"]], "disable_step_separate_phases() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.disable_step_separate_phases"]], "dont_keep_default_equilibria() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.dont_keep_default_equilibria"]], "enable_global_minimization() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.enable_global_minimization"]], "enable_step_separate_phases() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.enable_step_separate_phases"]], "fraction_of_material_b() (tc_python.material_to_material.constantcondition class method)": [[5, "tc_python.material_to_material.ConstantCondition.fraction_of_material_b"]], "fraction_of_material_b() (tc_python.material_to_material.materialtomaterialcalculationaxis class method)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationAxis.fraction_of_material_b"]], "get_components() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.get_components"]], "get_components() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.get_components"]], "get_components() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.get_components"]], "get_components() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.get_components"]], "get_conditions() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.get_conditions"]], "get_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.get_gibbs_energy_addition_for"]], "get_phases() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.get_phases"]], "get_stable_phases() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.get_stable_phases"]], "get_system_data() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.get_system_data"]], "get_system_data() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.get_system_data"]], "get_system_data() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.get_system_data"]], "get_value_of() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.get_value_of"]], "get_values_grouped_by_quantity_of() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.get_values_grouped_by_quantity_of"]], "get_values_grouped_by_quantity_of() (tc_python.material_to_material.materialtomaterialpropertydiagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult.get_values_grouped_by_quantity_of"]], "get_values_grouped_by_stable_phases_of() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.get_values_grouped_by_stable_phases_of"]], "get_values_grouped_by_stable_phases_of() (tc_python.material_to_material.materialtomaterialpropertydiagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult.get_values_grouped_by_stable_phases_of"]], "get_values_of() (tc_python.material_to_material.materialtomaterialpropertydiagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult.get_values_of"]], "keep_default_equilibria() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.keep_default_equilibria"]], "remove_all_initial_equilibria() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.remove_all_initial_equilibria"]], "remove_phase_labels() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.remove_phase_labels"]], "run_poly_command() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.run_poly_command"]], "run_poly_command() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.run_poly_command"]], "run_poly_command() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.run_poly_command"]], "run_poly_command() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.run_poly_command"]], "save_to_disk() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.save_to_disk"]], "save_to_disk() (tc_python.material_to_material.materialtomaterialpropertydiagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult.save_to_disk"]], "save_to_disk() (tc_python.material_to_material.materialtomaterialsingleequilibriumresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumResult.save_to_disk"]], "set_activities() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_activities"]], "set_activities() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_activities"]], "set_activities() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_activities"]], "set_component_to_entered() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_component_to_entered"]], "set_component_to_suspended() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_component_to_suspended"]], "set_composition_unit() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_composition_unit"]], "set_composition_unit() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_composition_unit"]], "set_composition_unit() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_composition_unit"]], "set_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_gibbs_energy_addition_for"]], "set_material_a() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_material_a"]], "set_material_a() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_material_a"]], "set_material_a() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_material_a"]], "set_material_b() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_material_b"]], "set_material_b() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_material_b"]], "set_material_b() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_material_b"]], "set_phase_name_style() (tc_python.material_to_material.materialtomaterialphasediagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramResult.set_phase_name_style"]], "set_phase_name_style() (tc_python.material_to_material.materialtomaterialpropertydiagramresult method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramResult.set_phase_name_style"]], "set_phase_to_dormant() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_phase_to_dormant"]], "set_phase_to_entered() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_phase_to_entered"]], "set_phase_to_fixed() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_phase_to_fixed"]], "set_phase_to_suspended() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_phase_to_suspended"]], "set_pressure() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_pressure"]], "set_pressure() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_pressure"]], "set_pressure() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_pressure"]], "set_system_size() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.set_system_size"]], "set_system_size() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.set_system_size"]], "set_system_size() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.set_system_size"]], "tc_python.material_to_material": [[5, "module-tc_python.material_to_material"]], "temperature() (tc_python.material_to_material.constantcondition class method)": [[5, "tc_python.material_to_material.ConstantCondition.temperature"]], "temperature() (tc_python.material_to_material.materialtomaterialcalculationaxis class method)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationAxis.temperature"]], "with_axis() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.with_axis"]], "with_constant_condition() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.with_constant_condition"]], "with_first_axis() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.with_first_axis"]], "with_first_constant_condition() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.with_first_constant_condition"]], "with_options() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.with_options"]], "with_options() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.with_options"]], "with_options() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.with_options"]], "with_phase_diagram_calculation() (tc_python.material_to_material.materialtomaterialcalculationcontainer method)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationContainer.with_phase_diagram_calculation"]], "with_property_diagram_calculation() (tc_python.material_to_material.materialtomaterialcalculationcontainer method)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationContainer.with_property_diagram_calculation"]], "with_reference_state() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.with_reference_state"]], "with_reference_state() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.with_reference_state"]], "with_reference_state() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.with_reference_state"]], "with_second_axis() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.with_second_axis"]], "with_second_constant_condition() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.with_second_constant_condition"]], "with_single_equilibrium_calculation() (tc_python.material_to_material.materialtomaterialcalculationcontainer method)": [[5, "tc_python.material_to_material.MaterialToMaterialCalculationContainer.with_single_equilibrium_calculation"]], "with_system_modifications() (tc_python.material_to_material.materialtomaterialphasediagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPhaseDiagramCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.material_to_material.materialtomaterialpropertydiagramcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialPropertyDiagramCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.material_to_material.materialtomaterialsingleequilibriumcalculation method)": [[5, "tc_python.material_to_material.MaterialToMaterialSingleEquilibriumCalculation.with_system_modifications"]], "advanced (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.ADVANCED"]], "calculate_from_molar_volume (tc_python.precipitation.transformationstraincalculationoption attribute)": [[6, "tc_python.precipitation.TransformationStrainCalculationOption.CALCULATE_FROM_MOLAR_VOLUME"]], "cuboid (tc_python.precipitation.precipitatemorphology attribute)": [[6, "tc_python.precipitation.PrecipitateMorphology.CUBOID"]], "disregard (tc_python.precipitation.transformationstraincalculationoption attribute)": [[6, "tc_python.precipitation.TransformationStrainCalculationOption.DISREGARD"]], "fixedgrainsize (class in tc_python.precipitation)": [[6, "tc_python.precipitation.FixedGrainSize"]], "general (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.GENERAL"]], "graingrowth (class in tc_python.precipitation)": [[6, "tc_python.precipitation.GrainGrowth"]], "graingrowthmodel (class in tc_python.precipitation)": [[6, "tc_python.precipitation.GrainGrowthModel"]], "grainsizedistribution (class in tc_python.precipitation)": [[6, "tc_python.precipitation.GrainSizeDistribution"]], "growthratemodel (class in tc_python.precipitation)": [[6, "tc_python.precipitation.GrowthRateModel"]], "matrixphase (class in tc_python.precipitation)": [[6, "tc_python.precipitation.MatrixPhase"]], "needle (tc_python.precipitation.precipitatemorphology attribute)": [[6, "tc_python.precipitation.PrecipitateMorphology.NEEDLE"]], "nple (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.NPLE"]], "numericalparameters (class in tc_python.precipitation)": [[6, "tc_python.precipitation.NumericalParameters"]], "para_eq (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.PARA_EQ"]], "pe_automatic (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.PE_AUTOMATIC"]], "plate (tc_python.precipitation.precipitatemorphology attribute)": [[6, "tc_python.precipitation.PrecipitateMorphology.PLATE"]], "particlesizedistribution (class in tc_python.precipitation)": [[6, "tc_python.precipitation.ParticleSizeDistribution"]], "precipitateelasticproperties (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitateElasticProperties"]], "precipitatemorphology (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitateMorphology"]], "precipitatephase (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitatePhase"]], "precipitationcctcalculation (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation"]], "precipitationcalculationresult (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationCalculationResult"]], "precipitationcalculationsingleresult (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult"]], "precipitationcalculationtttorcctresult (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationCalculationTTTorCCTResult"]], "precipitationisothermalcalculation (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation"]], "precipitationnonisothermalcalculation (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation"]], "precipitationtttcalculation (class in tc_python.precipitation)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation"]], "simplified (tc_python.precipitation.growthratemodel attribute)": [[6, "tc_python.precipitation.GrowthRateModel.SIMPLIFIED"]], "sphere (tc_python.precipitation.precipitatemorphology attribute)": [[6, "tc_python.precipitation.PrecipitateMorphology.SPHERE"]], "transformationstraincalculationoption (class in tc_python.precipitation)": [[6, "tc_python.precipitation.TransformationStrainCalculationOption"]], "user_defined (tc_python.precipitation.transformationstraincalculationoption attribute)": [[6, "tc_python.precipitation.TransformationStrainCalculationOption.USER_DEFINED"]], "volume_fraction (tc_python.precipitation.volumefractionofphasetype attribute)": [[6, "tc_python.precipitation.VolumeFractionOfPhaseType.VOLUME_FRACTION"]], "volume_percent (tc_python.precipitation.volumefractionofphasetype attribute)": [[6, "tc_python.precipitation.VolumeFractionOfPhaseType.VOLUME_PERCENT"]], "volumefractionofphasetype (class in tc_python.precipitation)": [[6, "tc_python.precipitation.VolumeFractionOfPhaseType"]], "add_precipitate_phase() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.add_precipitate_phase"]], "add_radius_and_number_density() (tc_python.precipitation.grainsizedistribution method)": [[6, "tc_python.precipitation.GrainSizeDistribution.add_radius_and_number_density"]], "add_radius_and_number_density() (tc_python.precipitation.particlesizedistribution method)": [[6, "tc_python.precipitation.ParticleSizeDistribution.add_radius_and_number_density"]], "calculate() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.calculate"]], "calculate() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.calculate"]], "calculate() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.calculate"]], "calculate() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.calculate"]], "disable_calculate_aspect_ratio_from_elastic_energy() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.disable_calculate_aspect_ratio_from_elastic_energy"]], "disable_driving_force_approximation() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.disable_driving_force_approximation"]], "disable_zener_pinning() (tc_python.precipitation.graingrowth method)": [[6, "tc_python.precipitation.GrainGrowth.disable_zener_pinning"]], "enable_calculate_aspect_ratio_from_elastic_energy() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.enable_calculate_aspect_ratio_from_elastic_energy"]], "enable_driving_force_approximation() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.enable_driving_force_approximation"]], "enable_zener_pinning() (tc_python.precipitation.graingrowth method)": [[6, "tc_python.precipitation.GrainGrowth.enable_zener_pinning"]], "fixed_grain_size() (tc_python.precipitation.graingrowthmodel class method)": [[6, "tc_python.precipitation.GrainGrowthModel.fixed_grain_size"]], "get_aspect_ratio_distribution_for_particle_length_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_aspect_ratio_distribution_for_particle_length_of"]], "get_aspect_ratio_distribution_for_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_aspect_ratio_distribution_for_radius_of"]], "get_critical_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_critical_radius_of"]], "get_cubic_factor_distribution_for_particle_length_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_cubic_factor_distribution_for_particle_length_of"]], "get_cubic_factor_distribution_for_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_cubic_factor_distribution_for_radius_of"]], "get_driving_force_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_driving_force_of"]], "get_grain_critical_radius() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_critical_radius"]], "get_grain_mean_radius() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_mean_radius"]], "get_grain_number_density() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_number_density"]], "get_grain_number_density_distribution_for_length() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_number_density_distribution_for_length"]], "get_grain_number_density_distribution_for_radius() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_number_density_distribution_for_radius"]], "get_grain_size_distribution() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_grain_size_distribution"]], "get_matrix_composition_in_mole_fraction_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_matrix_composition_in_mole_fraction_of"]], "get_matrix_composition_in_weight_fraction_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_matrix_composition_in_weight_fraction_of"]], "get_mean_aspect_ratio_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_mean_aspect_ratio_of"]], "get_mean_cubic_factor_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_mean_cubic_factor_of"]], "get_mean_particle_length_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_mean_particle_length_of"]], "get_mean_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_mean_radius_of"]], "get_normalized_grain_size_distribution() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_normalized_grain_size_distribution"]], "get_normalized_number_density_distribution_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_normalized_number_density_distribution_of"]], "get_nucleation_rate_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_nucleation_rate_of"]], "get_number_density_distribution_for_particle_length_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_number_density_distribution_for_particle_length_of"]], "get_number_density_distribution_for_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_number_density_distribution_for_radius_of"]], "get_number_density_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_number_density_of"]], "get_precipitate_composition_in_mole_fraction_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_precipitate_composition_in_mole_fraction_of"]], "get_precipitate_composition_in_weight_fraction_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_precipitate_composition_in_weight_fraction_of"]], "get_result_for_precipitate() (tc_python.precipitation.precipitationcalculationtttorcctresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationTTTorCCTResult.get_result_for_precipitate"]], "get_size_distribution_for_particle_length_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_size_distribution_for_particle_length_of"]], "get_size_distribution_for_radius_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_size_distribution_for_radius_of"]], "get_system_data() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.get_system_data"]], "get_system_data() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.get_system_data"]], "get_system_data() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.get_system_data"]], "get_system_data() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.get_system_data"]], "get_volume_fraction_of() (tc_python.precipitation.precipitationcalculationsingleresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationSingleResult.get_volume_fraction_of"]], "grain_growth() (tc_python.precipitation.graingrowthmodel class method)": [[6, "tc_python.precipitation.GrainGrowthModel.grain_growth"]], "save_to_disk() (tc_python.precipitation.precipitationcalculationresult method)": [[6, "tc_python.precipitation.PrecipitationCalculationResult.save_to_disk"]], "set_alias() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_alias"]], "set_aspect_ratio_value() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_aspect_ratio_value"]], "set_composition() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.set_composition"]], "set_composition() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.set_composition"]], "set_composition() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.set_composition"]], "set_composition() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_composition"]], "set_composition_unit() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.set_composition_unit"]], "set_composition_unit() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.set_composition_unit"]], "set_composition_unit() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.set_composition_unit"]], "set_composition_unit() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_composition_unit"]], "set_cooling_rates() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.set_cooling_rates"]], "set_dislocation_density() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.set_dislocation_density"]], "set_e11() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e11"]], "set_e12() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e12"]], "set_e13() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e13"]], "set_e22() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e22"]], "set_e23() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e23"]], "set_e33() (tc_python.precipitation.precipitateelasticproperties method)": [[6, "tc_python.precipitation.PrecipitateElasticProperties.set_e33"]], "set_gibbs_energy_addition() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_gibbs_energy_addition"]], "set_grain_aspect_ratio() (tc_python.precipitation.fixedgrainsize method)": [[6, "tc_python.precipitation.FixedGrainSize.set_grain_aspect_ratio"]], "set_grain_boundary_energy() (tc_python.precipitation.graingrowth method)": [[6, "tc_python.precipitation.GrainGrowth.set_grain_boundary_energy"]], "set_grain_boundary_mobility_activation_energy() (tc_python.precipitation.graingrowth method)": [[6, "tc_python.precipitation.GrainGrowth.set_grain_boundary_mobility_activation_energy"]], "set_grain_boundary_mobility_pre_factor() (tc_python.precipitation.graingrowth method)": [[6, "tc_python.precipitation.GrainGrowth.set_grain_boundary_mobility_pre_factor"]], "set_initial_composition() (tc_python.precipitation.particlesizedistribution method)": [[6, "tc_python.precipitation.ParticleSizeDistribution.set_initial_composition"]], "set_interfacial_energy() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_interfacial_energy"]], "set_interfacial_energy_estimation_prefactor() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_interfacial_energy_estimation_prefactor"]], "set_max_annealing_time() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_max_annealing_time"]], "set_max_overall_volume_change() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_overall_volume_change"]], "set_max_radius_points_per_magnitude() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_radius_points_per_magnitude"]], "set_max_rel_change_critical_radius() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_rel_change_critical_radius"]], "set_max_rel_change_nucleation_rate_log() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_rel_change_nucleation_rate_log"]], "set_max_rel_radius_change() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_rel_radius_change"]], "set_max_rel_solute_composition_change() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_rel_solute_composition_change"]], "set_max_temperature() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.set_max_temperature"]], "set_max_temperature() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_max_temperature"]], "set_max_time_step() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_time_step"]], "set_max_time_step_during_heating() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_time_step_during_heating"]], "set_max_volume_fraction_dissolve_time_step() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_max_volume_fraction_dissolve_time_step"]], "set_min_radius_nucleus_as_particle() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_min_radius_nucleus_as_particle"]], "set_min_radius_points_per_magnitude() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_min_radius_points_per_magnitude"]], "set_min_temperature() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.set_min_temperature"]], "set_min_temperature() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_min_temperature"]], "set_mobility_adjustment() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.set_mobility_adjustment"]], "set_mobility_enhancement_activation_energy() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.set_mobility_enhancement_activation_energy"]], "set_mobility_enhancement_prefactor() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.set_mobility_enhancement_prefactor"]], "set_molar_volume() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.set_molar_volume"]], "set_molar_volume() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_molar_volume"]], "set_nucleation_at_dislocations() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_nucleation_at_dislocations"]], "set_nucleation_at_grain_boundaries() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_nucleation_at_grain_boundaries"]], "set_nucleation_at_grain_corners() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_nucleation_at_grain_corners"]], "set_nucleation_at_grain_edges() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_nucleation_at_grain_edges"]], "set_nucleation_in_bulk() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_nucleation_in_bulk"]], "set_phase_boundary_mobility() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_phase_boundary_mobility"]], "set_precipitate_morphology() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_precipitate_morphology"]], "set_radius_points_per_magnitude() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_radius_points_per_magnitude"]], "set_rel_radius_change_class_collision() (tc_python.precipitation.numericalparameters method)": [[6, "tc_python.precipitation.NumericalParameters.set_rel_radius_change_class_collision"]], "set_simulation_time() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.set_simulation_time"]], "set_simulation_time() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.set_simulation_time"]], "set_temperature() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.set_temperature"]], "set_temperature_step() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.set_temperature_step"]], "set_trans_interface_mobility_adjustment() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_trans_interface_mobility_adjustment"]], "set_transformation_strain_calculation_option() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_transformation_strain_calculation_option"]], "set_volume_fraction_of_phase_type() (tc_python.precipitation.particlesizedistribution method)": [[6, "tc_python.precipitation.ParticleSizeDistribution.set_volume_fraction_of_phase_type"]], "set_volume_fraction_of_phase_value() (tc_python.precipitation.particlesizedistribution method)": [[6, "tc_python.precipitation.ParticleSizeDistribution.set_volume_fraction_of_phase_value"]], "set_zener_pinning_parameters() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.set_zener_pinning_parameters"]], "stop_at_percent_of_equilibrium_fraction() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.stop_at_percent_of_equilibrium_fraction"]], "stop_at_volume_fraction_of_phase() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.stop_at_volume_fraction_of_phase"]], "stop_at_volume_fraction_of_phase() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.stop_at_volume_fraction_of_phase"]], "tc_python.precipitation": [[6, "module-tc_python.precipitation"]], "with_elastic_properties() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.with_elastic_properties"]], "with_elastic_properties_cubic() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.with_elastic_properties_cubic"]], "with_elastic_properties_disregard() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.with_elastic_properties_disregard"]], "with_elastic_properties_isotropic() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.with_elastic_properties_isotropic"]], "with_grain_growth_model() (tc_python.precipitation.matrixphase method)": [[6, "tc_python.precipitation.MatrixPhase.with_grain_growth_model"]], "with_growth_rate_model() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.with_growth_rate_model"]], "with_matrix_phase() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.with_matrix_phase"]], "with_matrix_phase() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.with_matrix_phase"]], "with_matrix_phase() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.with_matrix_phase"]], "with_matrix_phase() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.with_matrix_phase"]], "with_numerical_parameters() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.with_numerical_parameters"]], "with_numerical_parameters() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.with_numerical_parameters"]], "with_numerical_parameters() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.with_numerical_parameters"]], "with_numerical_parameters() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.with_numerical_parameters"]], "with_particle_size_distribution() (tc_python.precipitation.precipitatephase method)": [[6, "tc_python.precipitation.PrecipitatePhase.with_particle_size_distribution"]], "with_system_modifications() (tc_python.precipitation.precipitationcctcalculation method)": [[6, "tc_python.precipitation.PrecipitationCCTCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.precipitation.precipitationisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationIsoThermalCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.precipitation.precipitationtttcalculation method)": [[6, "tc_python.precipitation.PrecipitationTTTCalculation.with_system_modifications"]], "with_temperature_profile() (tc_python.precipitation.precipitationnonisothermalcalculation method)": [[6, "tc_python.precipitation.PrecipitationNonIsoThermalCalculation.with_temperature_profile"]], "all (tc_python.process_metallurgy.base.slagtype attribute)": [[8, "tc_python.process_metallurgy.base.SlagType.ALL"]], "all_metal (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.ALL_METAL"]], "all_slag (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.ALL_SLAG"]], "abstractaddition (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.AbstractAddition"]], "activityreference (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.ActivityReference"]], "b2 (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.B2"]], "b3 (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.B3"]], "b4 (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.B4"]], "bas2 (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.BAS2"]], "bells_ratio (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.BELLS_RATIO"]], "gas (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.GAS"]], "global (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.GLOBAL"]], "global_test (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.GLOBAL_TEST"]], "global_test__global (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.GLOBAL_TEST__GLOBAL"]], "latest (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.LATEST"]], "liquid (tc_python.process_metallurgy.base.activityreference attribute)": [[8, "tc_python.process_metallurgy.base.ActivityReference.LIQUID"]], "liquid (tc_python.process_metallurgy.base.slagtype attribute)": [[8, "tc_python.process_metallurgy.base.SlagType.LIQUID"]], "liquid_metal (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.LIQUID_METAL"]], "liquid_slag (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.LIQUID_SLAG"]], "local (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.LOCAL"]], "local__global_test (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.LOCAL__GLOBAL_TEST"]], "local__global_test__global (tc_python.process_metallurgy.base.processminimizationpolicy attribute)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy.LOCAL__GLOBAL_TEST__GLOBAL"]], "log_10_sulphur_capacity (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.LOG_10_SULPHUR_CAPACITY"]], "ls (tc_python.process_metallurgy.base.slagproperty attribute)": [[8, "tc_python.process_metallurgy.base.SlagProperty.LS"]], "oxdemo (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.OXDEMO"]], "phasegroup (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.PhaseGroup"]], "processdatabase (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase"]], "processmetallurgyoptions (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions"]], "processminimizationpolicy (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.ProcessMinimizationPolicy"]], "solid (tc_python.process_metallurgy.base.activityreference attribute)": [[8, "tc_python.process_metallurgy.base.ActivityReference.SOLID"]], "solid (tc_python.process_metallurgy.base.slagtype attribute)": [[8, "tc_python.process_metallurgy.base.SlagType.SOLID"]], "solid_metal (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.SOLID_METAL"]], "solid_slag (tc_python.process_metallurgy.base.phasegroup attribute)": [[8, "tc_python.process_metallurgy.base.PhaseGroup.SOLID_SLAG"]], "slagproperty (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.SlagProperty"]], "slagtype (class in tc_python.process_metallurgy.base)": [[8, "tc_python.process_metallurgy.base.SlagType"]], "tcox10 (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.TCOX10"]], "tcox11 (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.TCOX11"]], "tcox12 (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.TCOX12"]], "tcox8 (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.TCOX8"]], "tcox9 (tc_python.process_metallurgy.base.processdatabase attribute)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.TCOX9"]], "disable_approximate_driving_force_for_metastable_phases() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.disable_approximate_driving_force_for_metastable_phases"]], "disable_control_step_size_during_minimization() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.disable_control_step_size_during_minimization"]], "disable_force_positive_definite_phase_hessian() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.disable_force_positive_definite_phase_hessian"]], "enable_approximate_driving_force_for_metastable_phases() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.enable_approximate_driving_force_for_metastable_phases"]], "enable_control_step_size_during_minimization() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.enable_control_step_size_during_minimization"]], "enable_force_positive_definite_phase_hessian() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.enable_force_positive_definite_phase_hessian"]], "get_composition() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_composition"]], "get_composition_unit() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_composition_unit"]], "get_dependent_component() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_dependent_component"]], "get_elements() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_elements"]], "get_id() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_id"]], "get_name() (tc_python.process_metallurgy.base.processdatabase method)": [[8, "tc_python.process_metallurgy.base.ProcessDatabase.get_name"]], "get_temperature() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.get_temperature"]], "is_do_scale() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.is_do_scale"]], "is_empty() (tc_python.process_metallurgy.base.abstractaddition method)": [[8, "tc_python.process_metallurgy.base.AbstractAddition.is_empty"]], "set_global_minimization_max_grid_points() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.set_global_minimization_max_grid_points"]], "set_max_no_of_iterations() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.set_max_no_of_iterations"]], "set_process_minimization_policy() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.set_process_minimization_policy"]], "set_required_accuracy() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.set_required_accuracy"]], "set_smallest_fraction() (tc_python.process_metallurgy.base.processmetallurgyoptions method)": [[8, "tc_python.process_metallurgy.base.ProcessMetallurgyOptions.set_smallest_fraction"]], "tc_python.process_metallurgy.base": [[8, "module-tc_python.process_metallurgy.base"]], "abstractequilibriumaddition (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.AbstractEquilibriumAddition"]], "adiabaticequilibriumcalculation (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation"]], "equilibriumaddition (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumAddition"]], "equilibriumcalculation (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation"]], "equilibriumgasaddition (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumGasAddition"]], "equilibriumresult (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult"]], "isothermalequilibriumcalculation (class in tc_python.process_metallurgy.equilibrium)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation"]], "add_addition() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.add_addition"]], "add_addition() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.add_addition"]], "add_addition() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.add_addition"]], "add_poly_command() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.add_poly_command"]], "add_poly_command() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.add_poly_command"]], "add_poly_command() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.add_poly_command"]], "calculate() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.calculate"]], "calculate() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.calculate"]], "calculate() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.calculate"]], "get_activity_of_slag() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_activity_of_slag"]], "get_amount() (tc_python.process_metallurgy.equilibrium.equilibriumaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumAddition.get_amount"]], "get_amount() (tc_python.process_metallurgy.equilibrium.equilibriumgasaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumGasAddition.get_amount"]], "get_amount() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_amount"]], "get_amount_of_elements() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_amount_of_elements"]], "get_amount_of_phase_groups() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_amount_of_phase_groups"]], "get_amount_of_phases() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_amount_of_phases"]], "get_amount_unit() (tc_python.process_metallurgy.equilibrium.equilibriumgasaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumGasAddition.get_amount_unit"]], "get_components() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_components"]], "get_composition() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_composition"]], "get_composition_of_phase() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_composition_of_phase"]], "get_composition_of_phase_group() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_composition_of_phase_group"]], "get_composition_unit() (tc_python.process_metallurgy.equilibrium.equilibriumaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumAddition.get_composition_unit"]], "get_composition_unit() (tc_python.process_metallurgy.equilibrium.equilibriumgasaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumGasAddition.get_composition_unit"]], "get_elements() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_elements"]], "get_formula_for_activity_of_slag() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_formula_for_activity_of_slag"]], "get_formula_for_slag_property() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_formula_for_slag_property"]], "get_fraction_of_phase_groups() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_fraction_of_phase_groups"]], "get_fraction_of_phases() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_fraction_of_phases"]], "get_gas_components() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_gas_components"]], "get_oxygen_partial_pressure() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_oxygen_partial_pressure"]], "get_pressure() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_pressure"]], "get_slag_property() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_slag_property"]], "get_stable_phases() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_stable_phases"]], "get_stable_phases_in_phase_group() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_stable_phases_in_phase_group"]], "get_temperature() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_temperature"]], "get_value_of() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_value_of"]], "get_viscosity_dynamic_of_phase() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_viscosity_dynamic_of_phase"]], "get_viscosity_kinematic_of_phase() (tc_python.process_metallurgy.equilibrium.equilibriumresult method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumResult.get_viscosity_kinematic_of_phase"]], "remove_addition() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.remove_addition"]], "remove_addition() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.remove_addition"]], "remove_addition() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.remove_addition"]], "remove_all_additions() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.remove_all_additions"]], "remove_all_additions() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.remove_all_additions"]], "remove_all_additions() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.remove_all_additions"]], "set_amount() (tc_python.process_metallurgy.equilibrium.abstractequilibriumaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.AbstractEquilibriumAddition.set_amount"]], "set_component_composition() (tc_python.process_metallurgy.equilibrium.abstractequilibriumaddition method)": [[9, "tc_python.process_metallurgy.equilibrium.AbstractEquilibriumAddition.set_component_composition"]], "set_pressure() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.set_pressure"]], "set_pressure() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.set_pressure"]], "set_pressure() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.set_pressure"]], "set_temperature() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.set_temperature"]], "tc_python.process_metallurgy.equilibrium": [[9, "module-tc_python.process_metallurgy.equilibrium"]], "update_addition() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.update_addition"]], "update_addition() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.update_addition"]], "with_options() (tc_python.process_metallurgy.equilibrium.adiabaticequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.AdiabaticEquilibriumCalculation.with_options"]], "with_options() (tc_python.process_metallurgy.equilibrium.equilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.EquilibriumCalculation.with_options"]], "with_options() (tc_python.process_metallurgy.equilibrium.isothermalequilibriumcalculation method)": [[9, "tc_python.process_metallurgy.equilibrium.IsoThermalEquilibriumCalculation.with_options"]], "abstractcontinuousaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.AbstractContinuousAddition"]], "abstractprocessaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.AbstractProcessAddition"]], "abstractsingletimeaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.AbstractSingleTimeAddition"]], "bulkzone (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.BulkZone"]], "continuousaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ContinuousAddition"]], "continuousgasaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ContinuousGasAddition"]], "exhaustgasresult (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult"]], "masstransfercoefficients (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.MassTransferCoefficients"]], "metalbulkzone (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone"]], "processsimulationcalculation (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation"]], "processsimulationresult (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult"]], "reactionzone (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.ReactionZone"]], "singletimeaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.SingleTimeAddition"]], "singletimegasaddition (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.SingleTimeGasAddition"]], "slagbulkzone (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone"]], "transferofphasegroup (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.TransferOfPhaseGroup"]], "zone (class in tc_python.process_metallurgy.process)": [[10, "tc_python.process_metallurgy.process.Zone"]], "add() (tc_python.process_metallurgy.process.masstransfercoefficients method)": [[10, "tc_python.process_metallurgy.process.MassTransferCoefficients.add"]], "add() (tc_python.process_metallurgy.process.transferofphasegroup method)": [[10, "tc_python.process_metallurgy.process.TransferOfPhaseGroup.add"]], "add_addition() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.add_addition"]], "add_addition() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.add_addition"]], "add_addition() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.add_addition"]], "add_addition() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.add_addition"]], "add_addition() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.add_addition"]], "add_continuous_addition() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.add_continuous_addition"]], "add_continuous_addition() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.add_continuous_addition"]], "add_continuous_addition() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.add_continuous_addition"]], "add_continuous_addition() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.add_continuous_addition"]], "add_continuous_addition() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.add_continuous_addition"]], "add_heat_transfer() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.add_heat_transfer"]], "add_power() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.add_power"]], "add_power() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.add_power"]], "add_power() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.add_power"]], "add_power() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.add_power"]], "add_power() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.add_power"]], "add_transfer_of_phase_group() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.add_transfer_of_phase_group"]], "calculate() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.calculate"]], "disable_degassing() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.disable_degassing"]], "disable_degassing() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.disable_degassing"]], "disable_degassing() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.disable_degassing"]], "disable_degassing() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.disable_degassing"]], "disable_degassing() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.disable_degassing"]], "enable_degassing() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.enable_degassing"]], "enable_degassing() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.enable_degassing"]], "enable_degassing() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.enable_degassing"]], "enable_degassing() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.enable_degassing"]], "enable_degassing() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.enable_degassing"]], "get_activity_of_slag() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_activity_of_slag"]], "get_amount() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_amount"]], "get_amount() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_amount"]], "get_amount() (tc_python.process_metallurgy.process.singletimeaddition method)": [[10, "tc_python.process_metallurgy.process.SingleTimeAddition.get_amount"]], "get_amount() (tc_python.process_metallurgy.process.singletimegasaddition method)": [[10, "tc_python.process_metallurgy.process.SingleTimeGasAddition.get_amount"]], "get_amount_of_components() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_amount_of_components"]], "get_amount_of_elements() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_amount_of_elements"]], "get_amount_of_phase_groups() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_amount_of_phase_groups"]], "get_amount_of_phases() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_amount_of_phases"]], "get_amount_unit() (tc_python.process_metallurgy.process.singletimegasaddition method)": [[10, "tc_python.process_metallurgy.process.SingleTimeGasAddition.get_amount_unit"]], "get_components() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_components"]], "get_composition() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_composition"]], "get_composition() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_composition"]], "get_composition_of_phase() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_composition_of_phase"]], "get_composition_of_phase_group() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_composition_of_phase_group"]], "get_composition_unit() (tc_python.process_metallurgy.process.continuousaddition method)": [[10, "tc_python.process_metallurgy.process.ContinuousAddition.get_composition_unit"]], "get_composition_unit() (tc_python.process_metallurgy.process.continuousgasaddition method)": [[10, "tc_python.process_metallurgy.process.ContinuousGasAddition.get_composition_unit"]], "get_composition_unit() (tc_python.process_metallurgy.process.singletimeaddition method)": [[10, "tc_python.process_metallurgy.process.SingleTimeAddition.get_composition_unit"]], "get_composition_unit() (tc_python.process_metallurgy.process.singletimegasaddition method)": [[10, "tc_python.process_metallurgy.process.SingleTimeGasAddition.get_composition_unit"]], "get_density() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.get_density"]], "get_density() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.get_density"]], "get_density() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.get_density"]], "get_elements() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.get_elements"]], "get_elements() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.get_elements"]], "get_elements() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_elements"]], "get_elements() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.get_elements"]], "get_elements() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.get_elements"]], "get_elements() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.get_elements"]], "get_enthalpy() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_enthalpy"]], "get_exhaust_gas() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_exhaust_gas"]], "get_formula_for_activity_of_slag() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_formula_for_activity_of_slag"]], "get_formula_for_slag_property() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_formula_for_slag_property"]], "get_fraction_of_phase_groups() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_fraction_of_phase_groups"]], "get_fraction_of_phases() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_fraction_of_phases"]], "get_gas_components() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_gas_components"]], "get_id() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.get_id"]], "get_id() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.get_id"]], "get_id() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.get_id"]], "get_id() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.get_id"]], "get_id() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.get_id"]], "get_num_of_performed_steps() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_num_of_performed_steps"]], "get_oxygen_partial_pressure() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_oxygen_partial_pressure"]], "get_phase_group_to_transfer() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.get_phase_group_to_transfer"]], "get_phase_group_to_transfer() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.get_phase_group_to_transfer"]], "get_phase_group_to_transfer() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.get_phase_group_to_transfer"]], "get_phase_group_to_transfer() (tc_python.process_metallurgy.process.transferofphasegroup method)": [[10, "tc_python.process_metallurgy.process.TransferOfPhaseGroup.get_phase_group_to_transfer"]], "get_pressure() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_pressure"]], "get_pressure() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_pressure"]], "get_rate() (tc_python.process_metallurgy.process.continuousaddition method)": [[10, "tc_python.process_metallurgy.process.ContinuousAddition.get_rate"]], "get_rate() (tc_python.process_metallurgy.process.continuousgasaddition method)": [[10, "tc_python.process_metallurgy.process.ContinuousGasAddition.get_rate"]], "get_rate_unit() (tc_python.process_metallurgy.process.continuousgasaddition method)": [[10, "tc_python.process_metallurgy.process.ContinuousGasAddition.get_rate_unit"]], "get_slag_property() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_slag_property"]], "get_stable_phases() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_stable_phases"]], "get_stable_phases() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_stable_phases"]], "get_stable_phases_in_phase_group() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_stable_phases_in_phase_group"]], "get_temperature() (tc_python.process_metallurgy.process.exhaustgasresult method)": [[10, "tc_python.process_metallurgy.process.ExhaustGasResult.get_temperature"]], "get_temperature() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_temperature"]], "get_time_points() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_time_points"]], "get_transfer_source_zone_id() (tc_python.process_metallurgy.process.transferofphasegroup method)": [[10, "tc_python.process_metallurgy.process.TransferOfPhaseGroup.get_transfer_source_zone_id"]], "get_value_of() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_value_of"]], "get_viscosity_dynamic_of_phase() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_viscosity_dynamic_of_phase"]], "get_viscosity_kinematic_of_phase() (tc_python.process_metallurgy.process.processsimulationresult method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationResult.get_viscosity_kinematic_of_phase"]], "is_degassing_enabled() (tc_python.process_metallurgy.process.bulkzone method)": [[10, "tc_python.process_metallurgy.process.BulkZone.is_degassing_enabled"]], "is_degassing_enabled() (tc_python.process_metallurgy.process.metalbulkzone method)": [[10, "tc_python.process_metallurgy.process.MetalBulkZone.is_degassing_enabled"]], "is_degassing_enabled() (tc_python.process_metallurgy.process.reactionzone method)": [[10, "tc_python.process_metallurgy.process.ReactionZone.is_degassing_enabled"]], "is_degassing_enabled() (tc_python.process_metallurgy.process.slagbulkzone method)": [[10, "tc_python.process_metallurgy.process.SlagBulkZone.is_degassing_enabled"]], "is_degassing_enabled() (tc_python.process_metallurgy.process.zone method)": [[10, "tc_python.process_metallurgy.process.Zone.is_degassing_enabled"]], "set_end_time() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_end_time"]], "set_initial_time_step() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_initial_time_step"]], "set_max_allowed_temp_change_per_step() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_max_allowed_temp_change_per_step"]], "set_max_time_step() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_max_time_step"]], "set_min_time_step() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_min_time_step"]], "set_pressure() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_pressure"]], "set_pressure_in_time_period() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.set_pressure_in_time_period"]], "tc_python.process_metallurgy.process": [[10, "module-tc_python.process_metallurgy.process"]], "with_options() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.with_options"]], "with_reaction_zone() (tc_python.process_metallurgy.process.processsimulationcalculation method)": [[10, "tc_python.process_metallurgy.process.ProcessSimulationCalculation.with_reaction_zone"]], "propertymodelcalculation (class in tc_python.propertymodel)": [[11, "tc_python.propertymodel.PropertyModelCalculation"]], "propertymodelresult (class in tc_python.propertymodel)": [[11, "tc_python.propertymodel.PropertyModelResult"]], "add_poly_command() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.add_poly_command"]], "calculate() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.calculate"]], "get_argument_default() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_argument_default"]], "get_argument_description() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_argument_description"]], "get_arguments() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_arguments"]], "get_dynamic_arguments() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_dynamic_arguments"]], "get_model_description() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_model_description"]], "get_model_parameter_value() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_model_parameter_value"]], "get_model_parameters() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_model_parameters"]], "get_result_quantities() (tc_python.propertymodel.propertymodelresult method)": [[11, "tc_python.propertymodel.PropertyModelResult.get_result_quantities"]], "get_result_quantity_description() (tc_python.propertymodel.propertymodelresult method)": [[11, "tc_python.propertymodel.PropertyModelResult.get_result_quantity_description"]], "get_single_equilibrium_result() (tc_python.propertymodel.propertymodelresult method)": [[11, "tc_python.propertymodel.PropertyModelResult.get_single_equilibrium_result"]], "get_system_data() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.get_system_data"]], "get_value_of() (tc_python.propertymodel.propertymodelresult method)": [[11, "tc_python.propertymodel.PropertyModelResult.get_value_of"]], "invoke_dynamic_argument() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.invoke_dynamic_argument"]], "remove_all_conditions() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.remove_all_conditions"]], "remove_all_poly_commands() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.remove_all_poly_commands"]], "remove_dependent_element() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.remove_dependent_element"]], "save_to_disk() (tc_python.propertymodel.propertymodelresult method)": [[11, "tc_python.propertymodel.PropertyModelResult.save_to_disk"]], "set_argument() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_argument"]], "set_composition() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_composition"]], "set_composition_unit() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_composition_unit"]], "set_condition() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_condition"]], "set_dependent_element() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_dependent_element"]], "set_model_parameter() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_model_parameter"]], "set_temperature() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.set_temperature"]], "tc_python.propertymodel": [[11, "module-tc_python.propertymodel"]], "with_system_modifications() (tc_python.propertymodel.propertymodelcalculation method)": [[11, "tc_python.propertymodel.PropertyModelCalculation.with_system_modifications"]], "calculatesecondarydendritearmspacing (class in tc_python.scheil)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing"]], "constantsecondarydendritearmspacing (class in tc_python.scheil)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing"]], "scheilbackdiffusion (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilBackDiffusion"]], "scheilcalculation (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilCalculation"]], "scheilcalculationresult (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilCalculationResult"]], "scheilcalculationtype (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilCalculationType"]], "scheilclassic (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilClassic"]], "scheiloptions (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilOptions"]], "scheilsolutetrapping (class in tc_python.scheil)": [[12, "tc_python.scheil.ScheilSoluteTrapping"]], "calculate() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.calculate"]], "calculate_from_gas() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.calculate_from_gas"]], "calculate_from_liquidus() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.calculate_from_liquidus"]], "calculate_from_start_temperature() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.calculate_from_start_temperature"]], "calculate_secondary_dendrite_arm_spacing() (tc_python.scheil.scheilbackdiffusion class method)": [[12, "tc_python.scheil.ScheilBackDiffusion.calculate_secondary_dendrite_arm_spacing"]], "calculate_to_end_of_scheil() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.calculate_to_end_of_scheil"]], "calculate_to_temperature_below_solidus() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.calculate_to_temperature_below_solidus"]], "constant_secondary_dendrite_arm_spacing() (tc_python.scheil.scheilbackdiffusion class method)": [[12, "tc_python.scheil.ScheilBackDiffusion.constant_secondary_dendrite_arm_spacing"]], "disable_approximate_driving_force_for_metastable_phases() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.disable_approximate_driving_force_for_metastable_phases"]], "disable_control_step_size_during_minimization() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.disable_control_step_size_during_minimization"]], "disable_delta_ferrite_to_austenite_transition() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.disable_delta_ferrite_to_austenite_transition"]], "disable_delta_ferrite_to_austenite_transition() (tc_python.scheil.constantsecondarydendritearmspacing method)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing.disable_delta_ferrite_to_austenite_transition"]], "disable_delta_ferrite_to_austenite_transition() (tc_python.scheil.scheilclassic method)": [[12, "tc_python.scheil.ScheilClassic.disable_delta_ferrite_to_austenite_transition"]], "disable_equilibrium_solidification_calculation() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.disable_equilibrium_solidification_calculation"]], "disable_evaporation_property_calculation() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.disable_evaporation_property_calculation"]], "disable_force_positive_definite_phase_hessian() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.disable_force_positive_definite_phase_hessian"]], "disable_global_minimization() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.disable_global_minimization"]], "enable_approximate_driving_force_for_metastable_phases() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.enable_approximate_driving_force_for_metastable_phases"]], "enable_control_step_size_during_minimization() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.enable_control_step_size_during_minimization"]], "enable_delta_ferrite_to_austenite_transition() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.enable_delta_ferrite_to_austenite_transition"]], "enable_delta_ferrite_to_austenite_transition() (tc_python.scheil.constantsecondarydendritearmspacing method)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing.enable_delta_ferrite_to_austenite_transition"]], "enable_delta_ferrite_to_austenite_transition() (tc_python.scheil.scheilclassic method)": [[12, "tc_python.scheil.ScheilClassic.enable_delta_ferrite_to_austenite_transition"]], "enable_equilibrium_solidification_calculation() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.enable_equilibrium_solidification_calculation"]], "enable_evaporation_property_calculation() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.enable_evaporation_property_calculation"]], "enable_force_positive_definite_phase_hessian() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.enable_force_positive_definite_phase_hessian"]], "enable_global_minimization() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.enable_global_minimization"]], "get_solid_phase_with_largest_mole_fraction() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.get_solid_phase_with_largest_mole_fraction"]], "get_stable_phases() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.get_stable_phases"]], "get_system_data() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.get_system_data"]], "get_values_grouped_by_quantity_of() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.get_values_grouped_by_quantity_of"]], "get_values_grouped_by_stable_phases_of() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.get_values_grouped_by_stable_phases_of"]], "get_values_of() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.get_values_of"]], "save_to_disk() (tc_python.scheil.scheilcalculationresult method)": [[12, "tc_python.scheil.ScheilCalculationResult.save_to_disk"]], "scheil_back_diffusion() (tc_python.scheil.scheilcalculationtype class method)": [[12, "tc_python.scheil.ScheilCalculationType.scheil_back_diffusion"]], "scheil_classic() (tc_python.scheil.scheilcalculationtype class method)": [[12, "tc_python.scheil.ScheilCalculationType.scheil_classic"]], "scheil_solute_trapping() (tc_python.scheil.scheilcalculationtype class method)": [[12, "tc_python.scheil.ScheilCalculationType.scheil_solute_trapping"]], "set_angle() (tc_python.scheil.scheilsolutetrapping method)": [[12, "tc_python.scheil.ScheilSoluteTrapping.set_angle"]], "set_c() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.set_c"]], "set_composition() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.set_composition"]], "set_composition_unit() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.set_composition_unit"]], "set_cooling_rate() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.set_cooling_rate"]], "set_cooling_rate() (tc_python.scheil.constantsecondarydendritearmspacing method)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing.set_cooling_rate"]], "set_fast_diffusing_elements() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.set_fast_diffusing_elements"]], "set_fast_diffusing_elements() (tc_python.scheil.constantsecondarydendritearmspacing method)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing.set_fast_diffusing_elements"]], "set_fast_diffusing_elements() (tc_python.scheil.scheilclassic method)": [[12, "tc_python.scheil.ScheilClassic.set_fast_diffusing_elements"]], "set_gas_phase() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_gas_phase"]], "set_global_minimization_max_grid_points() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_global_minimization_max_grid_points"]], "set_global_minimization_test_interval() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_global_minimization_test_interval"]], "set_liquid_phase() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_liquid_phase"]], "set_max_no_of_iterations() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_max_no_of_iterations"]], "set_n() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.set_n"]], "set_primary_phasename() (tc_python.scheil.calculatesecondarydendritearmspacing method)": [[12, "tc_python.scheil.CalculateSecondaryDendriteArmSpacing.set_primary_phasename"]], "set_primary_phasename() (tc_python.scheil.constantsecondarydendritearmspacing method)": [[12, "tc_python.scheil.ConstantSecondaryDendriteArmSpacing.set_primary_phasename"]], "set_primary_phasename() (tc_python.scheil.scheilsolutetrapping method)": [[12, "tc_python.scheil.ScheilSoluteTrapping.set_primary_phasename"]], "set_required_accuracy() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_required_accuracy"]], "set_scanning_speed() (tc_python.scheil.scheilsolutetrapping method)": [[12, "tc_python.scheil.ScheilSoluteTrapping.set_scanning_speed"]], "set_smallest_fraction() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_smallest_fraction"]], "set_start_temperature() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.set_start_temperature"]], "set_temperature_step() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.set_temperature_step"]], "tc_python.scheil": [[12, "module-tc_python.scheil"]], "terminate_on_fraction_of_liquid_phase() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.terminate_on_fraction_of_liquid_phase"]], "terminate_on_temperature() (tc_python.scheil.scheiloptions method)": [[12, "tc_python.scheil.ScheilOptions.terminate_on_temperature"]], "with_calculation_type() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.with_calculation_type"]], "with_options() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.with_options"]], "with_system_modifications() (tc_python.scheil.scheilcalculation method)": [[12, "tc_python.scheil.ScheilCalculation.with_system_modifications"]], "abstractsingleequilibriumcalculation (class in tc_python.single_equilibrium)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation"]], "singleequilibriumcalculation (class in tc_python.single_equilibrium)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation"]], "singleequilibriumoptions (class in tc_python.single_equilibrium)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions"]], "singleequilibriumresult (class in tc_python.single_equilibrium)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult"]], "singleequilibriumtempresult (class in tc_python.single_equilibrium)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult"]], "bookmark_state() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.bookmark_state"]], "calculate() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.calculate"]], "calculate_with_state() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.calculate_with_state"]], "change_pressure() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.change_pressure"]], "change_pressure() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.change_pressure"]], "change_temperature() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.change_temperature"]], "change_temperature() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.change_temperature"]], "disable_approximate_driving_force_for_metastable_phases() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.disable_approximate_driving_force_for_metastable_phases"]], "disable_control_step_size_during_minimization() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.disable_control_step_size_during_minimization"]], "disable_force_positive_definite_phase_hessian() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.disable_force_positive_definite_phase_hessian"]], "disable_global_minimization() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.disable_global_minimization"]], "enable_approximate_driving_force_for_metastable_phases() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.enable_approximate_driving_force_for_metastable_phases"]], "enable_control_step_size_during_minimization() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.enable_control_step_size_during_minimization"]], "enable_force_positive_definite_phase_hessian() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.enable_force_positive_definite_phase_hessian"]], "enable_global_minimization() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.enable_global_minimization"]], "get_components() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.get_components"]], "get_components() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.get_components"]], "get_components() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.get_components"]], "get_components() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.get_components"]], "get_conditions() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.get_conditions"]], "get_conditions() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.get_conditions"]], "get_gibbs_energy_addition_for() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.get_gibbs_energy_addition_for"]], "get_interfacial_energy() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.get_interfacial_energy"]], "get_phases() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.get_phases"]], "get_phases() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.get_phases"]], "get_stable_phases() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.get_stable_phases"]], "get_stable_phases() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.get_stable_phases"]], "get_system_data() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.get_system_data"]], "get_system_data() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.get_system_data"]], "get_value_of() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.get_value_of"]], "get_value_of() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.get_value_of"]], "remove_all_conditions() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.remove_all_conditions"]], "remove_condition() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.remove_condition"]], "run_poly_command() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.run_poly_command"]], "run_poly_command() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.run_poly_command"]], "run_poly_command() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.run_poly_command"]], "run_poly_command() (tc_python.single_equilibrium.singleequilibriumtempresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumTempResult.run_poly_command"]], "save_to_disk() (tc_python.single_equilibrium.singleequilibriumresult method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumResult.save_to_disk"]], "set_component_to_entered() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_component_to_entered"]], "set_component_to_entered() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_component_to_entered"]], "set_component_to_suspended() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_component_to_suspended"]], "set_component_to_suspended() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_component_to_suspended"]], "set_condition() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_condition"]], "set_gibbs_energy_addition_for() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_gibbs_energy_addition_for"]], "set_global_minimization_max_grid_points() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.set_global_minimization_max_grid_points"]], "set_max_no_of_iterations() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.set_max_no_of_iterations"]], "set_phase_to_dormant() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_phase_to_dormant"]], "set_phase_to_entered() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_phase_to_entered"]], "set_phase_to_fixed() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_phase_to_fixed"]], "set_phase_to_suspended() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_phase_to_suspended"]], "set_required_accuracy() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.set_required_accuracy"]], "set_smallest_fraction() (tc_python.single_equilibrium.singleequilibriumoptions method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumOptions.set_smallest_fraction"]], "set_state_to_bookmark() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.set_state_to_bookmark"]], "tc_python.single_equilibrium": [[13, "module-tc_python.single_equilibrium"]], "with_options() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.with_options"]], "with_options() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.with_options"]], "with_reference_state() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.with_reference_state"]], "with_reference_state() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.with_reference_state"]], "with_system_modifications() (tc_python.single_equilibrium.abstractsingleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.AbstractSingleEquilibriumCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.single_equilibrium.singleequilibriumcalculation method)": [[13, "tc_python.single_equilibrium.SingleEquilibriumCalculation.with_system_modifications"]], "all (tc_python.step_or_map_diagrams.phasenamestyle attribute)": [[14, "tc_python.step_or_map_diagrams.PhaseNameStyle.ALL"]], "abstractaxistype (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.AbstractAxisType"]], "abstractphasediagramcalculation (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation"]], "abstractpropertydiagramcalculation (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation"]], "axistype (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.AxisType"]], "constitution_description (tc_python.step_or_map_diagrams.phasenamestyle attribute)": [[14, "tc_python.step_or_map_diagrams.PhaseNameStyle.CONSTITUTION_DESCRIPTION"]], "calculationaxis (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.CalculationAxis"]], "decrease_first_axis (tc_python.step_or_map_diagrams.direction attribute)": [[14, "tc_python.step_or_map_diagrams.Direction.DECREASE_FIRST_AXIS"]], "decrease_second_axis (tc_python.step_or_map_diagrams.direction attribute)": [[14, "tc_python.step_or_map_diagrams.Direction.DECREASE_SECOND_AXIS"]], "direction (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.Direction"]], "increase_first_axis (tc_python.step_or_map_diagrams.direction attribute)": [[14, "tc_python.step_or_map_diagrams.Direction.INCREASE_FIRST_AXIS"]], "increase_second_axis (tc_python.step_or_map_diagrams.direction attribute)": [[14, "tc_python.step_or_map_diagrams.Direction.INCREASE_SECOND_AXIS"]], "initialequilibrium (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.InitialEquilibrium"]], "linear (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.Linear"]], "logarithmic (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.Logarithmic"]], "none (tc_python.step_or_map_diagrams.phasenamestyle attribute)": [[14, "tc_python.step_or_map_diagrams.PhaseNameStyle.NONE"]], "ordering_description (tc_python.step_or_map_diagrams.phasenamestyle attribute)": [[14, "tc_python.step_or_map_diagrams.PhaseNameStyle.ORDERING_DESCRIPTION"]], "phasediagramcalculation (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation"]], "phasediagramoptions (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions"]], "phasediagramresult (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult"]], "phasediagramresultvalues (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResultValues"]], "phaselabel (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseLabel"]], "phasenamestyle (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PhaseNameStyle"]], "propertydiagramcalculation (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation"]], "propertydiagramoptions (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions"]], "propertydiagramresult (class in tc_python.step_or_map_diagrams)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult"]], "add_coordinate_for_phase_label() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.add_coordinate_for_phase_label"]], "add_equilibria_at_all_phase_changes() (tc_python.step_or_map_diagrams.initialequilibrium method)": [[14, "tc_python.step_or_map_diagrams.InitialEquilibrium.add_equilibria_at_all_phase_changes"]], "add_equilibria_at_first_phase_change() (tc_python.step_or_map_diagrams.initialequilibrium method)": [[14, "tc_python.step_or_map_diagrams.InitialEquilibrium.add_equilibria_at_first_phase_change"]], "add_initial_equilibrium() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.add_initial_equilibrium"]], "add_initial_equilibrium() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.add_initial_equilibrium"]], "calculate() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.calculate"]], "calculate() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.calculate"]], "calculate() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.calculate"]], "calculate() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.calculate"]], "disable_approximate_driving_force_for_metastable_phases() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.disable_approximate_driving_force_for_metastable_phases"]], "disable_approximate_driving_force_for_metastable_phases() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.disable_approximate_driving_force_for_metastable_phases"]], "disable_control_step_size_during_minimization() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.disable_control_step_size_during_minimization"]], "disable_control_step_size_during_minimization() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.disable_control_step_size_during_minimization"]], "disable_force_positive_definite_phase_hessian() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.disable_force_positive_definite_phase_hessian"]], "disable_force_positive_definite_phase_hessian() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.disable_force_positive_definite_phase_hessian"]], "disable_global_minimization() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.disable_global_minimization"]], "disable_global_minimization() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.disable_global_minimization"]], "disable_step_separate_phases() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.disable_step_separate_phases"]], "disable_step_separate_phases() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.disable_step_separate_phases"]], "dont_keep_default_equilibria() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.dont_keep_default_equilibria"]], "dont_keep_default_equilibria() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.dont_keep_default_equilibria"]], "dont_use_auto_start_points() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.dont_use_auto_start_points"]], "dont_use_inside_mesh_points() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.dont_use_inside_mesh_points"]], "enable_approximate_driving_force_for_metastable_phases() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.enable_approximate_driving_force_for_metastable_phases"]], "enable_approximate_driving_force_for_metastable_phases() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.enable_approximate_driving_force_for_metastable_phases"]], "enable_control_step_size_during_minimization() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.enable_control_step_size_during_minimization"]], "enable_control_step_size_during_minimization() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.enable_control_step_size_during_minimization"]], "enable_force_positive_definite_phase_hessian() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.enable_force_positive_definite_phase_hessian"]], "enable_force_positive_definite_phase_hessian() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.enable_force_positive_definite_phase_hessian"]], "enable_global_minimization() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.enable_global_minimization"]], "enable_global_minimization() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.enable_global_minimization"]], "enable_step_separate_phases() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.enable_step_separate_phases"]], "enable_step_separate_phases() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.enable_step_separate_phases"]], "get_components() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.get_components"]], "get_components() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.get_components"]], "get_components() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.get_components"]], "get_components() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.get_components"]], "get_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.get_gibbs_energy_addition_for"]], "get_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.get_gibbs_energy_addition_for"]], "get_invariants() (tc_python.step_or_map_diagrams.phasediagramresultvalues method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResultValues.get_invariants"]], "get_lines() (tc_python.step_or_map_diagrams.phasediagramresultvalues method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResultValues.get_lines"]], "get_phase_labels() (tc_python.step_or_map_diagrams.phasediagramresultvalues method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResultValues.get_phase_labels"]], "get_system_data() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.get_system_data"]], "get_system_data() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.get_system_data"]], "get_system_data() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.get_system_data"]], "get_system_data() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.get_system_data"]], "get_text() (tc_python.step_or_map_diagrams.phaselabel method)": [[14, "tc_python.step_or_map_diagrams.PhaseLabel.get_text"]], "get_tie_lines() (tc_python.step_or_map_diagrams.phasediagramresultvalues method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResultValues.get_tie_lines"]], "get_type() (tc_python.step_or_map_diagrams.linear method)": [[14, "tc_python.step_or_map_diagrams.Linear.get_type"]], "get_type() (tc_python.step_or_map_diagrams.logarithmic method)": [[14, "tc_python.step_or_map_diagrams.Logarithmic.get_type"]], "get_values_grouped_by_quantity_of() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.get_values_grouped_by_quantity_of"]], "get_values_grouped_by_quantity_of() (tc_python.step_or_map_diagrams.propertydiagramresult method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult.get_values_grouped_by_quantity_of"]], "get_values_grouped_by_stable_phases_of() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.get_values_grouped_by_stable_phases_of"]], "get_values_grouped_by_stable_phases_of() (tc_python.step_or_map_diagrams.propertydiagramresult method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult.get_values_grouped_by_stable_phases_of"]], "get_values_of() (tc_python.step_or_map_diagrams.propertydiagramresult method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult.get_values_of"]], "get_x() (tc_python.step_or_map_diagrams.phaselabel method)": [[14, "tc_python.step_or_map_diagrams.PhaseLabel.get_x"]], "get_y() (tc_python.step_or_map_diagrams.phaselabel method)": [[14, "tc_python.step_or_map_diagrams.PhaseLabel.get_y"]], "keep_default_equilibria() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.keep_default_equilibria"]], "keep_default_equilibria() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.keep_default_equilibria"]], "linear() (tc_python.step_or_map_diagrams.axistype class method)": [[14, "tc_python.step_or_map_diagrams.AxisType.linear"]], "logarithmic() (tc_python.step_or_map_diagrams.axistype class method)": [[14, "tc_python.step_or_map_diagrams.AxisType.logarithmic"]], "remove_all_conditions() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.remove_all_conditions"]], "remove_all_conditions() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.remove_all_conditions"]], "remove_all_initial_equilibria() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.remove_all_initial_equilibria"]], "remove_all_initial_equilibria() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.remove_all_initial_equilibria"]], "remove_condition() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.remove_condition"]], "remove_condition() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.remove_condition"]], "remove_phase_labels() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.remove_phase_labels"]], "run_poly_command() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.run_poly_command"]], "run_poly_command() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.run_poly_command"]], "run_poly_command() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.run_poly_command"]], "run_poly_command() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.run_poly_command"]], "save_to_disk() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.save_to_disk"]], "save_to_disk() (tc_python.step_or_map_diagrams.propertydiagramresult method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult.save_to_disk"]], "set_condition() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_condition"]], "set_condition() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_condition"]], "set_direction() (tc_python.step_or_map_diagrams.initialequilibrium method)": [[14, "tc_python.step_or_map_diagrams.InitialEquilibrium.set_direction"]], "set_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_gibbs_energy_addition_for"]], "set_gibbs_energy_addition_for() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_gibbs_energy_addition_for"]], "set_global_minimization_max_grid_points() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_global_minimization_max_grid_points"]], "set_global_minimization_max_grid_points() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.set_global_minimization_max_grid_points"]], "set_global_minimization_test_interval() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_global_minimization_test_interval"]], "set_global_minimization_test_interval() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.set_global_minimization_test_interval"]], "set_max() (tc_python.step_or_map_diagrams.calculationaxis method)": [[14, "tc_python.step_or_map_diagrams.CalculationAxis.set_max"]], "set_max_no_of_iterations() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_max_no_of_iterations"]], "set_max_no_of_iterations() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.set_max_no_of_iterations"]], "set_max_step_size() (tc_python.step_or_map_diagrams.linear method)": [[14, "tc_python.step_or_map_diagrams.Linear.set_max_step_size"]], "set_min() (tc_python.step_or_map_diagrams.calculationaxis method)": [[14, "tc_python.step_or_map_diagrams.CalculationAxis.set_min"]], "set_min_nr_of_steps() (tc_python.step_or_map_diagrams.linear method)": [[14, "tc_python.step_or_map_diagrams.Linear.set_min_nr_of_steps"]], "set_no_of_mesh_along_axis() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_no_of_mesh_along_axis"]], "set_phase_name_style() (tc_python.step_or_map_diagrams.phasediagramresult method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramResult.set_phase_name_style"]], "set_phase_name_style() (tc_python.step_or_map_diagrams.propertydiagramresult method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramResult.set_phase_name_style"]], "set_phase_to_dormant() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_dormant() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_phase_to_dormant"]], "set_phase_to_entered() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_phase_to_entered"]], "set_phase_to_entered() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_phase_to_entered"]], "set_phase_to_fixed() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_fixed() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_phase_to_fixed"]], "set_phase_to_suspended() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.set_phase_to_suspended"]], "set_phase_to_suspended() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.set_phase_to_suspended"]], "set_required_accuracy() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_required_accuracy"]], "set_required_accuracy() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.set_required_accuracy"]], "set_scale_factor() (tc_python.step_or_map_diagrams.logarithmic method)": [[14, "tc_python.step_or_map_diagrams.Logarithmic.set_scale_factor"]], "set_smallest_fraction() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.set_smallest_fraction"]], "set_smallest_fraction() (tc_python.step_or_map_diagrams.propertydiagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramOptions.set_smallest_fraction"]], "set_start_at() (tc_python.step_or_map_diagrams.calculationaxis method)": [[14, "tc_python.step_or_map_diagrams.CalculationAxis.set_start_at"]], "tc_python.step_or_map_diagrams": [[14, "module-tc_python.step_or_map_diagrams"]], "use_auto_start_points() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.use_auto_start_points"]], "use_inside_mesh_points() (tc_python.step_or_map_diagrams.phasediagramoptions method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramOptions.use_inside_mesh_points"]], "with_axis() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.with_axis"]], "with_axis_type() (tc_python.step_or_map_diagrams.calculationaxis method)": [[14, "tc_python.step_or_map_diagrams.CalculationAxis.with_axis_type"]], "with_first_axis() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.with_first_axis"]], "with_options() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.with_options"]], "with_options() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.with_options"]], "with_options() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.with_options"]], "with_options() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.with_options"]], "with_reference_state() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.with_reference_state"]], "with_reference_state() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.with_reference_state"]], "with_reference_state() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.with_reference_state"]], "with_reference_state() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.with_reference_state"]], "with_second_axis() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.with_second_axis"]], "with_system_modifications() (tc_python.step_or_map_diagrams.abstractphasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPhaseDiagramCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.step_or_map_diagrams.abstractpropertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.AbstractPropertyDiagramCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.step_or_map_diagrams.phasediagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PhaseDiagramCalculation.with_system_modifications"]], "with_system_modifications() (tc_python.step_or_map_diagrams.propertydiagramcalculation method)": [[14, "tc_python.step_or_map_diagrams.PropertyDiagramCalculation.with_system_modifications"]], "abstractcalculation (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.AbstractCalculation"]], "abstractresult (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.AbstractResult"]], "phaseparameter (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.PhaseParameter"]], "systemdata (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.SystemData"]], "systemfunction (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.SystemFunction"]], "systemmodifications (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.SystemModifications"]], "temperatureinterval (class in tc_python.abstract_base)": [[17, "tc_python.abstract_base.TemperatureInterval"]], "get_configuration_as_string() (tc_python.abstract_base.abstractcalculation method)": [[17, "tc_python.abstract_base.AbstractCalculation.get_configuration_as_string"]], "get_expression() (tc_python.abstract_base.temperatureinterval method)": [[17, "tc_python.abstract_base.TemperatureInterval.get_expression"]], "get_intervals() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.get_intervals"]], "get_intervals() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.get_intervals"]], "get_lower_temperature_limit() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.get_lower_temperature_limit"]], "get_lower_temperature_limit() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.get_lower_temperature_limit"]], "get_name() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.get_name"]], "get_name() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.get_name"]], "get_phase_parameter() (tc_python.abstract_base.systemdata method)": [[17, "tc_python.abstract_base.SystemData.get_phase_parameter"]], "get_phase_parameter_names() (tc_python.abstract_base.systemdata method)": [[17, "tc_python.abstract_base.SystemData.get_phase_parameter_names"]], "get_system_data() (tc_python.abstract_base.abstractcalculation method)": [[17, "tc_python.abstract_base.AbstractCalculation.get_system_data"]], "get_system_function() (tc_python.abstract_base.systemdata method)": [[17, "tc_python.abstract_base.SystemData.get_system_function"]], "get_system_function_names() (tc_python.abstract_base.systemdata method)": [[17, "tc_python.abstract_base.SystemData.get_system_function_names"]], "get_upper_temperature_limit() (tc_python.abstract_base.temperatureinterval method)": [[17, "tc_python.abstract_base.TemperatureInterval.get_upper_temperature_limit"]], "invalidate() (tc_python.abstract_base.abstractcalculation method)": [[17, "tc_python.abstract_base.AbstractCalculation.invalidate"]], "invalidate() (tc_python.abstract_base.abstractresult method)": [[17, "tc_python.abstract_base.AbstractResult.invalidate"]], "remove_all_intervals() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.remove_all_intervals"]], "remove_all_intervals() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.remove_all_intervals"]], "remove_interval_with_upper_limit() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.remove_interval_with_upper_limit"]], "remove_interval_with_upper_limit() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.remove_interval_with_upper_limit"]], "run_ges_command() (tc_python.abstract_base.systemmodifications method)": [[17, "tc_python.abstract_base.SystemModifications.run_ges_command"]], "set() (tc_python.abstract_base.systemmodifications method)": [[17, "tc_python.abstract_base.SystemModifications.set"]], "set_expression() (tc_python.abstract_base.temperatureinterval method)": [[17, "tc_python.abstract_base.TemperatureInterval.set_expression"]], "set_expression_with_upper_limit() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.set_expression_with_upper_limit"]], "set_expression_with_upper_limit() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.set_expression_with_upper_limit"]], "set_interval() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.set_interval"]], "set_interval() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.set_interval"]], "set_lower_temperature_limit() (tc_python.abstract_base.phaseparameter method)": [[17, "tc_python.abstract_base.PhaseParameter.set_lower_temperature_limit"]], "set_lower_temperature_limit() (tc_python.abstract_base.systemfunction method)": [[17, "tc_python.abstract_base.SystemFunction.set_lower_temperature_limit"]], "set_upper_temperature_limit() (tc_python.abstract_base.temperatureinterval method)": [[17, "tc_python.abstract_base.TemperatureInterval.set_upper_temperature_limit"]], "tc_python.abstract_base": [[17, "module-tc_python.abstract_base"]], "with_system_modifications() (tc_python.abstract_base.abstractcalculation method)": [[17, "tc_python.abstract_base.AbstractCalculation.with_system_modifications"]], "compositionset (class in tc_python.entities)": [[18, "tc_python.entities.CompositionSet"]], "element (class in tc_python.entities)": [[18, "tc_python.entities.Element"]], "gas (tc_python.entities.phasetype attribute)": [[18, "tc_python.entities.PhaseType.GAS"]], "ionic_liquid (tc_python.entities.phasetype attribute)": [[18, "tc_python.entities.PhaseType.IONIC_LIQUID"]], "liquid (tc_python.entities.phasetype attribute)": [[18, "tc_python.entities.PhaseType.LIQUID"]], "phase (class in tc_python.entities)": [[18, "tc_python.entities.Phase"]], "phasetype (class in tc_python.entities)": [[18, "tc_python.entities.PhaseType"]], "solid (tc_python.entities.phasetype attribute)": [[18, "tc_python.entities.PhaseType.SOLID"]], "species (class in tc_python.entities)": [[18, "tc_python.entities.Species"]], "sublattice (class in tc_python.entities)": [[18, "tc_python.entities.Sublattice"]], "get_all_elements() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.get_all_elements"]], "get_charge() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.get_charge"]], "get_constituents() (tc_python.entities.sublattice method)": [[18, "tc_python.entities.Sublattice.get_constituents"]], "get_enthalpy() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.get_enthalpy"]], "get_entropy_diff_0_to_298k() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.get_entropy_diff_0_to_298k"]], "get_molar_mass() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.get_molar_mass"]], "get_name() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.get_name"]], "get_name() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.get_name"]], "get_name() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.get_name"]], "get_nr_of_sites() (tc_python.entities.sublattice method)": [[18, "tc_python.entities.Sublattice.get_nr_of_sites"]], "get_species() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.get_species"]], "get_species_for_composition_profile() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.get_species_for_composition_profile"]], "get_stable_element_reference() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.get_stable_element_reference"]], "get_sublattices() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.get_sublattices"]], "get_type() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.get_type"]], "has_diffusion_data() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.has_diffusion_data"]], "has_molar_volume_data() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.has_molar_volume_data"]], "is_dilute_diffusion_model() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.is_dilute_diffusion_model"]], "is_element() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.is_element"]], "is_gas() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.is_gas"]], "is_interstitial() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.is_interstitial"]], "is_interstitial() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.is_interstitial"]], "is_ionic_liquid() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.is_ionic_liquid"]], "is_liquid() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.is_liquid"]], "is_solid() (tc_python.entities.phase method)": [[18, "tc_python.entities.Phase.is_solid"]], "is_special() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.is_special"]], "is_special() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.is_special"]], "is_valid() (tc_python.entities.element method)": [[18, "tc_python.entities.Element.is_valid"]], "is_valid() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.is_valid"]], "set_major_constituents_for_sublattice() (tc_python.entities.compositionset method)": [[18, "tc_python.entities.CompositionSet.set_major_constituents_for_sublattice"]], "tc_python.entities": [[18, "module-tc_python.entities"]], "to_element() (tc_python.entities.species method)": [[18, "tc_python.entities.Species.to_element"]], "apiserverexception": [[19, "tc_python.exceptions.APIServerException"]], "calculationexception": [[19, "tc_python.exceptions.CalculationException"]], "componentnotexistingexception": [[19, "tc_python.exceptions.ComponentNotExistingException"]], "databaseexception": [[19, "tc_python.exceptions.DatabaseException"]], "degreesoffreedomnotzeroexception": [[19, "tc_python.exceptions.DegreesOfFreedomNotZeroException"]], "equilibriumexception": [[19, "tc_python.exceptions.EquilibriumException"]], "generalcalculationexception": [[19, "tc_python.exceptions.GeneralCalculationException"]], "generalexception": [[19, "tc_python.exceptions.GeneralException"]], "invalidcalculationconfigurationexception": [[19, "tc_python.exceptions.InvalidCalculationConfigurationException"]], "invalidcalculationstateexception": [[19, "tc_python.exceptions.InvalidCalculationStateException"]], "invalidnumberofresultgroupsexception": [[19, "tc_python.exceptions.InvalidNumberOfResultGroupsException"]], "invalidresultconfigurationexception": [[19, "tc_python.exceptions.InvalidResultConfigurationException"]], "invalidresultstateexception": [[19, "tc_python.exceptions.InvalidResultStateException"]], "licenseexception": [[19, "tc_python.exceptions.LicenseException"]], "nodataforphaseexception": [[19, "tc_python.exceptions.NoDataForPhaseException"]], "notallowedoperationexception": [[19, "tc_python.exceptions.NotAllowedOperationException"]], "phasenotexistingexception": [[19, "tc_python.exceptions.PhaseNotExistingException"]], "resultexception": [[19, "tc_python.exceptions.ResultException"]], "syntaxexception": [[19, "tc_python.exceptions.SyntaxException"]], "tcexception": [[19, "tc_python.exceptions.TCException"]], "unrecoverablecalculationexception": [[19, "tc_python.exceptions.UnrecoverableCalculationException"]], "handle_exception() (in module tc_python.exceptions)": [[19, "tc_python.exceptions.handle_exception"]], "tc_python.exceptions": [[19, "module-tc_python.exceptions"]], "any_list_marker (tc_python.propertymodel_sdk.speciallistmarkers attribute)": [[20, "tc_python.propertymodel_sdk.SpecialListMarkers.ANY_LIST_MARKER"]], "cctresult (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.CCTResult"]], "cctresultvalues (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.CCTResultValues"]], "cct_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.CCT_QUANTITY"]], "calculationcontext (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.CalculationContext"]], "conditionlistentry (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.ConditionListEntry"]], "energy_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.ENERGY_QUANTITY"]], "general_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.GENERAL_QUANTITY"]], "length_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.LENGTH_QUANTITY"]], "none_list_marker (tc_python.propertymodel_sdk.speciallistmarkers attribute)": [[20, "tc_python.propertymodel_sdk.SpecialListMarkers.NONE_LIST_MARKER"]], "propertymodel (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.PropertyModel"]], "resultquantity (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.ResultQuantity"]], "resultquantitytype (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType"]], "single_equilibrium_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.SINGLE_EQUILIBRIUM_QUANTITY"]], "strength_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.STRENGTH_QUANTITY"]], "surface_energy_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.SURFACE_ENERGY_QUANTITY"]], "speciallistmarkers (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.SpecialListMarkers"]], "temperature_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.TEMPERATURE_QUANTITY"]], "time_quantity (tc_python.propertymodel_sdk.resultquantitytype attribute)": [[20, "tc_python.propertymodel_sdk.ResultQuantityType.TIME_QUANTITY"]], "uibooleancomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent"]], "uicomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIComponent"]], "uiconditionlistcomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIConditionListComponent"]], "uifloatcomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIFloatComponent"]], "uigenerallistcomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent"]], "uiphaselistcomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent"]], "uisectiondividercomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UISectionDividerComponent"]], "uistringcomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UIStringComponent"]], "uitemperaturecomponent (class in tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.UITemperatureComponent"]], "add_button_callback() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.add_button_callback"]], "add_time_temperature() (tc_python.propertymodel_sdk.cctresult method)": [[20, "tc_python.propertymodel_sdk.CCTResult.add_time_temperature"]], "after_evaluations() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.after_evaluations"]], "before_evaluations() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.before_evaluations"]], "connect_component_enableability() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.connect_component_enableability"]], "connect_component_visibility() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.connect_component_visibility"]], "connect_component_visibility() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.connect_component_visibility"]], "create_boolean_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_boolean_ui_component"]], "create_condition_list_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_condition_list_ui_component"]], "create_energy_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_energy_quantity"]], "create_float_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_float_ui_component"]], "create_general_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_general_quantity"]], "create_length_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_length_quantity"]], "create_list_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_list_ui_component"]], "create_phase_list_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_phase_list_ui_component"]], "create_section_divider_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_section_divider_ui_component"]], "create_strength_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_strength_quantity"]], "create_string_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_string_ui_component"]], "create_surface_energy_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_surface_energy_quantity"]], "create_temperature_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_temperature_quantity"]], "create_temperature_ui_component() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_temperature_ui_component"]], "create_time_quantity() (in module tc_python.propertymodel_sdk)": [[20, "tc_python.propertymodel_sdk.create_time_quantity"]], "enable_add_button() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.enable_add_button"]], "enable_add_button() (tc_python.propertymodel_sdk.uifloatcomponent method)": [[20, "tc_python.propertymodel_sdk.UIFloatComponent.enable_add_button"]], "enable_add_button() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.enable_add_button"]], "enable_add_button() (tc_python.propertymodel_sdk.uiphaselistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent.enable_add_button"]], "enable_add_button() (tc_python.propertymodel_sdk.uistringcomponent method)": [[20, "tc_python.propertymodel_sdk.UIStringComponent.enable_add_button"]], "enable_add_button() (tc_python.propertymodel_sdk.uitemperaturecomponent method)": [[20, "tc_python.propertymodel_sdk.UITemperatureComponent.enable_add_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.enable_remove_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uifloatcomponent method)": [[20, "tc_python.propertymodel_sdk.UIFloatComponent.enable_remove_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.enable_remove_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uiphaselistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent.enable_remove_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uistringcomponent method)": [[20, "tc_python.propertymodel_sdk.UIStringComponent.enable_remove_button"]], "enable_remove_button() (tc_python.propertymodel_sdk.uitemperaturecomponent method)": [[20, "tc_python.propertymodel_sdk.UITemperatureComponent.enable_remove_button"]], "evaluate_model() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.evaluate_model"]], "get_any_marker_setting() (tc_python.propertymodel_sdk.uiphaselistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent.get_any_marker_setting"]], "get_argument_ids() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_argument_ids"]], "get_content() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.get_content"]], "get_default_phase() (tc_python.propertymodel_sdk.uiphaselistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent.get_default_phase"]], "get_dependent_component() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_dependent_component"]], "get_dependent_components() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.get_dependent_components"]], "get_dependent_components() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.get_dependent_components"]], "get_description() (tc_python.propertymodel_sdk.resultquantity method)": [[20, "tc_python.propertymodel_sdk.ResultQuantity.get_description"]], "get_description() (tc_python.propertymodel_sdk.uicomponent method)": [[20, "tc_python.propertymodel_sdk.UIComponent.get_description"]], "get_id() (tc_python.propertymodel_sdk.resultquantity method)": [[20, "tc_python.propertymodel_sdk.ResultQuantity.get_id"]], "get_id() (tc_python.propertymodel_sdk.uicomponent method)": [[20, "tc_python.propertymodel_sdk.UIComponent.get_id"]], "get_license_key() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.get_license_key"]], "get_mass_fractions() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_mass_fractions"]], "get_mass_percents() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_mass_percents"]], "get_mole_fractions() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_mole_fractions"]], "get_mole_percents() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_mole_percents"]], "get_name() (tc_python.propertymodel_sdk.uicomponent method)": [[20, "tc_python.propertymodel_sdk.UIComponent.get_name"]], "get_selected_entry() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.get_selected_entry"]], "get_setting() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.get_setting"]], "get_temp() (tc_python.propertymodel_sdk.uitemperaturecomponent method)": [[20, "tc_python.propertymodel_sdk.UITemperatureComponent.get_temp"]], "get_temperature() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_temperature"]], "get_type() (tc_python.propertymodel_sdk.resultquantity method)": [[20, "tc_python.propertymodel_sdk.ResultQuantity.get_type"]], "get_ui_boolean_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_boolean_value"]], "get_ui_condition_list() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_condition_list"]], "get_ui_float_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_float_value"]], "get_ui_list_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_list_value"]], "get_ui_string_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_string_value"]], "get_ui_temperature_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.get_ui_temperature_value"]], "get_value() (tc_python.propertymodel_sdk.uifloatcomponent method)": [[20, "tc_python.propertymodel_sdk.UIFloatComponent.get_value"]], "get_value() (tc_python.propertymodel_sdk.uisectiondividercomponent method)": [[20, "tc_python.propertymodel_sdk.UISectionDividerComponent.get_value"]], "get_value() (tc_python.propertymodel_sdk.uistringcomponent method)": [[20, "tc_python.propertymodel_sdk.UIStringComponent.get_value"]], "provide_calculation_result_quantities() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_calculation_result_quantities"]], "provide_model_category() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_model_category"]], "provide_model_description() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_model_description"]], "provide_model_name() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_model_name"]], "provide_model_parameters() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_model_parameters"]], "provide_ui_panel_components() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.provide_ui_panel_components"]], "remove_button_callback() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.remove_button_callback"]], "remove_component_visibility() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.remove_component_visibility"]], "remove_component_visibility() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.remove_component_visibility"]], "set_enabled() (tc_python.propertymodel_sdk.uicomponent method)": [[20, "tc_python.propertymodel_sdk.UIComponent.set_enabled"]], "set_index() (tc_python.propertymodel_sdk.uibooleancomponent method)": [[20, "tc_python.propertymodel_sdk.UIBooleanComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uifloatcomponent method)": [[20, "tc_python.propertymodel_sdk.UIFloatComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uigenerallistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIGeneralListComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uiphaselistcomponent method)": [[20, "tc_python.propertymodel_sdk.UIPhaseListComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uisectiondividercomponent method)": [[20, "tc_python.propertymodel_sdk.UISectionDividerComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uistringcomponent method)": [[20, "tc_python.propertymodel_sdk.UIStringComponent.set_index"]], "set_index() (tc_python.propertymodel_sdk.uitemperaturecomponent method)": [[20, "tc_python.propertymodel_sdk.UITemperatureComponent.set_index"]], "set_model_parameter() (tc_python.propertymodel_sdk.propertymodel method)": [[20, "tc_python.propertymodel_sdk.PropertyModel.set_model_parameter"]], "set_result_cct_values() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.set_result_cct_values"]], "set_result_quantity_value() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.set_result_quantity_value"]], "set_result_time_temperature() (tc_python.propertymodel_sdk.cctresultvalues method)": [[20, "tc_python.propertymodel_sdk.CCTResultValues.set_result_time_temperature"]], "set_single_equilibrium_result() (tc_python.propertymodel_sdk.calculationcontext method)": [[20, "tc_python.propertymodel_sdk.CalculationContext.set_single_equilibrium_result"]], "set_visible() (tc_python.propertymodel_sdk.uicomponent method)": [[20, "tc_python.propertymodel_sdk.UIComponent.set_visible"]], "tc_python.propertymodel_sdk": [[20, "module-tc_python.propertymodel_sdk"]], "temperature_suffix (tc_python.propertymodel_sdk.cctresult attribute)": [[20, "tc_python.propertymodel_sdk.CCTResult.temperature_suffix"]], "time_suffix (tc_python.propertymodel_sdk.cctresult attribute)": [[20, "tc_python.propertymodel_sdk.CCTResult.time_suffix"]], "diffusionquantity (class in tc_python.quantity_factory)": [[21, "tc_python.quantity_factory.DiffusionQuantity"]], "independentvariable (class in tc_python.quantity_factory)": [[21, "tc_python.quantity_factory.IndependentVariable"]], "plotcondition (class in tc_python.quantity_factory)": [[21, "tc_python.quantity_factory.PlotCondition"]], "scheilquantity (class in tc_python.quantity_factory)": [[21, "tc_python.quantity_factory.ScheilQuantity"]], "thermodynamicquantity (class in tc_python.quantity_factory)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity"]], "activity_of_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.activity_of_component"]], "activity_of_component() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.activity_of_component"]], "apparent_heat_capacity_per_gram() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.apparent_heat_capacity_per_gram"]], "apparent_heat_capacity_per_mole() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.apparent_heat_capacity_per_mole"]], "apparent_volumetric_thermal_expansion_coefficient() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.apparent_volumetric_thermal_expansion_coefficient"]], "average_composition_of_solid_phases_as_mass_fraction() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.average_composition_of_solid_phases_as_mass_fraction"]], "average_composition_of_solid_phases_as_mole_fraction() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.average_composition_of_solid_phases_as_mole_fraction"]], "chemical_diffusion_coefficient() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.chemical_diffusion_coefficient"]], "chemical_diffusion_coefficient() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.chemical_diffusion_coefficient"]], "chemical_potential_of_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.chemical_potential_of_component"]], "chemical_potential_of_component() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.chemical_potential_of_component"]], "composition_of_phase_as_mole_fraction() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.composition_of_phase_as_mole_fraction"]], "composition_of_phase_as_mole_fraction() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.composition_of_phase_as_mole_fraction"]], "composition_of_phase_as_weight_fraction() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.composition_of_phase_as_weight_fraction"]], "composition_of_phase_as_weight_fraction() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.composition_of_phase_as_weight_fraction"]], "density_of_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.density_of_phase"]], "density_of_system() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.density_of_system"]], "distance() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.distance"]], "distance() (tc_python.quantity_factory.independentvariable class method)": [[21, "tc_python.quantity_factory.IndependentVariable.distance"]], "distance() (tc_python.quantity_factory.plotcondition class method)": [[21, "tc_python.quantity_factory.PlotCondition.distance"]], "distribution_of_component_of_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.distribution_of_component_of_phase"]], "gibbs_energy_of_a_phase() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.gibbs_energy_of_a_phase"]], "heat_per_gram() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.heat_per_gram"]], "heat_per_mole() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.heat_per_mole"]], "integral() (tc_python.quantity_factory.plotcondition class method)": [[21, "tc_python.quantity_factory.PlotCondition.integral"]], "interface() (tc_python.quantity_factory.plotcondition class method)": [[21, "tc_python.quantity_factory.PlotCondition.interface"]], "intrinsic_diffusion_coefficient() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.intrinsic_diffusion_coefficient"]], "l_bis() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.l_bis"]], "latent_heat_per_gram() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.latent_heat_per_gram"]], "latent_heat_per_mole() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.latent_heat_per_mole"]], "mass_fraction_of_a_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.mass_fraction_of_a_component"]], "mass_fraction_of_a_component() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.mass_fraction_of_a_component"]], "mass_fraction_of_a_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.mass_fraction_of_a_phase"]], "mass_fraction_of_a_phase() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.mass_fraction_of_a_phase"]], "mass_fraction_of_a_solid_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mass_fraction_of_a_solid_phase"]], "mass_fraction_of_all_liquid() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mass_fraction_of_all_liquid"]], "mass_fraction_of_all_solid_phases() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mass_fraction_of_all_solid_phases"]], "mobility_of_component_in_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.mobility_of_component_in_phase"]], "molar_volume_of_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.molar_volume_of_phase"]], "molar_volume_of_system() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.molar_volume_of_system"]], "mole_fraction_of_a_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.mole_fraction_of_a_component"]], "mole_fraction_of_a_component() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.mole_fraction_of_a_component"]], "mole_fraction_of_a_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.mole_fraction_of_a_phase"]], "mole_fraction_of_a_phase() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.mole_fraction_of_a_phase"]], "mole_fraction_of_a_solid_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mole_fraction_of_a_solid_phase"]], "mole_fraction_of_all_liquid() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mole_fraction_of_all_liquid"]], "mole_fraction_of_all_solid_phases() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.mole_fraction_of_all_solid_phases"]], "normalized_driving_force_of_a_phase() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.normalized_driving_force_of_a_phase"]], "position_of_lower_boundary_of_region() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.position_of_lower_boundary_of_region"]], "position_of_upper_boundary_of_region() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.position_of_upper_boundary_of_region"]], "pressure() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.pressure"]], "site_fraction_of_component_in_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.site_fraction_of_component_in_phase"]], "system_size() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.system_size"]], "tc_python.quantity_factory": [[21, "module-tc_python.quantity_factory"]], "temperature() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.temperature"]], "temperature() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.temperature"]], "temperature() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.temperature"]], "thermodynamic_factor() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.thermodynamic_factor"]], "time() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.time"]], "time() (tc_python.quantity_factory.independentvariable class method)": [[21, "tc_python.quantity_factory.IndependentVariable.time"]], "time() (tc_python.quantity_factory.plotcondition class method)": [[21, "tc_python.quantity_factory.PlotCondition.time"]], "total_mass_fraction_of_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_mass_fraction_of_component"]], "total_mass_fraction_of_component_in_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_mass_fraction_of_component_in_phase"]], "total_mass_fraction_of_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_mass_fraction_of_phase"]], "total_mole_fraction_of_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_mole_fraction_of_component"]], "total_mole_fraction_of_component_in_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_mole_fraction_of_component_in_phase"]], "total_volume_fraction_of_phase() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.total_volume_fraction_of_phase"]], "tracer_diffusion_coefficient() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.tracer_diffusion_coefficient"]], "tracer_diffusion_coefficient() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.tracer_diffusion_coefficient"]], "u_fraction_of_a_component() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.u_fraction_of_a_component"]], "u_fraction_of_a_component() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.u_fraction_of_a_component"]], "user_defined_function() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.user_defined_function"]], "user_defined_function() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.user_defined_function"]], "velocity_of_lower_boundary_of_region() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.velocity_of_lower_boundary_of_region"]], "velocity_of_upper_boundary_of_region() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.velocity_of_upper_boundary_of_region"]], "volume_fraction_of_a_phase() (tc_python.quantity_factory.thermodynamicquantity class method)": [[21, "tc_python.quantity_factory.ThermodynamicQuantity.volume_fraction_of_a_phase"]], "volume_fraction_of_a_solid_phase() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.volume_fraction_of_a_solid_phase"]], "volume_fraction_of_all_liquid() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.volume_fraction_of_all_liquid"]], "volume_fraction_of_all_solid_phases() (tc_python.quantity_factory.scheilquantity class method)": [[21, "tc_python.quantity_factory.ScheilQuantity.volume_fraction_of_all_solid_phases"]], "width_of_region() (tc_python.quantity_factory.diffusionquantity class method)": [[21, "tc_python.quantity_factory.DiffusionQuantity.width_of_region"]], "file (tc_python.server.loggingpolicy attribute)": [[22, "tc_python.server.LoggingPolicy.FILE"]], "loggingpolicy (class in tc_python.server)": [[22, "tc_python.server.LoggingPolicy"]], "metallurgycalculations (class in tc_python.server)": [[22, "tc_python.server.MetallurgyCalculations"]], "none (tc_python.server.loggingpolicy attribute)": [[22, "tc_python.server.LoggingPolicy.NONE"]], "resultloader (class in tc_python.server)": [[22, "tc_python.server.ResultLoader"]], "screen (tc_python.server.loggingpolicy attribute)": [[22, "tc_python.server.LoggingPolicy.SCREEN"]], "setup (class in tc_python.server)": [[22, "tc_python.server.SetUp"]], "tcpython (class in tc_python.server)": [[22, "tc_python.server.TCPython"]], "diffusion() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.diffusion"]], "disable_caching() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.disable_caching"]], "get_database_info() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.get_database_info"]], "get_database_path_on_disk() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.get_database_path_on_disk"]], "get_databases() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.get_databases"]], "get_property_models() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.get_property_models"]], "load_result_from_disk() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.load_result_from_disk"]], "phase_diagram() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.phase_diagram"]], "precipitation_ttt_or_cct() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.precipitation_TTT_or_CCT"]], "precipitation_single() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.precipitation_single"]], "property_diagram() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.property_diagram"]], "property_model() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.property_model"]], "scheil() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.scheil"]], "select_database_and_elements() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.select_database_and_elements"]], "select_thermodynamic_and_kinetic_databases_with_elements() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.select_thermodynamic_and_kinetic_databases_with_elements"]], "select_user_database_and_elements() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.select_user_database_and_elements"]], "set_cache_folder() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.set_cache_folder"]], "set_ges_version() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.set_ges_version"]], "set_log_level_to_debug() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.set_log_level_to_debug"]], "set_log_level_to_info() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.set_log_level_to_info"]], "single_equilibrium() (tc_python.server.resultloader method)": [[22, "tc_python.server.ResultLoader.single_equilibrium"]], "start_api_server() (in module tc_python.server)": [[22, "tc_python.server.start_api_server"]], "start_matlab_server() (in module tc_python.server)": [[22, "tc_python.server.start_matlab_server"]], "stop_api_server() (in module tc_python.server)": [[22, "tc_python.server.stop_api_server"]], "tc_python.server": [[22, "module-tc_python.server"]], "with_adiabatic_equilibrium_calculation() (tc_python.server.metallurgycalculations method)": [[22, "tc_python.server.MetallurgyCalculations.with_adiabatic_equilibrium_calculation"]], "with_adiabatic_process_calculation() (tc_python.server.metallurgycalculations method)": [[22, "tc_python.server.MetallurgyCalculations.with_adiabatic_process_calculation"]], "with_isothermal_equilibrium_calculation() (tc_python.server.metallurgycalculations method)": [[22, "tc_python.server.MetallurgyCalculations.with_isothermal_equilibrium_calculation"]], "with_metallurgy() (tc_python.server.setup method)": [[22, "tc_python.server.SetUp.with_metallurgy"]], "multidatabasesystembuilder (class in tc_python.system)": [[23, "tc_python.system.MultiDatabaseSystemBuilder"]], "system (class in tc_python.system)": [[23, "tc_python.system.System"]], "systembuilder (class in tc_python.system)": [[23, "tc_python.system.SystemBuilder"]], "convert_composition() (tc_python.system.system method)": [[23, "tc_python.system.System.convert_composition"]], "create_and_select_species() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.create_and_select_species"]], "create_and_select_species() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.create_and_select_species"]], "deselect_constituent_on_sublattice() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.deselect_constituent_on_sublattice"]], "deselect_constituent_on_sublattice() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.deselect_constituent_on_sublattice"]], "deselect_phase() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.deselect_phase"]], "deselect_phase() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.deselect_phase"]], "deselect_species() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.deselect_species"]], "deselect_species() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.deselect_species"]], "get_all_elements_in_databases() (tc_python.system.system method)": [[23, "tc_python.system.System.get_all_elements_in_databases"]], "get_all_phases_in_databases() (tc_python.system.system method)": [[23, "tc_python.system.System.get_all_phases_in_databases"]], "get_all_species_in_databases() (tc_python.system.system method)": [[23, "tc_python.system.System.get_all_species_in_databases"]], "get_element_object() (tc_python.system.system method)": [[23, "tc_python.system.System.get_element_object"]], "get_elements_in_system() (tc_python.system.system method)": [[23, "tc_python.system.System.get_elements_in_system"]], "get_phase_object() (tc_python.system.system method)": [[23, "tc_python.system.System.get_phase_object"]], "get_phases_in_system() (tc_python.system.system method)": [[23, "tc_python.system.System.get_phases_in_system"]], "get_references() (tc_python.system.system method)": [[23, "tc_python.system.System.get_references"]], "get_species_in_system() (tc_python.system.system method)": [[23, "tc_python.system.System.get_species_in_system"]], "get_species_object() (tc_python.system.system method)": [[23, "tc_python.system.System.get_species_object"]], "get_system() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.get_system"]], "get_system() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.get_system"]], "get_system_data() (tc_python.system.system method)": [[23, "tc_python.system.System.get_system_data"]], "select_constituent_on_sublattice() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.select_constituent_on_sublattice"]], "select_constituent_on_sublattice() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.select_constituent_on_sublattice"]], "select_database_and_elements() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.select_database_and_elements"]], "select_phase() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.select_phase"]], "select_phase() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.select_phase"]], "select_species() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.select_species"]], "select_species() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.select_species"]], "select_user_database_and_elements() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.select_user_database_and_elements"]], "tc_python.system": [[23, "module-tc_python.system"]], "with_batch_equilibrium_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_batch_equilibrium_calculation"]], "with_cct_precipitation_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_cct_precipitation_calculation"]], "with_isothermal_diffusion_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_isothermal_diffusion_calculation"]], "with_isothermal_precipitation_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_isothermal_precipitation_calculation"]], "with_material_to_material() (tc_python.system.system method)": [[23, "tc_python.system.System.with_material_to_material"]], "with_new_composition_set() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.with_new_composition_set"]], "with_new_composition_set() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.with_new_composition_set"]], "with_non_isothermal_diffusion_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_non_isothermal_diffusion_calculation"]], "with_non_isothermal_precipitation_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_non_isothermal_precipitation_calculation"]], "with_phase_diagram_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_phase_diagram_calculation"]], "with_property_diagram_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_property_diagram_calculation"]], "with_property_model_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_property_model_calculation"]], "with_scheil_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_scheil_calculation"]], "with_single_equilibrium_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_single_equilibrium_calculation"]], "with_ttt_precipitation_calculation() (tc_python.system.system method)": [[23, "tc_python.system.System.with_ttt_precipitation_calculation"]], "without_default_phases() (tc_python.system.multidatabasesystembuilder method)": [[23, "tc_python.system.MultiDatabaseSystemBuilder.without_default_phases"]], "without_default_phases() (tc_python.system.systembuilder method)": [[23, "tc_python.system.SystemBuilder.without_default_phases"]], "component (tc_python.utils.compositiontype attribute)": [[24, "tc_python.utils.CompositionType.COMPONENT"]], "compositiontype (class in tc_python.utils)": [[24, "tc_python.utils.CompositionType"]], "compositionunit (class in tc_python.utils)": [[24, "tc_python.utils.CompositionUnit"]], "conversionunit (class in tc_python.utils)": [[24, "tc_python.utils.ConversionUnit"]], "element (tc_python.utils.compositiontype attribute)": [[24, "tc_python.utils.CompositionType.ELEMENT"]], "gasamountunit (class in tc_python.utils)": [[24, "tc_python.utils.GasAmountUnit"]], "gascompositionunit (class in tc_python.utils)": [[24, "tc_python.utils.GasCompositionUnit"]], "gasrateunit (class in tc_python.utils)": [[24, "tc_python.utils.GasRateUnit"]], "interfaceposition (class in tc_python.utils)": [[24, "tc_python.utils.InterfacePosition"]], "kilogram (tc_python.utils.gasamountunit attribute)": [[24, "tc_python.utils.GasAmountUnit.KILOGRAM"]], "kilogram_per_sec (tc_python.utils.gasrateunit attribute)": [[24, "tc_python.utils.GasRateUnit.KILOGRAM_PER_SEC"]], "lower (tc_python.utils.interfaceposition attribute)": [[24, "tc_python.utils.InterfacePosition.LOWER"]], "mass_fraction (tc_python.utils.compositionunit attribute)": [[24, "tc_python.utils.CompositionUnit.MASS_FRACTION"]], "mass_fraction (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.MASS_FRACTION"]], "mass_fraction (tc_python.utils.phaseunit attribute)": [[24, "tc_python.utils.PhaseUnit.MASS_FRACTION"]], "mass_percent (tc_python.utils.compositionunit attribute)": [[24, "tc_python.utils.CompositionUnit.MASS_PERCENT"]], "mass_percent (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.MASS_PERCENT"]], "mole_fraction (tc_python.utils.compositionunit attribute)": [[24, "tc_python.utils.CompositionUnit.MOLE_FRACTION"]], "mole_fraction (tc_python.utils.conversionunit attribute)": [[24, "tc_python.utils.ConversionUnit.MOLE_FRACTION"]], "mole_fraction (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.MOLE_FRACTION"]], "mole_fraction (tc_python.utils.phaseunit attribute)": [[24, "tc_python.utils.PhaseUnit.MOLE_FRACTION"]], "mole_percent (tc_python.utils.compositionunit attribute)": [[24, "tc_python.utils.CompositionUnit.MOLE_PERCENT"]], "mole_percent (tc_python.utils.conversionunit attribute)": [[24, "tc_python.utils.ConversionUnit.MOLE_PERCENT"]], "mole_percent (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.MOLE_PERCENT"]], "norm_cubic_meter (tc_python.utils.gasamountunit attribute)": [[24, "tc_python.utils.GasAmountUnit.NORM_CUBIC_METER"]], "norm_cubic_meter_per_sec (tc_python.utils.gasrateunit attribute)": [[24, "tc_python.utils.GasRateUnit.NORM_CUBIC_METER_PER_SEC"]], "phaseunit (class in tc_python.utils)": [[24, "tc_python.utils.PhaseUnit"]], "resultvaluegroup (class in tc_python.utils)": [[24, "tc_python.utils.ResultValueGroup"]], "temperatureprofile (class in tc_python.utils)": [[24, "tc_python.utils.TemperatureProfile"]], "upper (tc_python.utils.interfaceposition attribute)": [[24, "tc_python.utils.InterfacePosition.UPPER"]], "volume_fraction (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.VOLUME_FRACTION"]], "volume_fraction (tc_python.utils.phaseunit attribute)": [[24, "tc_python.utils.PhaseUnit.VOLUME_FRACTION"]], "volume_percent (tc_python.utils.gascompositionunit attribute)": [[24, "tc_python.utils.GasCompositionUnit.VOLUME_PERCENT"]], "weight_fraction (tc_python.utils.conversionunit attribute)": [[24, "tc_python.utils.ConversionUnit.WEIGHT_FRACTION"]], "weight_percent (tc_python.utils.conversionunit attribute)": [[24, "tc_python.utils.ConversionUnit.WEIGHT_PERCENT"]], "add_time_temperature() (tc_python.utils.temperatureprofile method)": [[24, "tc_python.utils.TemperatureProfile.add_time_temperature"]], "get_label() (tc_python.utils.resultvaluegroup method)": [[24, "tc_python.utils.ResultValueGroup.get_label"]], "get_x() (tc_python.utils.resultvaluegroup method)": [[24, "tc_python.utils.ResultValueGroup.get_x"]], "get_y() (tc_python.utils.resultvaluegroup method)": [[24, "tc_python.utils.ResultValueGroup.get_y"]], "tc_python.utils": [[24, "module-tc_python.utils"]]}})