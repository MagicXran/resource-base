h_setup
!******************************************************************************
/nopr
! get graphics window size
*dim,_grwin,,4
*get,_grwin(1),active,,win,grph,xpos
*get,_grwin(2),active,,win,grph,ypos
*get,_grwin(3),active,,win,grph,width
*get,_grwin(4),active,,win,grph,height
nplot
!
! set the default fonts and background color
*if,_dogrph,gt,0,then
   *get,_system,active,,syname
   *if,strpos(_system,'NT'),eq,0,then
      /dev,font,1,helvetica,medium,r,8
   *else
      /dev,font,1,Courier*New,700,0,-12,0,0,,,
   *endif
   /rgb,index,100,100,100,0
   /rgb,index,0,0,0,15
*endif
_system=
/EOF


h_title
!******************************************************************************
/nopr
! get title, authors name, and report date for HTML template
! authors data is assumed to be in "_unam1" to "_unam8"
!
! get a report title from the /title command
!
*get,_tit1,active,,title,,start,1
*get,_tit2,active,,title,,start,9
*get,_tit3,active,,title,,start,17
*get,_tit4,active,,title,,start,25
*get,_tit5,active,,title,,start,33
*get,_tit6,active,,title,,start,41
*get,_tit7,active,,title,,start,49
*get,_tit8,active,,title,,start,57
*get,_tit9,active,,title,,start,65
!
! get system date
!
*get,_dt,active,,date
*get,_tm,active,,time,wall
!
! calculate year
_yr=nint(_dt/10000)
!
! calculate month
_mn=nint((_dt-(_yr*10000))/100)
_dy=nint(_dt-(_yr*10000)-(_mn*100))
!
! get system time
!
*get,_tm,active,,time,wall
! calculate hour
_hr=nint(_tm-0.5)
! calculate minute
_min=nint(60*(_tm - _hr)-0.5)
! calculate second
_sec=nint(60*(60*(_tm - _hr) - _min)-0.5)
!
!
/com,<br>
/com,<center>
/com,<h1>
*vwrite,_tit1,_tit2,_tit3,_tit4,_tit5,_tit6,_tit7,_tit8,_tit9
(a8,a8,a8,a8,a8,a8,a8,a8,a8)
/com,</h1>
/com,<h4>
*vwrite,_unam1,_unam2,_unam3,_unam4,_unam5,_unam6,_unam7,_unam8
('By ',8a)
/com,</h4>
/com,<p>
/com,<b><font color=black>
_dy=chrval(_dy)
_dy=strcat(_dy,', ')
_yr=chrval(_yr)
_yr=strcat(_yr,';  ')
*if,_mn,eq,1,then
  *vwrite,_dy,_yr
  ('Date: January ',a,a)
*elseif,_mn,eq,2,then
  *vwrite,_dy,_yr
  ('Date: February ',a,a)
*elseif,_mn,eq,3,then
  *vwrite,_dy,_yr
  ('Date: March ',a,a)
*elseif,_mn,eq,4,then
  *vwrite,_dy,_yr
  ('Date: April ',a,a)
*elseif,_mn,eq,5,then
  *vwrite,_dy,_yr
  ('Date: May ',a,a)
*elseif,_mn,eq,6,then
  *vwrite,_dy,_yr
  ('Date: June ',a,a)
*elseif,_mn,eq,7,then
  *vwrite,_dy,_yr
  ('Date: July ',a,a)
*elseif,_mn,eq,8,then
  *vwrite,_dy,_yr
  ('Date: August ',a,a)
*elseif,_mn,eq,9,then
  *vwrite,_dy,_yr
  ('Date: September ',a,a)
*elseif,_mn,eq,10,then
  *vwrite,_dy,_yr
  ('Date: October ',a,a)
*elseif,_mn,eq,11,then
  *vwrite,_dy,_yr
  ('Date: November ',a,a)
*elseif,_mn,eq,12,then
  *vwrite,_dy,_yr
  ('Date: December ',a,a)
*endif
_tmph = _hr
_tmpm = _min
_tmps = _sec
_hr=chrval(_hr)
_min=chrval(_min)
_sec=chrval(_sec)
*if,_tmph,lt,10,then
  *vwrite,_hr
  (' Time: 0',a,':')
*else
  *vwrite,_hr
  (' Time: ',a,':')
*endif
*if,_tmpm,lt,10,then    
  *vwrite,_min
  (' 0',a,':')
*else
  *vwrite,_min
  (a,':')
*endif
*if,_tmps,lt,10,then
  *vwrite,_sec
  (' 0',a)
*else
  *vwrite,_sec
  (a)
*endif
_tmph=
_tmpm=
_tmps=
/com,<p>
/com,</font></b>
/com,<FONT size="+1" COLOR=red><I>An ANSYS Probabilistic Analysis Report</I></FONT>
/com,<p>
/com,<b> Generated by the ANSYS Probabilistic Design System </b>
/com,<p>
/com,<b><h3>
/com,<a href="#intro"><font color=blue>Introduction</font></a> 
/com,<br>
/com,<a href="#dmdl"><font color=blue>Deterministic Model Information</font></a>
/com,<br>
/com,<a href="#pmdl"><font color=blue>Probabilistic Model Information</font></a>
/com,<br>
/com,<a href="#panl"><font color=blue>Probabilistic Analysis Summary</font></a>
/com,<br>
/com,<a href="#rsan"><font color=blue>Regression Analysis Summary</font></a>
/com,<br>
/com,<a href="#pres"><font color=blue>Probabilistic Analysis Results</font></a>
/com,<br>
/com,</h3></b>
!
/com,</center>
/com,<p>
!
_tit1=
_tit2=
_tit3=
_tit4=
_tit5=
_tit6=
_tit7=
_tit8=
_i=
_dt=
_mn=
_dy=
_yr=
_tm=
_hr=
_min=
_sec=
/EOF


h_intro
!******************************************************************************
/nopr
/com,<H2>I. Introduction </H2>
/com,<P>
/com,The ANSYS Probabilistic Design System (PDS) analyzes a component or 
/com,a system involving uncertain input parameters. These input parameters
/com,(geometry, material proerties, boundary conditions, etc.) are defined 
/com,in the ANSYS model. The variation of these input parameters are defined
/com,as random input variables and are characterized by their distribution 
/com,type (Gaussian, lognormal, etc.) and by their distribution parameters 
/com,(mean values, standard deviation, etc.). Any interdependencies between 
/com,random input variables are also defined as correlation coefficients. 
/com,The important results are defined as random output parameters.
/com,</p>
/com,<p>
/com,During a probabilistic analysis, ANSYS executes multiple analysis loops 
/com,to compute the random output parameters as a function of the set of 
/com,random input variables. The values for the input variables are 
/com,generated either randomly (using Monte Carlo simulation) or as 
/com,prescribed samples (using Response Surface Methods).
/com,</p>
/com,<p>
/com,This report includes the following items, if applicable:
/com,</p>
/com,<p>
/com,<UL><LI>The deterministic model (the ANSYS model that computes 
/com,the results and result parameters for a given set of input 
/com,parameters)</LI></UL>
/com,</p>
/com,<p>
/com,<UL><LI>The random input variables and their specifications
/com,</LI></UL>
/com,</p>
/com,<p>
/com,<UL><LI>Correlations between random input variables</LI></UL>
/com,</p>
/com,<p>
/com,<UL><LI>Solution sets containing the results of each 
/com,probabilistic analysis</LI></UL>
/com,</p>
/com,<p>
/com,<UL><LI>Response surface sets containing the results of 
/com,fitting of response surfaces</LI></UL>
/com,</p>
/com,<p>
/com,The statistics of the random output parameters were computed 
/com,using the ANSYS results and illustrate the properties of 
/com,the output parameters using histogram plots, cumulative 
/com,distribution curves, and/or history plots. The influence of 
/com,random input variables on individual output parameters (known
/com,as the "sensitivity") are illustrated as bar and pie charts.
/com,</p>
/com,<br>
/EOF


h_dmdl
!******************************************************************************
/nopr
! Deterministic Model Information sections.
/com,<h2>II. Deterministic Model Information </h2>
/EOF


h_gmplot
!******************************************************************************
/nopr
! plot the model geometry and form jpeg files.
! when jpegs are finished, copy to report directory.
!
! arg1 = figure number. max of 9999 allowed at this time.
allsel
*if,elmiqr(0,14),gt,0,then
   _fig=1
   !
   ! get job name
   *get,_jn1,active,,jobname,,start,1
   *get,_jn2,active,,jobname,,start,9
   *get,_jn3,active,,jobname,,start,17
   *get,_jn4,active,,jobname,,start,25
   _work1=chrval(%_fig%)
   *if,_fig,ge,1000,then
      *vwrite,_work1
      ('<a name="figure',a4,'">')
   *elseif,_fig,ge,100,then
      *vwrite,_work1
      ('<a name="figure',a3,'">')
   *elseif,_fig,ge,10,then
      *vwrite,_work1
      ('<a name="figure',a2,'">')
   *else
      *vwrite,_work1
      ('<a name="figure',a1,'">')
   *endif
   /com,<table border=1 cellpadding=4>
   *vwrite,_fig
   ('<tr><th> Figure',f6.0,' Model Geometry and Finite Element Mesh</th></tr>')
   /com,<tr><td align=center>
   eplot
   *use,h_imgcap
   /com,</td></tr>
   /com,</table>
   /com,<br>
   _work1=
   _jn1=
   _jn2=
   _jn3=
   _jn4=
*else
   _fig=0
   /com,<p>
   /com,No elements are defined and an element plot has been suppressed.
   /com,</p>
*endif
/EOF
   

h_geom
!******************************************************************************
/nopr
!
! display a table of geometric entities that contains
! number defined and number selected.
!
! set up a table of element names from the ELCXXX routines
*dim,_ename,char,200
_ename(1)='LINK1','PLANE2','BEAM3','BEAM4','SOLID5'
_ename(6)='SURF6','COMBIN7','LINK8','INFIN9','LINK10'
_ename(11)='LINK11','CONTAC12','PLANE13','COMBIN14','FLUID15'
_ename(16)='PIPE16','PIPE17','PIPE18','SURF19','PIPE20'
_ename(21)='MASS21','SURF22','BEAM23','BEAM24','PLANE25'
_ename(26)='CONTAC26','MATRIX27','SHELL28','FLUID29','FLUID30'
_ename(31)='LINK31','LINK32','LINK33','LINK34','PLANE35'
_ename(36)='SOURC36','COMBIN37','FLUID38','COMBIN39','COMBIN40'
_ename(41)='SHELL41','PLANE42','SHELL43','BEAM44','SOLID45'
_ename(46)='SOLID46','INFIN47','CONTAC48','CONTAC49','MATRIX50'
_ename(51)='SHELL51','CONTAC52','PLANE53','BEAM54','PLANE55'
_ename(56)='HYPER56','SHELL57','HYPER58','PIPE59','PIPE60'
_ename(61)='SHELL61','SOLID62','SHELL63','SOLID64','SOLID65'
_ename(66)='FLUID66','PLANE67','LINK68','SOLID69','SOLID70'
_ename(71)='MASS71','SOLID72','SOLID73','HYPER74','PLANE75'
_ename(76)='SURF76','PLANE77','PLANE78','FLUID79','FLUID80'
_ename(81)='FLUID81','PLANE82','PLANE83','HYPER84','SOLID85'
_ename(86)='HYPER86','SOLID87','VISCO88','VISCO89','SOLID90'
_ename(91)='SHELL91','SOLID92','SHELL93','STIF94','SOLID95'
_ename(96)='SOLID96','SOLID97','SOLID98','SHELL99','xxxxxxxx'
_ename(101)='xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx'
_ename(106)='VISCO106','VISCO107','VISCO108','VISCO109','INFIN110'
_ename(111)='INFIN111','xxxxxxxx','HF113','HF114','INTER115'
_ename(116)='FLUID116','SOLID117','xxxxxxxx','HF119','HF120'
_ename(121)='PLANE121','SOLID122','SOLID123','CIRCU124','CIRCU125'
_ename(126)='xxxxxxxx','xxxxxxxx','xxxxxxxx','FLUID129','FLUID130'
_ename(131)='FLUID131','FLUID132','FLUID133','FLUID134','FLUID135'
_ename(136)='FLUID136','FLUID137','FLUID138','FLUID139','FLUID140'
_ename(141)='FLUID141','FLUID142','SHELL143','xxxxxxxx','PLANE145'
_ename(146)='PLANE146','SOLID147','SOLID148','xxxxxxxx','SHELL150'
_ename(151)='SURF151','SURF152','SURF153','SURF154','SOIL155'
_ename(156)='SOIL156','SHELL157','HYPER158','xxxxxxxx','LINK160'
_ename(161)='BEAM161','SHELL162','SHELL163','SOLID164','COMBI165'
_ename(166)='MASS166','LINK167','xxxxxxxx','TARGE169','TARGE170'
_ename(171)='CONTA171','CONTA172','CONTA173','CONTA174','xxxxxxxx'
_ename(176)='xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx'
_ename(181)='SHELL181','PLANE182','xxxxxxxx','xxxxxxxx','SOLID185'
_ename(186)='xxxxxxxx','xxxxxxxx','BEAM188','BEAM189','xxxxxxxx'
_ename(191)='xxxxxxxx','xxxxxxxx','RIGID193','RIGID194','xxxxxxxx'
_ename(196)='xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx','xxxxxxxx'

_numt=etyiqr(0,14)
*dim,_etyp,,_numt
_nume=elmiqr(0,14)
*if,_nume,gt,0,then
   *do,_i,1,_nume
      _typ=elmiqr(_i,-2)
      *if,_typ,gt,0,then
         _etyp(_typ)=_etyp(_typ)+1
      *endif
   *enddo
   _tbl = 1
   /com,<a name="htbl1"><b>Table 1.  Details of the Finite Element Model</b></a>
   /com,<table border=1 cellpadding=4>
   /com,<tr>
   /com,<td> <b>Entity</b> </td>
   /com,<td align=center> <b>Number Defined</b> </td>
   /com,</tr>
   *do,_i,1,_numt
      *if,_etyp(_i,1),gt,0,then
         _typ=etyiqr(_i,-2)
         _name=_ename(_typ)
         _def=_etyp(_i)
         /com,<tr>
         /com,<td>
         *vwrite,_name
         ('<b>',a,'</b>')
         /com,</td>
         _def=chrval(_def)
         *vwrite,_def
         ('<td align=center>',a,'</td>')
         /com,</tr>
      *endif
   *enddo
   *if,ndinqr(0,12),gt,0,then
      /com,<tr>
      /com,<td> <b>Nodes</b> </td>
      _a=ndinqr(0,12)
      _a=chrval(_a)
      *vwrite,_a
      ('<td align=center>',a,'</td>')
   *endif
*else
   _tbl = 0
*endif
/com,</table>
/com,<br>
_a=
_ename=
_etyp=
_nume=
_numt=
_num=
_i=
_typ=
_sel=
_def=
_name=
_namea=
_nameb=
_namec=
_named=
/EOF


h_mater
!******************************************************************************
/nopr
!
! display the material properties
!
! first get the materials that user
! wants to display.
! 
! arg1= mat number
! arg2-ar10 = materials (i.e. ex, ey, ...)
!

_nummatl=mpinqr(0,0,14)
*if,_nummatl,gt,0,then
   *dim,_inp,char,11
   
   *if,_nummatl,gt,1,then
     _a = 2
   *else
     _a = _nummatl
   *endif
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(1)=upcase(_a)
   *else
      _inp(1)=chrval(_a)
   *endif
   
   _a=arg2
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(2)=upcase(_a)
   *endif
   
   _a=arg3
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(3)=upcase(_a)
   *endif
   
   _a=arg4
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(4)=upcase(_a)
   *endif
   
   _a=arg5
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(5)=upcase(_a)
   *endif
   
   _a=arg6
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(6)=upcase(_a)
   *endif
   
   _a=arg7
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(7)=upcase(_a)
   *endif
   
   _a=arg8
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(8)=upcase(_a)
   *endif
   
   _a=arg9
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(9)=upcase(_a)
   *endif
   
   _a=ar10
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(10)=upcase(_a)
   *endif
   
   _a=ar11
   *get,_i,parm,_a,type
   *if,_i,eq,3,then
      _inp(11)=upcase(_a)
   *endif
   
   _matnum=valchr(_inp(1))

   *dim,_mattb,,10
   *do,_j,2,10
      *if,_inp(_j),eq,'EX  ',then
         *if,mpinqr(_matnum,1,1),gt,0,then
            _mattb(1)=1
         *endif
      *endif
      *if,_inp(_j),eq,'NUXY',then
         *if,mpinqr(_matnum,4,1),gt,0,then
            _mattb(2)=1
         *endif
      *endif
      *if,_inp(_j),eq,'ALPX',then
         *if,mpinqr(_matnum,10,1),gt,0,then
            _mattb(3)=1
         *endif
      *endif
      *if,_inp(_j),eq,'DENS',then
         *if,mpinqr(_matnum,13,1),gt,0,then
            _mattb(4)=1
         *endif
      *endif
      *if,_inp(_j),eq,'KXX ',then
         *if,mpinqr(_matnum,16,1),gt,0,then
            _mattb(5)=1
         *endif
      *endif
      *if,_inp(_j),eq,'C   ',then
         *if,mpinqr(_matnum,22,1),gt,0,then
            _mattb(6)=1
         *endif
      *endif
   *enddo

   ! if no input args, use all
   *if,_matnum,eq,0,then
      _matnum=1
   *endif
   _j=_mattb(1)+_mattb(2)+_mattb(3)+_mattb(4)+_mattb(5)+_mattb(6)
   *if,_j,eq,0,then
      _mattb(1)=mpinqr(_matnum,1,1)
      _mattb(2)=mpinqr(_matnum,4,1)
      _mattb(3)=mpinqr(_matnum,10,1)
      _mattb(4)=mpinqr(_matnum,13,1)
      _mattb(5)=mpinqr(_matnum,16,1)
      _mattb(6)=mpinqr(_matnum,22,1)
   *endif
 
   _tbl = _tbl + 1
   _nn = chrval(%_tbl%)
   *vwrite,_nn,_nn
   ('<a name="htbl',a1,'"><b>Table ',a,'. Material Properties</b></a>')
   /com,<table border=1 cellpadding=4>
   *if,_mattb(1),eq,1,then
      /com,<tr><td align=center><b>Modulus of Elasticity</b></td>
      *do,_i,1,_matnum
        *get,_a,ex,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>
   *endif
   *if,_mattb(4),eq,1,then
      /com,<tr><td align=center><b>Density</b></td>
      *do,_i,1,_matnum
        *get,_a,dens,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>  
   *endif
   *if,_mattb(2),eq,1,then
      /com,<tr><td align=center><b>Poisson's Ratio</b></td>
      *do,_i,1,_matnum
        *get,_a,nuxy,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>
   *endif
   *if,_mattb(3),eq,1,then
      /com,<tr><td align=center><b>Thermal Expansion Coefficient</b></td>
      *do,_i,1,_matnum
        *get,_a,alpx,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>
   *endif
   *if,_mattb(5),eq,1,then
      /com,<tr><td align=center><b>Thermal Conductivity</b></td>
      *do,_i,1,_matnum
        *get,_a,kxx,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>
   *endif
   *if,_mattb(6),eq,1,then
      /com,<tr><td align=center><b>Specific Heat</b></td>
      *do,_i,1,_matnum
        *get,_a,c,_i,temp
        *vwrite,_a
        ('<td align=center>',1pg12.4,'</td>')
      *enddo
      /com,</tr>
   *endif
   /com,<table cellpadding=10 align=right><tr><th>
   /com,<td><a href="#dmdl"> Back to section</a> 
   /com,<td><a href="#top"> Back to top</a></table>
   /com,<br><br>
*endif
_nn=
_a=
_i=
_j=
_matnum=
_inp=
_mattb=
_nummatl=
/EOF


h_agif
!******************************************************************************
/nopr
! *get,_ISINT,active,,int
! *if,_ISINT,eq,0,then
!    *abbr,SCRIPT,'~tcl'
! *else
!    *abbr,SCRIPT,'~eui'
! *endif
_ISINT=
~eui,'global env'
~eui,'global ansysLanguage'
~eui,'set sourceFile [file join $env(EUIDL_DIR) gui $ansysLanguage images ansysnb.gif]'
~eui,'set destDIR [ansys::report::getReportInfo reportDir]'
~eui,'set targetFile [file join [pwd] $destDIR ansysnb.gif]'
~eui,'file copy -force $sourceFile $targetFile'
~eui,'set sourceFile [file join $env(EUIDL_DIR) gui $ansysLanguage images pdslogo.gif]'
~eui,'set targetFile [file join [pwd] $destDIR pdslogo.gif]'
~eui,'file copy -force $sourceFile $targetFile'
/EOF


h_afile
!******************************************************************************
/nopr
/pds
!
! Analysis file Information sections.
~eui,'global env'
~eui,'apdl::noprint 1'
~eui,'set destDIR [ansys::report::getReportInfo reportDir]'
*if,_LNK2ANL,eq,0,then
  ~eui,'set sourceFile [file join [pwd] pdsanl.html]'
  ~eui,'set targetFile [file join [pwd] $destDIR pdsanl.html]'
  ~eui,'file copy -force $sourceFile $targetFile'
  ~eui,'file delete -force $sourceFile'
*endif
*if,_LNK2SOL,eq,0,then
  ~eui,'set sourceFile [file join [pwd] pdsrst.html]'
  ~eui,'set targetFile [file join [pwd] $destDIR pdsrst.html]'
  ~eui,'file copy -force $sourceFile $targetFile'
  ~eui,'file delete -force $sourceFile'
*endif
~eui,'apdl::noprint 0'

*get,_ana1,PDS,0,ANLN,,START,1
*get,_ana2,PDS,0,ANLN,,START,9
*get,_ana3,PDS,0,ANLN,,START,17
*get,_ana4,PDS,0,ANLN,,START,25
*get,_ext,PDS,0,ANLX
/com,<p>
/com,The analysis file containing the deterministic model is stored in 
*vwrite,_ana1,_ana2,_ana3,_ana4,_ext
('<a href="pdsanl.html" target="NewWin0">',a,a,a,a,'.',a,'</a>.')
/com,ANSYS executes or "loops through" multiple times 
/com,during the probabilistic analysis.
/com,</p>
*use,h_analcap
/EOF


h_pmdl
!******************************************************************************
/nopr
!
! Probabilistic Model Information sections.
!
/com,<h2>III. Probabilistic Model Information</h2>
/com,<h3>Random Input Variables</h3>
_rvtab=0
_rvplt=0
*if,_RVAR,eq,0,then
  _rvtab=1
  _rvplt=1
*elseif,_RVAR,eq,1,then
  _rvtab=1
*elseif,_RVAR,eq,2,then
  _rvplt=1
*endif
_nRv=
*get,_nRv,PDS,0,NTRV
_aa1 = chrval(%_nRv%)
/com,<p>
*vwrite,_aa1
('The deterministic model has ',a,' parameters that are regarded as random input variables.')
_aa1=  
*if,_rvtab,gt,0,then
  _aa2 = _tbl + 1
  _aa2 = chrval(%_aa2%)
  /com,A list of these random input variables, the
  *vwrite,_aa2
  ('distribution they are subjected to, and their distribution parameters are provided in Table ',a,'.')
  _aa2=
*else
  /com,A table listing these random input variables, the distribution they 
  /com,are subjected to and their distribution parameters has been suppressed for
  /com,this report.
*endif
*if,_rvplt,gt,0,then
  _aa3 = _fig + 1
  _aa3 = chrval(%_aa3%)
  _aa4 = _fig + 1 + _nRv - 1
  _aa4 = chrval(%_aa4%)
  /com,The probability density functions and cumulative distribution 
  /com,functions are shown in 
  *vwrite,_aa3,_aa4
  ('Figures ',a,' to ',a,'.')
  /com,</p>
  _aa3=
  _aa4=
*else
  /com,<p>
  /com,The plots for probability density functions and cumulative 
  /com,distribution functions of the random input variables were suppressed.
  /com,</p>
*endif

*if,_rvtab,gt,0,then
  _tbl = _tbl + 1
  _nn = chrval(%_tbl%)
   *vwrite,_nn,_nn
  ('<b><a name="htbl',a1,'">Table ',a,'. Random Input Variable Specifications </a></b>')
  _tmp1 = _fig + 1
  /com,<table border=1 cellpadding=4>
  /com,<tr>
  /com,<th>No.</th>
  /com,<th align=left>Name</th>
  /com,<th>Type</th>
  /com,<th> Par1 </th>
  /com,<th> Par2 </th>
  /com,<th> Par3 </th>
  /com,<th> Par4 </th>
  /com,</tr>
  *do,_iRv,1,_nRv
    _a=chrval(_iRv)
    *vwrite,_a
    ('<tr><td align=center>',a,'</td>')
    _tmp2 = chrval(%_tmp1%)
    *get,_name1,PDS,,VNAM,_iRv,STAR,1
    *get,_name2,PDS,,VNAM,_iRv,STAR,9
    *get,_name3,PDS,,VNAM,_iRv,STAR,17
    *get,_name4,PDS,,VNAM,_iRv,STAR,25
    
    *if,_rvplt,gt,0,then
      *vwrite,_tmp2,_name1,_name2,_name3,_name4
      ('<td align=left><a href="#figure',a,'">',a,a,a,a,'</a></td>')
    *else
      *vwrite,_name1,_name2,_name3,_name4
      ('<td align=left>',a,a,a,a,'</td>')
    *endif
    
    *get,_type,PDS,,VDIS,_iRv
    *vwrite,_type
    ('<td align=center>',a,'</td>')
    *get,_par,PDS,,PAR1,_iRv
    *vwrite,_par
    ('<td align=center>',1pg12.5,'</td>')
    *get,_par,PDS,,PAR2,_iRv
    *vwrite,_par
    ('<td align=center>',1pg12.5,'</td>')
    *get,_par,PDS,,PAR3,_iRv
    *if,_par,ne,0.0,then
      *vwrite,_par
      ('<td align=center>',1pg12.5,'</td>')
    *else
      _par='    '
      *vwrite,_par
      ('<td align=center>',a,'</td>')
    *endif
    *get,_par,PDS,,PAR4,_iRv
    *if,_par,ne,0.0,then
      *vwrite,_par
      ('<td align=center>',1pg12.5,'</td>')
    *else
      _par='    '
      *vwrite,_par
      ('<td align=center>',a,'</td>')
    *endif
    _par=
    /com,</tr>
    _tmp1 = _tmp1+1
  *enddo
  _iRv=
  _tmp1=
  _tmp2=
  /com,</table>
*endif

*if,_rvplt,gt,0,then
  *get,_jn1,active,,jobname,,start,1
  *get,_jn2,active,,jobname,,start,9
  *get,_jn3,active,,jobname,,start,17
  *get,_jn4,active,,jobname,,start,25
  *do,_iRv,1,_nRv
    _fig = _fig + 1
    _work1=chrval(%_fig%)
    *if,_fig,ge,1000,then
       *vwrite,_work1
       ('<a name="figure',a4,'">')
    *elseif,_fig,ge,100,then
       *vwrite,_work1
       ('<a name="figure',a3,'">')
    *elseif,_fig,ge,10,then
       *vwrite,_work1
       ('<a name="figure',a2,'">')
    *else
       *vwrite,_work1
       ('<a name="figure',a1,'">')
    *endif
    _name1=
    _name2=
    _name3=
    _name4=
    *get,_name1,PDS,,VNAM,_iRv,STAR,1
    *get,_name2,PDS,,VNAM,_iRv,STAR,9
    *get,_name3,PDS,,VNAM,_iRv,STAR,17
    *get,_name4,PDS,,VNAM,_iRv,STAR,25
    /com,<p>
    /com,<table border=1 cellpadding=4>
    /com,<tr><th>
    *vwrite,_fig,_name1,_name2,_name3,_name4
    ('Figure',f6.0,' PDF & CDF of Input Random Variable ',a,a,a,a)
    /com,</th></tr>
    /com,<tr><td align=center>
    !
    ! issue random variable plot
    pdplot,%_name1%%_name2%%_name3%%_name4%
    *use,h_imgcap
    /com,</td></tr>
    /com,</table>
  *enddo
  _type=
  _work1=
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _name1=
  _name2=
  _name3=
  _name4=
*endif
!
! Defined CORRELATIONS
*get,_ncor,PDS,,NCOR
/com,<h4>Correlations</h4>
*if,_ncor,gt,0,then
  _aa1 = chrval(%_ncor%)
  /com,<p>
  *if,_ncor,eq,1,then
    *vwrite,_aa1
    (a,' pair of correlations defined between the random input variables.')
  *else
    *vwrite,_aa1
    (a,' pairs of correlations defined between the random input variables.')
  *endif
  /com,</p>
  _aa1=
  *if,_CORR,eq,0,then
    _aa2 = _tbl + 1
    _aa2 = chrval(%_aa2%)
    /com,<p>
    *vwrite,_aa2
    ('A list of the correlated random input variables and the respective correlation coefficient is given in Table ',a,'.')
    /com,</p>
    _aa2=
    _tbl = _tbl + 1
    _nn = chrval(%_tbl%)
    *vwrite,_nn,_nn
    ('<b><a name="htbl',a1,'">Table ',a,'. Correlation Coefficient Definition </a></b><br>')
    /com,<table border=1 cellpadding=4>
    /com,<tr> <th>Name 1 <th>Name 2 <th>Correlation Coefficient </th></tr>
    *do,_iRv1,1,_nRv
      *do,_iRv2,_iRv1,_nRv
        *if,_iRv1,ne,_iRv2,then
          *get,_corcoef,PDS,0,CORR,_iRv1,,_iRv2
          *if,_corcoef,ne,0.0,then
            _name1=
            _name2=
            _name3=
            _name4=
            *get,_name1,PDS,,VNAM,_iRv1,STAR,1
            *get,_name2,PDS,,VNAM,_iRv1,STAR,9
            *get,_name3,PDS,,VNAM,_iRv1,STAR,17
            *get,_name4,PDS,,VNAM,_iRv1,STAR,25
            *vwrite,_name1,_name2,_name3,_name4
            ('<td align=center>',a,a,a,a,'</td>')
            _name1=
            _name2=
            _name3=
            _name4=
            *get,_name1,PDS,,VNAM,_iRv2,STAR,1
            *get,_name2,PDS,,VNAM,_iRv2,STAR,9
            *get,_name3,PDS,,VNAM,_iRv2,STAR,17
            *get,_name4,PDS,,VNAM,_iRv2,STAR,25
            *vwrite,_name1,_name2,_name3,_name4
            ('<td align=center>',a,a,a,a,'</td>')
            *vwrite,_corcoef
            ('<td align=center>',1pg12.5,'</td></tr>')
          *endif
        *endif
      *enddo
    *enddo
    _iRv1=
    _iRv2=
    _name1=
    _name2=
    _name3=
    _name4=
    _corcoef=
    /com,</table>
    !
    /com,<table cellpadding=10 align=right><th>
    /com,<td><a href="#pmdl"> Back to section</a> 
    /com,<td><a href="#top"> Back to top</a></table>
    /com,<br><br><br>
  *else
    /com,<p>
    /com,A table listing the correlated random input variables 
    /com,and the respective correlation coefficients has been suppressed 
    /com,for this report.
    /com,</p>
    /com,<br>
  *endif
  _aa1=
  _aa2=
  _nn=
  _nRv=
  _ncor=
*else
  /com,<p>
  /com,There are no correlations defined 
  /com,between the random input variables.
  /com,</p>
*endif
_rvtab=
_rvptl=
/EOF


h_panl
!******************************************************************************
/nopr
!
! probabilistic analysis specification.
/com,<h2>IV. Probabilistic Analysis Summary</h2>
*get,_nsol,PDS,0,NSOL
*if,_nsol,gt,0,then
  /com,<p>
  _aa1 = chrval(%_nsol%)
  *if,_nsol,gt,1,then
    *vwrite,_aa1
    ('ANSYS performed ',a2,' probabilistic analyses.') 
  *else
    *vwrite
    ('One probabilistic analysis has been performed.')
  *endif
  /com,The results of each probabilistic analysis are stored in a 
  /com,separate <i>solution set</i> indicated with a <i>solution label</i>.  
  /com,A summary of the individual solution sets is given in the table below.
  /com,</p>
  _aa1=
  *do,_isol,1,_nsol
    _slab1=
    _slab2=
    _slab3=
    _slab4=
    *get,_slab1,PDS,_isol,RLAB,,STAR,1
    *get,_slab2,PDS,_isol,RLAB,,STAR,9
    *get,_slab3,PDS,_isol,RLAB,,STAR,17
    *get,_slab4,PDS,_isol,RLAB,,STAR,25
    _nn = chrval(_isol)
    *vwrite,_nn,_slab1,_slab2,_slab3,_slab4
    ('<h3>',a,') Solution Set ',a,a,a,a,'</h3>')
    _meth=
    *get,_meth,PDS,_isol,METH
    *if,_meth,eq,'MCS',then
      _tbl = _tbl + 1    
      _nn = chrval(%_tbl%)
        *vwrite,_nn
        ('<b>Table ',a,'. Specifications for Monte Carlo Simulation Analysis</b><br>')
      ! write out table with analysis specifications
      /com,<table border=1 cellpadding=4>
      /com,<tr> <th>Solution Label<th>Sampling Method<th>No. Samples
      /com,<th>Initl. Seed <th>Auto Stop
      *get,_par1,PDS,_isol,ASTP,1
      *if,_par1,gt,0,then
        /com,<th>Accuracy of Mean<th>Accuracy of Std. Dev.<th>Check Period</tr>
      *else
        /com,</tr>
      *endif
      /com,<tr>
      /com,<td align=center>
      *vwrite,_slab1,_slab2,_slab3,_slab4,_slab1,_slab2,_slab3,_slab4
      ('<a href="pdsrst.html#pdsrst.html#',a,a,a,a,'" target="NewWin0">',a,a,a,a,'</a>')
      /com,</td>
      *get,_samp,PDS,_isol,SAMP
      *vwrite,_samp
      ('<td align=center>',a,'</td>')
      _samp=
      *get,_nsim,PDS,_isol,NSIM
      _nn = chrval(%_nsim%)
      _nsim=
      *vwrite,_nn
      ('<td align=center>',a,'</td>')
      *get,_iseed,PDS,_isol,SEED
      _nn = chrval(%_iseed%)
      *vwrite,_nn
      ('<td align=center>',a,'</td>')
      *get,_par1,PDS,_isol,ASTP,1
      *if,_par1,eq,0,then
        _par = 'OFF'
        *vwrite,_par
        ('<td align=center>',a,'</td></tr>')
      *else
        _par = 'ON'
        *vwrite,_par
        ('<td align=center>',a,'</td>')
        *get,_par,PDS,_isol,ASTP,2
        *vwrite,_par
        ('<tr><td align=center>',1pg12.5,'</td>')
        *get,_par,PDS,_isol,ASTP,3
        *vwrite,_par
        ('<td align=center>',1pg12.5,'</td>')
        *get,_par,PDS,_isol,ASTP,4
        _nn = chrval(%_par%)
        *vwrite,_nn
        ('<td align=center>',a,'</td>')
        /com,</tr>
      *endif
      /com,</table>
      _par1=
      _par=
    *elseif,_meth,eq,'RSM',then
      _tbl = _tbl + 1    
      _nn = chrval(%_tbl%)
      *vwrite,_nn
      ('<b>Table ',a,'. Specifications for Response Surface Method Analysis</b><br>')
      /com,<table border=1 cellpadding=4>
      /com,<tr> <th>Solution Label<th>Design Method<th>No. Samples
      /com,<tr>
      /com,<td align=center>
      *vwrite,_slab1,_slab2,_slab3,_slab4,_slab1,_slab2,_slab3,_slab4
      ('<a href="pdsrst.html#pdsrst.html#',a,a,a,a,'" target="NewWin0">',a,a,a,a,'</a>')
      /com,</td>
      *get,_samp,PDS,_isol,SAMP
      *vwrite,_samp
      ('<td align=center>',a,'</td>')
      *get,_nsim,PDS,_isol,NSIM
      _nn = chrval(%_nsim%)
      _nsim=
      *vwrite,_nn
      ('<td align=center>',a,'</td>')
      /com,</tr>
      /com,</table>

      /com,<br>
      _tbl = _tbl + 1    
      _nn = chrval(%_tbl%)
      *vwrite,_nn
      ('<b>Table ',a,'. Specifications for the Design of Experiment Levels</b><br>')
      /com,<table border=1 cellpadding=4>
      /com,<tr>
      *if,_samp,eq,'CCD ',then
        /com,<th>Name<th>Value Type<th>Level Option
        /com,<th>Level 1<th>Level 2<th>Level 3<th>Level 4<th>Level 5</tr>
      *elseif,_samp,eq,'BBM ',then
        /com,<th>Name<th>Value Type<th>Level Option
        /com,<th>Level 1<th>Level 2<th>Level 3</tr>
      *elseif,_samp,eq,'USER',then
        /com,<th>Name<th>Level 1<th>Level 2<th>...</tr>
      *endif
      /com,</tr>

      *get,_nRv,PDS,,NTRV
      !
      ! CENTRAL COMPOSITE DESIGN
      ! ========================
      *if,_samp,eq,'CCD ',then
        _default = 0
        *do,_iRv,1,_nRv
          /com,<tr>
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,VNAM,_iRv,STAR,1
          *get,_name2,PDS,,VNAM,_iRv,STAR,9
          *get,_name3,PDS,,VNAM,_iRv,STAR,17
          *get,_name4,PDS,,VNAM,_iRv,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          *get,_vtyp,PDS,_isol,CCDL,_iRv,VTYP
          *vwrite,_vtyp
          ('<td align=center>',a,'</td>')
          *get,_lopt,PDS,_isol,CCDL,_iRv,LOPT
          *vwrite,_lopt
          ('<td align=center>',a,'</td>')
          !
          ! write out level 1
          ! -----------------
          *get,_ldef,PDS,_isol,CCDL,_iRv,LDEF,1
          *get,_lval,PDS,_isol,CCDL,_iRv,LVAL,1
          *if,_ldef,eq,0,then
            _default = 1
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'% *</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,' *</td>')
            *endif
          *elseif,_ldef,eq,1,then
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'%</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,'</td>')
            *endif
          *endif
          !
          ! write out levels 2 to 4
          ! -----------------------
          !
          ! if we have the levels defined by lower and upper bound only
          *if,_lopt,eq,'BND ',then
            /com,<td align=left>set on runtime</td>
            /com,<td align=left>set on runtime</td>
            /com,<td align=left>set on runtime</td>
          !
          ! if we have the all levels defined by user
          *elseif,_lopt,eq,'ALL ',then
            *do,_iLvl,2,4
              *get,_ldef,PDS,_isol,CCDL,_iRv,LDEF,_iLvl
              *get,_lval,PDS,_isol,CCDL,_iRv,LVAL,_iLvl
              *if,_ldef,eq,0,then
                _default = 1
                !
                ! if the level is defined by probability
                *if,_vtyp,eq,'PROB',then
                  *vwrite,100.0*_lval
                  ('<td align=left>',f6.3,'% *</td>')
                !
                ! if the level is defined as a physical quantity
                *elseif,_vtyp,eq,'PHYS',then
                  *vwrite,_lval
                  ('<td align=left>',1pg12.5,' *</td>')
                *endif
              *elseif,_ldef,eq,1,then
                !
                ! if the level is defined by probability
                *if,_vtyp,eq,'PROB',then
                  *vwrite,100.0*_lval
                  ('<td align=left>',f6.3,'%</td>')
                !
                ! if the level is defined as a physical quantity
                *elseif,_vtyp,eq,'PHYS',then
                  *vwrite,_lval
                  ('<td align=left>',1pg12.5,'</td>')
                *endif
              *endif
            *enddo
          *endif
          !
          ! write out level 5
          ! -----------------
          *get,_ldef,PDS,_isol,CCDL,_iRv,LDEF,5
          *get,_lval,PDS,_isol,CCDL,_iRv,LVAL,5
          *if,_ldef,eq,0,then
            _default = 1
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'% *</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,' *</td>')
            *endif
          *elseif,_ldef,eq,1,then
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'%</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,'</td>')
            *endif
          *endif
          /com,</tr>
        *enddo
      !
      ! BOX-BEHNKEN DESIGN
      ! ==================
      *elseif,_samp,eq,'BBM ',then
        _default = 0
        *do,_iRv,1,_nRv
          /com,<tr>
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,VNAM,_iRv,STAR,1
          *get,_name2,PDS,,VNAM,_iRv,STAR,9
          *get,_name3,PDS,,VNAM,_iRv,STAR,17
          *get,_name4,PDS,,VNAM,_iRv,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          *get,_vtyp,PDS,_isol,BBML,_iRv,VTYP
          *vwrite,_vtyp
          ('<td align=center>',a,'</td>')
          *get,_lopt,PDS,_isol,BBML,_iRv,LOPT
          *vwrite,_lopt
          ('<td align=center>',a,'</td>')
          !
          ! write out level 1
          ! -----------------
          *get,_ldef,PDS,_isol,BBML,_iRv,LDEF,1
          *get,_lval,PDS,_isol,BBML,_iRv,LVAL,1
          *if,_ldef,eq,0,then
            _default = 1
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'% *</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,' *</td>')
            *endif
          *elseif,_ldef,eq,1,then
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'%</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,'</td>')
            *endif
          *endif
          !
          ! write out levels 2
          ! ------------------
          !
          ! if we have the levels defined by lower and upper bound only
          *if,_lopt,eq,'BND ',then
            /com,<td align=left>set on runtime</td>
          !
          ! if we have the all levels defined by user
          *elseif,_lopt,eq,'ALL ',then
            *get,_ldef,PDS,_isol,BBML,_iRv,LDEF,2
            *get,_lval,PDS,_isol,BBML,_iRv,LVAL,2
            *if,_ldef,eq,0,then
              _default = 1
              !
              ! if the level is defined by probability
              *if,_vtyp,eq,'PROB',then
                *vwrite,100.0*_lval
                ('<td align=left>',f6.3,'% *</td>')
              !
              ! if the level is defined as a physical quantity
              *elseif,_vtyp,eq,'PHYS',then
                *vwrite,_lval
                ('<td align=left>',1pg12.5,' *</td>')
              *endif
            *elseif,_ldef,eq,1,then
              !
              ! if the level is defined by probability
              *if,_vtyp,eq,'PROB',then
                *vwrite,100.0*_lval
                ('<td align=left>',f6.3,'%</td>')
              !
              ! if the level is defined as a physical quantity
              *elseif,_vtyp,eq,'PHYS',then
                *vwrite,_lval
                ('<td align=left>',1pg12.5,'</td>')
              *endif
            *endif
          *endif
          !
          ! write out level 3
          ! -----------------
          *get,_ldef,PDS,_isol,BBML,_iRv,LDEF,3
          *get,_lval,PDS,_isol,BBML,_iRv,LVAL,3
          *if,_ldef,eq,0,then
            _default = 1
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'% *</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,' *</td>')
            *endif
          *elseif,_ldef,eq,1,then
            !
            ! if the level is defined by probability
            *if,_vtyp,eq,'PROB',then
              *vwrite,100.0*_lval
              ('<td align=left>',f6.3,'%</td>')
            !
            ! if the level is defined as a physical quantity
            *elseif,_vtyp,eq,'PHYS',then
              *vwrite,_lval
              ('<td align=left>',1pg12.5,'</td>')
            *endif
          *endif
          /com,</tr>
        *enddo
      !
      ! USER-DEFINED DESIGN
      ! ===================
      *elseif,_samp,eq,'USER',then
        *do,_iRv,1,_nRv
          /com,<tr>
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,VNAM,_iRv,STAR,1
          *get,_name2,PDS,,VNAM,_iRv,STAR,9
          *get,_name3,PDS,,VNAM,_iRv,STAR,17
          *get,_name4,PDS,,VNAM,_iRv,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          /com,<td>N.A.</td>
          /com,<td>N.A.</td>
          /com,<td>N.A.</td>
          /com,</tr>
        *enddo
      *endif
      /com,</table>
	!
	! if the default flag has been set then we need to explain what the '*' is for
      *if,_default,eq,1,then
        /com,<p>
        /com,Note: The * indicates that the values was not specified by the user, 
        /com,but is a default value.
        /com,</p>
      *endif
    *endif
    _samp=
    _slab1=
    _slab2=
    _slab3=
    _slab4=
    _name1=
    _name2=
    _name3=
    _name4=
    _vtyp=
    _lopt=
    _ldef=
    _lval=
    _default=
    !
    ! capture the corresponding results file with index "_isol" into a listing for HTML
    *use,h_restcap
  *enddo
  _isol=
  _nsol=
  _nn=
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#panl"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br>
*else
   /com,<p>No probabilistic analysis has been performed.</p>
*endif
/com,<br><br>
/EOF


h_rsan
!******************************************************************************
/nopr
!
! response surface analysis specification.
/com,<h2>V. Regression Analysis Summary</h2>
*get,_nsol,PDS,0,NSOL
*get,_nrss,PDS,0,NRSS
*if,_nrss,gt,0,then
  /com,<p>
  _aa1 = chrval(%_nrss%)
  *if,_nrss,eq,1,then
    *vwrite,_aa1
    ('This analysis generated ',a2,' response surface set.') 
  *else
    *vwrite,_aa1
    ('This analysis generated  ',a2,' response surface sets.') 
  *endif
  /com,A response surface is an approximation describing a random ouput parameter
  /com,as an explicit function of random input variables. Multiple response
  /com,surfaces associated with the same solution set are combined into
  /com,a <I>response surface set</I>. Each response surface set is identified
  /com,by a <I>response surface set label</I>.
  /com,</p>
  /com,<p>
  /com,Several goodness-of-fit measures are provided for each random output 
  /com,parameter in each response surface set. These are shown in the following
  /com,table(s). Use the following recommendations as general guidelines:
  /com,</p>
  /com,<p>
  /com,<UL><LI>
  /com,Error Sum of Squares:<br>
  /com,The error sum of squares is the sum of the squared residuals of
  /com,response surface approximation. The residuals are the differences
  /com,difference between the approximated and predicted values
  /com,of an output parameter according to the response surface model and
  /com,the actual sampled values of the output parameter, which the response
  /com,surface is supposed to fit. The regression analysis to fit the
  /com,response surface tries to minimize the error sum of squares. Therefore,
  /com,this value should be as close as possible to 0.0.
  /com,However, the error sum of squares is highly problem dependent and no
  /com,general rule of accepting or rejecting a particular value can be given.
  /com,</LI></UL>
  /com,</p>
  /com,<p>
  /com,<UL><LI>
  /com,Coefficient of Determination:<br>
  /com,The coefficient of (multiple) determination measures how much of the
  /com,variablility of the random output parameter is in fact explained
  /com,by the response surface model. Ideally, the response surface model
  /com,should explain all of the variablity of the random output parameter.
  /com,Hence, it is considered as very good, if the coefficient of 
  /com,determination is between 0.95 and 1.0 and it is considered
  /com,acceptable, if it is between 0.90 and 0.95.
  /com,For this test, it is recommended to always use the "adjusted" 
  /com,coefficient of determiniation, because for the adjusted coefficient 
  /com,of determination obtained if the forward-stepwise-regression has been
  /com,used, can be compared with a situation where this filtering mechanism
  /com,has not been used.
  /com,</LI></UL>
  /com,</p>
  /com,<p>
  /com,<UL><LI>
  /com,Maximum Relative Residual:<br>
  /com,The maximum relative residual
  /com,measures the difference between the approximated and predicted values
  /com,of an output parameter according to the response surface and the 
  /com,actual sampled values of the output parameter, which the response
  /com,surface is supposed to fit. The maximum relative residual measures
  /com,the difference relative to the sampled value.
  /com,It is considered as very good, if the maximum relative residual is
  /com,between 0.0% and 0.1% of the sampled value and acceptable, if it is
  /com,between 0.1% and 0.5% of the sampled value.
  /com,</LI></UL>
  /com,</p>
  /com,<p>
  /com,<UL><LI>
  /com,Constant Variance Test:<br>
  /com,The t-statistic measures whether 
  /com,the variance of the error terms in the response surface model 
  /com,is constant, i.e. not a function of either a random input 
  /com,variable nor of the random output parameter that is fitted.
  /com,The t-statistic should be as close as possible to 0.0.
  /com,An acceptance of the constance variance test is measure in terms
  /com,of the corresponding probability, i.e. the probability that the
  /com,is in fact constant. The probability of constant variable should
  /com,as large as possible. 
  /com,Hence, it is considered as very good, if this probability
  /com,is above 10% and it is acceptable, if it is between
  /com,1% and 10%.
  /com,</LI></UL>
  /com,</p>
  /com,<p>
  /com,These are generalizations; you should base your evaluation on 
  /com,the specific problem being analyzed and your engineering knowledge.
  /com,</p>
  _aa1=
  *do,_irss,1,_nrss
    _ires = _nsol+_irss
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
    *get,_rlab1,PDS,_ires,RLAB,,STAR,1
    *get,_rlab2,PDS,_ires,RLAB,,STAR,9
    *get,_rlab3,PDS,_ires,RLAB,,STAR,17
    *get,_rlab4,PDS,_ires,RLAB,,STAR,25
    _nn = chrval(_irss)
    *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
    ('<h3>',a,') Response Surface Set ',a,a,a,a,'</h3>')
    ! dig out the index of the solution set associated with the response surface set
    *get,_isol,PDS,_ires,RSST,,XSOL
    _slab1=
    _slab2=
    _slab3=
    _slab4=
    *get,_slab1,PDS,_isol,RLAB,,STAR,1
    *get,_slab2,PDS,_isol,RLAB,,STAR,9
    *get,_slab3,PDS,_isol,RLAB,,STAR,17
    *get,_slab4,PDS,_isol,RLAB,,STAR,25
    /com,<p>
    *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
    ('The response surface set ',a,a,a,a)
    *vwrite,_slab1,_slab2,_slab3,_slab4,_slab1,_slab2,_slab3,_slab4
    ('is based on the solution set ','<a href="pdsrst.html#pdsrst.html#',a,a,a,a,'" target="NewWin0">',a,a,a,a,'</a>','.')
    _meth=
    *get,_meth,PDS,_isol,METH
    *if,_meth,eq,'MCS',then
      *vwrite,_slab1,_slab2,_slab3,_slab4,_slab1,_slab2,_slab3,_slab4,
      ('The samples in the solution set ','<a href="pdsrst.html#pdsrst.html#',a,a,a,a,'" target="NewWin0">',a,a,a,a,'</a>')
      /com,were generated with the Monte Carlo Simulation Method.
    *else,_meth,eq,'RSM',then
      *vwrite,_slab1,_slab2,_slab3,_slab4,_slab1,_slab2,_slab3,_slab4,
      ('The samples in the solution set ','<a href="pdsrst.html#pdsrst.html#',a,a,a,a,'" target="NewWin0">',a,a,a,a,'</a>')
      /com,were generated with the Response Surface Method.
    /com,</p>
    *endif
    ! dig out the number of output parameters that have been fitted in this response surface set
    *get,_nfrp,PDS,_ires,RSST,,NFRP
    ! loop with respect to all fitted random output parameters
    *do,_ifrp,1,_nfrp
      !
      ! get the index of the fitted random output parameter
      *get,_iRp,PDS,_ires,RSUR,_ifrp,XFRP
      *get,_name1,PDS,,RNAM,_iRp,STAR,1
      *get,_name2,PDS,,RNAM,_iRp,STAR,9
      *get,_name3,PDS,,RNAM,_iRp,STAR,17
      *get,_name4,PDS,,RNAM,_iRp,STAR,25
      *vwrite,_name1,_name2,_name3,_name4
      ('<h3>Regression results for random output parameter ',a,a,a,a,':</h3>')
      !
      ! get the regression model of the fitted random output parameter
      *get,_rmod,PDS,_ires,RSUR,_ifrp,RMOD
      /com,<p>
      *if,_rmod,eq,'LIN',then
        *vwrite,_name1,_name2,_name3,_name4
        ('The random output parameter ',a,a,a,a,' was fitted with a linear regression model. ')
      *elseif,_rmod,eq,'QUAD',then
        *vwrite,_name1,_name2,_name3,_name4
        ('The random output parameter ',a,a,a,a,' was fitted with a quadratic regression model ')
        /com,without cross-terms.
      *elseif,_rmod,eq,'QUAX',then
        *vwrite,_name1,_name2,_name3,_name4
        ('The random output parameter ',a,a,a,a,' was fitted with a quadratic regression model ')
        /com,including cross-terms.
      *endif
      !
      ! get the transformation type of the fitted random output parameter
      *get,_ytrt,PDS,_ires,RSUR,_ifrp,YTRT
      *if,_ytrt,eq,'NONE',then
        /com,No transformation was used for the regression analysis.
      *elseif,_ytrt,eq,'EXP',then
        /com,An exponential transformation has been used for the regression analysis.
      *elseif,_ytrt,eq,'LOGA',then
        !
        ! get the transformation value of the fitted random output parameter
        *get,_ytrv,PDS,_ires,RSUR,_ifrp,YTRV
        *vwrite,_ytrv
        ('A logarithmic transformation with a base of ',E11.4,' has been used for the regression analysis. ')
      *elseif,_ytrt,eq,'LOGN',then
        /com,A logarithmic transformation based on the natural logarithm has been used
        /com,for the regression analysis.
      *elseif,_ytrt,eq,'LOG10',then
        /com,A logarithmic transformation with base 10 has been used
        /com,for the regression analysis.
      *elseif,_ytrt,eq,'SQRT',then
        /com,A square transformation has been used for the regression analysis.
      *elseif,_ytrt,eq,'POW',then
        !
        ! get the transformation value of the fitted random output parameter
        *get,_ytrv,PDS,_ires,RSUR,_ifrp,YTRV
        *vwrite,_ytrv
        ('A power transformation with the exponent ',E11.4,' has been used for the regression analysis. ')
      *elseif,_ytrt,eq,'BOX',then
        !
        ! get the transformation value of the fitted random output parameter
        *get,_ylamb,PDS,_ires,RSEQ,_ifrp,YBOX
        *vwrite,_ylamb
        ('A Box-Cox transformation has been used for the regression analysis with a resulting lambda value of ',E11.4,' . ')
        _ylamb=
      *endif
      !
      ! get the filtering option for the fitted random output parameter
      *get,_xfil,PDS,_ires,RSUR,_ifrp,FILT
      *if,_xfil,eq,'NONE',then
        *vwrite,_name1,_name2,_name3,_name4
        ('No filtering technique was used to fit the random output parameter ',a,a,a,a, '. ')
      *else
        *vwrite,_name1,_name2,_name3,_name4
        ('The "Forward-Stepwise-Regression" filtering technique was used  to fit the random output parameter ',a,a,a,a, '. ')
        *get,_xfilconf,PDS,_ires,RSUR,_ifrp,CONF
        *vwrite,_xfilconf*100.0
        ('A confidence level of ',F6.3,'% was used to filter out insignificant terms of the regression equation.')
        _xfilconf=
      *endif
      _xfil=
      *get,_nterm,PDS,_ires,RSEQ,_ifrp,NTRM
      _nn = chrval(_nterm)
      *vwrite,_nn
      ('As a result, the regression model includes ',a,' terms.')
      /com,</p>
      /com,<p>
      /com,To evaluate the response surface the random input variables have been scaled 
      /com,with a linear transformation. The scaled random input variables are indicated
      /com,with an ending "_scaled" below. The scaling parameters of this linear 
      /com,transformation are listed below.
      /com,</p>
      /com,<table border=0 cellpadding=2>
      *get,_nRv,PDS,,NTRV
      *do,_iRv1,1,_nRv
        /com,<tr>
        *get,_slop,PDS,_ires,RSEQ,_ifrp,SLOP,_iRv1
        *get,_icpt,PDS,_ires,RSEQ,_ifrp,ICPT,_iRv1
        *get,_name11,PDS,,VNAM,_iRv1,STAR,1
        *get,_name12,PDS,,VNAM,_iRv1,STAR,9
        *get,_name13,PDS,,VNAM,_iRv1,STAR,17
        *get,_name14,PDS,,VNAM,_iRv1,STAR,25
        *vwrite,_name11,_name12,_name13,_name14
        ('<td align=left>  ',a,a,a,a,'_scaled</td>')
        /com,<td> = </td>
        *vwrite,_slop,_name11,_name12,_name13,_name14
        ('<td align=left>  ',E14.7,'*',a,a,a,a,'</td>')
        *if,_icpt,lt,0,then
          /com,<td align=center> - </td>
        *else
          /com,<td align=center> + </td>
        *endif
        _icpt = abs(_icpt)
        *vwrite,_icpt
        ('<td align=left>',E14.7,'</td>')
        /com,</tr>
      *enddo
      /com,</table>
      /com,<br>
      !
      ! report the regression equation
      ! ==============================
      /com,<p>
      /com,The response surface is fitted with the scaled random input variables.
      /com,This means the response surface is expressed in terms of the scaled random 
      /com,input variables. The response surface is the sum of the regression terms,
      /com,where each regression term includes a regression coeffcient.
      /com,The regression coefficients of the response surface are
      /com,given in the table below.
      /com,</p>
      /com,<table border=0 cellpadding=2>
      *do,_iterm,1,_nterm
        /com,<tr>
        *if,_ytrt,eq,'NONE',then
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=left>  ',a,a,a,a,'</td>')
        *else
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=left>  ',a,a,a,a,'_trans</td>')
        *endif
        /com,<td> = </td>
        *get,_coef,PDS,_ires,RSEQ,_ifrp,COEF,_iterm
        *get,_ttyp,PDS,_ires,RSEQ,_ifrp,TTYP,_iterm
        /com,<td>
        *if,_ttyp,ne,1,then
	    *if,_ytrt,eq,'NONE',then
            *vwrite,_name1,_name2,_name3,_name4
            (a,a,a,a)
          *else
            *vwrite,_name1,_name2,_name3,_name4
            (a,a,a,a,'_trans')
          *endif
          *if,_coef,lt,0.0,then
            /com,&nbsp;-&nbsp; 
          *else
            /com,&nbsp;+&nbsp;
          *endif
        *endif
        *if,_ttyp,eq,1,then
          *vwrite,_coef
          (E14.7)
        *elseif,_ttyp,eq,2,then
          _coef = abs(_coef)
          *vwrite,_coef
          (E14.7,' * ')
          !
          ! get input variable name
          *get,_iRv1,PDS,_ires,RSEQ,_ifrp,XRV1,_iterm
          *get,_name11,PDS,,VNAM,_iRv1,STAR,1
          *get,_name12,PDS,,VNAM,_iRv1,STAR,9
          *get,_name13,PDS,,VNAM,_iRv1,STAR,17
          *get,_name14,PDS,,VNAM,_iRv1,STAR,25
          *vwrite,_name11,_name12,_name13,_name14
          (a,a,a,a,'_scaled')
        *elseif,_ttyp,eq,3,then
          _coef = abs(_coef)
          *vwrite,_coef
          (E14.7,' * ')
          !
          ! get input variable name
          *get,_iRv1,PDS,_ires,RSEQ,_ifrp,XRV1,_iterm
          *get,_name11,PDS,,VNAM,_iRv1,STAR,1
          *get,_name12,PDS,,VNAM,_iRv1,STAR,9
          *get,_name13,PDS,,VNAM,_iRv1,STAR,17
          *get,_name14,PDS,,VNAM,_iRv1,STAR,25
          *vwrite,_name11,_name12,_name13,_name14,_name11,_name12,_name13,_name14
          (a,a,a,a,'_scaled * ',a,a,a,a,'_scaled')
        *else
          _coef = abs(_coef)
          *vwrite,_coef
          (E14.7,' * ')
          !
          ! get first input variable name
          *get,_iRv1,PDS,_ires,RSEQ,_ifrp,XRV1,_iterm
          *get,_name11,PDS,,VNAM,_iRv1,STAR,1
          *get,_name12,PDS,,VNAM,_iRv1,STAR,9
          *get,_name13,PDS,,VNAM,_iRv1,STAR,17
          *get,_name14,PDS,,VNAM,_iRv1,STAR,25
          !
          ! get second input variable name
          *get,_iRv2,PDS,_ires,RSEQ,_ifrp,XRV2,_iterm
          *get,_name21,PDS,,VNAM,_iRv2,STAR,1
          *get,_name22,PDS,,VNAM,_iRv2,STAR,9
          *get,_name23,PDS,,VNAM,_iRv2,STAR,17
          *get,_name24,PDS,,VNAM,_iRv2,STAR,25
          *vwrite,_name11,_name12,_name13,_name14,_name21,_name22,_name23,_name24
          (a,a,a,a,'_scaled * ',a,a,a,a,'_scaled')
        *endif
        /com,</td>
        /com,</tr>
      *enddo
      /com,</table>
      /com,<br>
      !
      ! report the back transformation of the output parameter if necessary
      ! ===================================================================
      *if,_ytrt,ne,'NONE',then
        /com,<p>
        /com,A transformation has been used to fit the values of the
        *vwrite,_name1,_name2,_name3,_name4
        ('output parameter ',a,a,a,a,'.')
        /com,Hence a "back-transformation" is necessary to obtain the values for
        *vwrite,_name1,_name2,_name3,_name4
        (a,a,a,a)
        /com,from the values of
        *vwrite,_name1,_name2,_name3,_name4
        (a,a,a,a,'_trans.')
        /com,This back-transformation is given as follows:
        /com,</p>
        /com,<table border=0 cellpadding=2>
        /com,<tr>
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=left>  ',a,a,a,a,'</td>')
        /com,<td> = </td>
        *if,_ytrt,eq,'EXP',then
	    *vwrite,_name1,_name2,_name3,_name4
          ('<td align=left>LN(',a,a,a,a,'_trans )</td>')
        *elseif,_ytrt,eq,'LOGA',then
          !
          ! get the transformation value of the fitted random output parameter
          *get,_ytrv,PDS,_ires,RSUR,_ifrp,YTRV
	    *vwrite,_name1,_name2,_name3,_name4,_ytrv
          ('<td align=left>a**',a,a,a,a,'_trans   with  a =',E11.4,'</td>')
        *elseif,_ytrt,eq,'LOGN',then
	    *vwrite,_name1,_name2,_name3,_name4
          ('<td align=left>EXP( ',a,a,a,a,'_trans )</td>')
        *elseif,_ytrt,eq,'LOG10',then
	    *vwrite,_name1,_name2,_name3,_name4,
          ('<td align=left>10**',a,a,a,a,'_trans</td>')
        *elseif,_ytrt,eq,'SQRT',then
	    *vwrite,_name1,_name2,_name3,_name4,_name1,_name2,_name3,_name4,
          ('<td align=left>',a,a,a,a,'_trans * ',a,a,a,a,'_trans'</td>')
        *elseif,_ytrt,eq,'POW',then
          !
          ! get the transformation value of the fitted random output parameter
          *get,_ytrv,PDS,_ires,RSUR,_ifrp,YTRV
	    *vwrite,_name1,_name2,_name3,_name4,_ytrv
          ('<td align=left>EXP( LN( ',a,a,a,a,'_trans )/',E11.4,' )</td>')
        *elseif,_ytrt,eq,'BOX',then
          !
          ! get the transformation value of the fitted random output parameter
          *get,_ylamb,PDS,_ires,RSEQ,_ifrp,YBOX
          _ylambabs = abs(_ylamb)
          *if,_ylambabs,lt,1.0e-6,then
            *vwrite,_name1,_name2,_name3,_name4
            ('<td align=left>EXP( ',a,a,a,a,'_trans )    because lambda is close to zero</td>')
          *else
            _recip = 1.0/_ylamb
            *vwrite,_ylamb,_name1,_name2,_name3,_name4,_recip
            ('<td align=left>(',E11.4,'*',a,a,a,a,'_trans - 1.0 )**',E11.4,'</td>')
            _recip =
          *endif
          _ylamb=
          _ylambabs=
        *endif
        /com,</tr>
        /com,</table>
        /com,<br>
      *endif
      _nRv =
      _term =
      _icpt =
      _slop =
      _ttyp=
      _coef=
      _iRv1=
      _iRv2=
      _name11=
      _name12=
      _name13=
      _name14=
      _name21=
      _name22=
      _name23=
      _name24=
      !
      ! report on the goodness-of-fit parameters
      ! ========================================
      *get,_sse,PDS,_ires,RSAC,_ifrp,SSE
      *get,_sseadj,PDS,_ires,RSAC,_ifrp,SSEA
      *get,_r2,PDS,_ires,RSAC,_ifrp,R2
      *get,_r2adj,PDS,_ires,RSAC,_ifrp,R2A
      *get,_rsabs,PDS,_ires,RSAC,_ifrp,RSAB
      *get,_rsrel,PDS,_ires,RSAC,_ifrp,RSRL
      *get,_rsrel,PDS,_ires,RSAC,_ifrp,RSRL
      *get,_cvstat,PDS,_ires,RSAC,_ifrp,CVST
      *get,_cvprob,PDS,_ires,RSAC,_ifrp,CVPR
      *get,_cvmidx,PDS,_ires,RSAC,_ifrp,CVIX
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_name1,_name2,_name3,_name4
      ('<b>Table ',a,'. Goodness-of-Fit Measures for Random Output Parameter ',a,a,a,a,'</b>') 
      /com,<table border=1 cellpadding=4>
      /com,<tr> <th align=left>GOODNESS-OF-FIT MEASURES <th>VALUES </tr>
      *vwrite
      ('<tr><td align=left> Error Sum of Squares </td>')
      *vwrite,_sse
      ('<td align=left>',E15.7,'</td></tr>')
      *vwrite
      ('<tr><td align=left> Adjusted Error Sum of Squares </td>')
      *vwrite,_sseadj
      ('<td align=left>',E15.7,'</td></tr>')
      !
      ! coefficient of determination
      ! ----------------------------
      *vwrite
      ('<tr><td align=left> Coefficient of Determination (R-Squared) </td>')
      *if,_r2,lt,0.9,then
        *vwrite,_r2
        ('<td align=left>',E15.7,'  <font color=red>(FAIL)</font> </td></tr>')
        /com
      *else
        *if,_r2,lt,0.95,then
          *vwrite,_r2
          ('<td align=left>',E15.7,' (OK)</td></tr>')
        *else
          *vwrite,_r2
          ('<td align=left>',E15.7,' <font color=green>(VERY GOOD)</font></td></tr>')
        *endif
      *endif
      !
      ! adjusted coefficient of determination
      ! -------------------------------------
      *vwrite
      ('<tr><td align=left> Adjusted Coefficient of Determination (R-Squared) </td>')
      *if,_r2adj,lt,0.9,then
        *vwrite,_r2adj
        ('<td align=left>',E15.7,' <font color=red>(FAIL)</font></td></tr>')
      *else
        *if,_r2adj,lt,0.95,then
          *vwrite,_r2adj
          ('<td align=left>',E15.7,' (OK)</td></tr>')
        *else
          *vwrite,_r2adj
          ('<td align=left>',E15.7,' <font color=green>(VERY GOOD)</font></td></tr>')
        *endif
      *endif
      !
      ! maximum absolute residual
      ! -------------------------
      *vwrite
      ('<tr><td align=left> Maximum Absolute Residual </td>')
      *vwrite,_rsabs
      ('<td align=left>',E15.7,'</td></tr>')
      !
      ! maximum relative residual
      ! -------------------------
      *vwrite
      ('<tr><td align=left> Maximum Relative Residual </td>')
      *if,_rsrel,gt,0.005,then
        *vwrite,_rsrel
        ('<td align=left>',E15.7,' <font color=red>(FAIL)</font></td></tr>')
      *else
        *if,_rsrel,gt,0.001,then
          *vwrite,_rsrel
          ('<td align=left>',E15.7,' (OK)</td></tr>')
        *else
          *vwrite,_rsrel
          ('<td align=left>',E15.7,' <font color=green>(VERY GOOD)</font></td></tr>')
        *endif
      *endif
      !
      ! constant variance
      ! -----------------
      *if,_cvmidx,gt,0,then
	  *get,_nRv,PDS,,NTRV
        *if,_cvmidx,le,_nRv,then
          ! get input variable name
          *get,_name11,PDS,,VNAM,_cvmidx,STAR,1
          *get,_name12,PDS,,VNAM,_cvmidx,STAR,9
          *get,_name13,PDS,,VNAM,_cvmidx,STAR,17
          *get,_name14,PDS,,VNAM,_cvmidx,STAR,25
          *vwrite
          ('<tr><td align=left> Maximum t-statistic of constant variance test</td>')
          *vwrite,_cvstat,_name11,_name12,_name13,_name14
          ('<td align=left>',E15.7,' grouped by ',a,a,a,a,'</td></tr>')
	    _name11=
	    _name12=
	    _name13=
	    _name14=
        *elseif,_cvmidx,eq,_nRv+1,then
          *vwrite
          ('<tr><td align=left> Maximum t-statistic of constant variance test</td>')
          *vwrite,_cvstat,_name1,_name2,_name3,_name4
          ('<td align=left>',E15.7,' grouped by ',a,a,a,a,'</td></tr>')
        *endif
        _nRv=
        *vwrite
        ('<tr><td align=left> Probability of constant variance test</td>')
        *if,_cvprob,lt,0.01,then
          *vwrite,_cvprob*100.0
          ('<td align=left>',F8.4,'% <font color=red>(FAIL)</font></td></tr>')
        *else
          *if,_cvprob,lt,0.10,then
            *vwrite,_cvprob*100.0
            ('<td align=left>',F8.4,'% (OK)</td></tr>')
          *else
            *vwrite,_cvprob*100.0
            ('<td align=left>',F8.4,'% <font color=green>(VERY GOOD)</font></td></tr>')
          *endif
        *endif
      *endif
      /com,</table>
    *enddo
    _sse=
    _sseadj=
    _r2=
    _r2adj=
    _rsabs=
    _rsrel=
    _cvstat=
    _cvprob=
    _cvmidx=
    _name1=
    _name2=
    _name3=
    _name4=
    _ytry=
    _ytrv=
    _iterm=
    _nterm=
  *enddo
  _rlab1=
  _rlab2=
  _rlab3=
  _rlab4=
  _slab1=
  _slab2=
  _slab3=
  _slab4=
  _ifrp=
  _nfrp=
  _meth=
  _isol=
  _nsol=
  _nrss=
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#rsan"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br><br><br>
*else
  /com,<p>There are no response surface sets to report.</p>
*endif
/EOF


h_pres
!******************************************************************************
/nopr
! Start probabilistic result sections.
/com,<h2>VI. Probabilistic Analysis Results</h2>
_nsol=
_nrss=
_nres=
*get,_nsol,PDS,0,NSOL
*get,_nrss,PDS,0,NRSS
_nres=_nsol+_nrss

*if,_nres,gt,0,then
  /com,<p>
  _aa1 = chrval(%_nres%)
  *vwrite,_aa1
  ('There are ',a,' results sets based on the model and analysis specifications described above:') 
  *if,_nsol,gt,0,then
    _aa1 = chrval(%_nsol%)
    *vwrite,_aa1
    (a,' solution sets are described in the section') 
    /com,<a href="#panl">Probabilistic Analysis Summary</a> above;
  *endif
  *if,_nrss,gt,0,then
    _aa1 = chrval(%_nrss%)
    *vwrite,_aa1
    (a,' response surface sets are described in the section') 
    /com,<a href="#rsan">Regression Analysis Summary</a> above.
  *endif

  /com,<a name="cpr">
  /com,The following selected probabilistic results are reported:
  /com,</a>
  /com,<font size="+1">
  /com,<UL>
  *vwrite
  ('<LI><a href="#stat">Statistics of the Probabilistic Results</a></LI>')
  *vwrite
  ('<LI><a href="#shis">Sample History Plots</a></LI>')
  *vwrite
  ('<LI><a href="#hist">Histogram Plots</a></LI>')
  *vwrite
  ('<LI><a href="#cdf">Cumulative Distribution Function Plots</a></LI>')
  *vwrite
  ('<LI><a href="#sens">Sensitivity Plots</a></LI>')
  *vwrite
  ('<LI><a href="#cmat">Correlation Coefficient Matrix</a></LI>')
  /com,</UL>
  /com,</font>
  /com,</p>
*else
  /com,<p>
  /com,There are no probabilistic results to be reported 
  /com,in this report.
  /com,</p>
*endif
/EOF


h_stats
!******************************************************************************
/nopr
!
! Start the statistics of the results
/com,<h3>
/com,<a name="stat">VI.1 Statistics of the Probabilistic Results</a>
/com,</h3>
*if,_STAT,lt,3,then
  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss

  _nRv=
  _nRp=
  *get,_nRv,PDS,0,NTRV
  *get,_nRp,PDS,0,NTRP

  *if,_nres,gt,0,then
    !
    ! find out which statistics need to be reported
    _sti=0
    _sto=0
    *if,_STAT,eq,0,then
      _sto = 1
    *elseif,_STAT,eq,1,then
      _sti = 1
    *elseif,_STAT,eq,2,then
      _sti = 1
      _sto = 1
    *endif
    !
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done on the result set, execution
      ! of statistics will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, statistics of the input variables or output parameters 
        /com,are not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points then skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment". Hence, the statistics of the input 
        /com,variables or output parameters of 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'are ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      ! Table of input statistics
      *if,_sti,gt,0,then
        _tbl = _tbl + 1
        _nn = chrval(%_tbl%)
        *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
        ('<b>Table ',a,'. Result Set ',a,a,a,a,' - Statistics of the Random Input Variables</b>')
        /com,<table border=1 cellpadding=4>
        /com,<tr><th>Name <th>Mean <th>Standard Deviation <th>Skewness
        /com,<th>Kurtosis <th>Minimum <th>Maximum </tr>
        *do,_iRv,1,_nRv
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,VNAM,_iRv,STAR,1
          *get,_name2,PDS,,VNAM,_iRv,STAR,9
          *get,_name3,PDS,,VNAM,_iRv,STAR,17
          *get,_name4,PDS,,VNAM,_iRv,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<tr><td align=center>',a,a,a,a,'</td>')
          *get,_mean,PDS,_ires,MEAN,,RV,_iRv
          *vwrite,_mean
          ('<td align=center>',1pg11.4,'</td>')
          *get,_std,PDS,_ires,STDV,,RV,_iRv
          *vwrite,_std
          ('<td align=center>',1pg11.4,'</td>')
          *get,_skew,PDS,_ires,SKEW,,RV,_iRv
          *vwrite,_skew
          ('<td align=center>',1pg11.4,'</td>')
          *get,_kurt,PDS,_ires,KURT,,RV,_iRv
          *vwrite,_kurt
          ('<td align=center>',1pg11.4,'</td>')
          *get,_min,PDS,_ires,MIN,,RV,_iRv
          *vwrite,_min
          ('<td align=center>',1pg11.4,'</td>')
          *get,_max,PDS,_ires,MAX,,RV,_iRv
          *vwrite,_max
          ('<td align=center>',1pg11.4,'</td>')
          /com,</tr>
        *enddo
        _iRv=
        /com,</table>
        /com,<br>
      *endif
      !
      ! Table of output statistics  
      *if,_sto,gt,0,then
        _tbl = _tbl + 1
        _nn = chrval(%_tbl%)
        *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
        ('<b>Table ',a,'. Result Set ',a,a,a,a,' - Statistics of the Random Output Parameters</b>')
        /com,<table border=1 cellpadding=4>
        /com,<tr><th>Name <th>Mean <th>Standard Deviation <th>Skewness 
        /com,<th> Kurtosis <th> Minimum <th> Maximum </tr>
        *do,_iRp,1,_nRp
          !
          ! CHECK IF the output parameter in the result set
          _iout=0
          *get,_iout,PDS,_ires,XOUT,_iRp
          !
          ! If we have the output parameter in the result set
          *if,_iout,gt,0,then
            _name1=
            _name2=
            _name3=
            _name4=
            *get,_name1,PDS,,RNAM,_iRp,STAR,1
            *get,_name2,PDS,,RNAM,_iRp,STAR,9
            *get,_name3,PDS,,RNAM,_iRp,STAR,17
            *get,_name4,PDS,,RNAM,_iRp,STAR,25
            *vwrite,_name1,_name2,_name3,_name4
            ('<tr><td align=center>',a,a,a,a,'</td>')
            *get,_mean,PDS,_ires,MEAN,,RP,_iRp
            *vwrite,_mean
            ('<td align=center>',1pg11.4,'</td>')
            *get,_std,PDS,_ires,STDV,,RP,_iRp
            *vwrite,_std
            ('<td align=center>',1pg11.4,'</td>')
            *get,_skew,PDS,_ires,SKEW,,RP,_iRp
            *vwrite,_skew
            ('<td align=center>',1pg11.4,'</td>')
            *get,_kurt,PDS,_ires,KURT,,RP,_iRp
            *vwrite,_kurt
            ('<td align=center>',1pg11.4,'</td>')
            *get,_min,PDS,_ires,MIN,,RP,_iRp
            *vwrite,_min
            ('<td align=center>',1pg11.4,'</td>')
            *get,_max,PDS,_ires,MAX,,RP,_iRp
            *vwrite,_max
            ('<td align=center>',1pg11.4,'</td>')
            /com,</tr>
          *endif
        *enddo
        /com,</table>
        /com,<br>
      *endif
    *enddo
    _iRp=
    _ires=
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
    _mean=
    _std=
    _skew=
    _kurt=
    _min=
    _max=
  *endif
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br><br> 
  _nRv=
  _nRp=
  _nsol=
  _nrss=
  _nres=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
*else
  /com,The tables with the statistics of the results have been supressed 
  /com,for this report.
  /com,<br><br>
*endif
_sti=
_sto=
/EOF


h_samphist
!******************************************************************************
! plot the sample history information.
!
/nopr
/com,<h3>
/com,<a name="shis">VI.2 Sample History Plots</a>
/com,</h3>
*if,_SHIS,gt,0,then
  *if,_SHIS,le,3,then
    /com,<p>
    /com,The sample history values are a function of the number of simulation loops.
    /com,The plot is only applicable for Monte Carlo Simulation results. 
    *if,_conf,eq,0.0,then
      /com,For printing the report no confidence level has been specified.
      /com,Therefore, a default confidence level of 95.00% will be used.
      _confloc=0.95
    *else
      _confloc=_conf
    *endif
    *if,_confloc,gt,0.5,then
      /com,For the mean and standard deviation, the curves
      *vwrite,_confloc*100
      (' indicates that we are ',F6.3,'% sure that ')
      /com,the "true" mean value and 
      /com,standard deviation are in fact between the upper and lower
      /com,confidence bounds.
    *endif
    /com,</p>
    *if,_SHIS,eq,3,then
      *if,_confloc,gt,0.5,then
        /com,<p>
        /com,For the minimum value, only the upper confidence bound 
        /com,is shown. The curve means that we are
        *vwrite,_confloc*100
        (F6.3,'% sure that')
        /com,the "true" minimum value is below that curve. 
        /com,The same applies analogously for the maximum value, 
        /com,where only the lower confidence curve is shown.
        /com,</p>
      *endif
    *endif
    *if,_confloc,le,0.5,then
      /com,For printing the report a confidence level of less then 50.00% has been specified.
      /com,Therefore, the sample history plots will not show confidence bounds.
    *endif
    _confloc=
  *endif
  !
  ! get job name
  *get,_jn1,active,,jobname,,start,1
  *get,_jn2,active,,jobname,,start,9
  *get,_jn3,active,,jobname,,start,17
  *get,_jn4,active,,jobname,,start,25

  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss
  *get,_nRp,PDS,0,NTRP

  *do,_ires,1,_nres
    !
    ! find out if we plot the individual SHIS types
    _shmean=0
    _shstdv=0
    _shsamp=0
    _shmin =0
    _shmax =0
    *if,_ires,le,_nsol,then
      _meth=
      *get,_meth,PDS,_ires,METH
      *if,_meth,eq,'MCS',then
        _shmean=1
        _shstdv=1
        _shsamp=1
        _shmin =1
        _shmax =1
      *elseif,_meth,eq,'RSM',then
        _shsamp=1
      *endif
    *else
      _shsamp=1
    *endif
    !
    ! correct this filtering with the user settings for _SHIS
    *if,_SHIS,EQ,0,then
      _shsamp=0
      _shmean=0
      _shstdv=0
      _shmin =0
      _shmax =0
    *elseif,_SHIS,EQ,1,then
      _shsamp=0
      _shmin =0
      _shmax =0
    *elseif,_SHIS,EQ,2,then
      _shmin =0
      _shmax =0
    *endif
    !
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
    *get,_rlab1,PDS,_ires,RLAB,,STAR,1
    *get,_rlab2,PDS,_ires,RLAB,,STAR,9
    *get,_rlab3,PDS,_ires,RLAB,,STAR,17
    *get,_rlab4,PDS,_ires,RLAB,,STAR,25
    *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
    ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
    !
    ! Check if Monte Carlo simulation is performed on each result set.
    ! If no Monte Carlo simulation is done for the result set, then
    ! sample history plots will be skipped.
    *get,_nsim,PDS,_ires,NSIM
    *if,_nsim,LE,0,THEN
      /com,<p>
      /com,No Monte Carlo simulation has been performed for
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      (' the result set ',a,a,a,a,'. ')
      /com,Therefore, sample history plots of the output parameters 
      /com,are not available.
      /com,</p>
      *CYCLE
    *endif
    !
    *do,_iRp,1,_nRp
      !
      ! CHECK IF the output parameter in the result set
      _iout=0
      *get,_iout,PDS,_ires,XOUT,_iRp
      !
      ! If we have the output parameter in the result set
      *if,_iout,gt,0,then
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,RNAM,_iRp,STAR,1
        *get,_name2,PDS,,RNAM,_iRp,STAR,9
        *get,_name3,PDS,,RNAM,_iRp,STAR,17
        *get,_name4,PDS,,RNAM,_iRp,STAR,25
        !
        ! History plot with sample values
        *if,_shsamp,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Sampled Values for Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdshis,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,SAMP
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
          /com,<br>
        *endif
        !
        ! History plot with mean values
        *if,_shmean,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Mean Value History for Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdshis,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,MEAN,_conf
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        /com,<br>
        *endif
        !
        ! History plot with standard deviations
        *if,_shstdv,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Standard Deviation History for Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdshis,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,STDV,_conf
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        /com,<br>
        *endif
        !
        ! History plot with minimum values
        *if,_shmin,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Minimum Value History for Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdshis,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,MIN,_conf
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
          /com,<br>
        *endif
        !
        ! History plot with maximum values
        *if,_shmax,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Maximum Value History for Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdshis,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,MAX,_conf
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
          /com,<br>
        *endif
      *endif
    *enddo
    _iRp=
  *enddo
  _rlab1=
  _rlab2=
  _rlab3=
  _rlab4=
  _ires=
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br><br>
  _nsol=
  _nrss=
  _nres=
  _nRp=
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
*else
  /com,<p>
  /com,Plots of the sample history have been suppressed
  /com,for this report.
  /com,</p>
*endif
_shsamp=
_shmean=
_shstdv=
_shmin=
_shmax=
/EOF


h_histplot
!******************************************************************************
/nopr
/com,<h3>
/com,<a name="hist">VI.3 Histogram Plots</a>
/com,</h3>
*if,_HIST,le,2,then
  /com,<p>
  /com,ANSYS PDS calculates an appropriate number of classes based on the number
  /com,of samples. The number of classes is equal to the number of bars
  /com,shown in the histogram. The range between the smallest 
  /com,and largest sample value has been divided into classes of equal width. 
  /com,A histogram is derived by counting the number of hits in the
  /com,individual classes and dividing this number by the total number of samples.
  /com,Hence, a histogram represents the relative frequencies of the
  /com,random quantity it is plotted for.
  /com,</p>
  !
  ! get job name
  *get,_jn1,active,,jobname,,start,1
  *get,_jn2,active,,jobname,,start,9
  *get,_jn3,active,,jobname,,start,17
  *get,_jn4,active,,jobname,,start,25

  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss
  _nRv=
  _nRp=
  *get,_nRv,PDS,0,NTRV
  *get,_nRp,PDS,0,NTRP
  !
  ! find out which histogram plots we want
  _histi = 0
  _histo = 0
  *if,_HIST,eq,0,then
    _histo = 1
  *elseif,_HIST,eq,1,then
    _histi = 1
  *elseif,_HIST,eq,2,then
    _histi = 1
    _histo = 1
  *endif
  !
  ! Histograms of input variables
  *if,_histi,eq,1,then
    /com,<h4> HISTOGRAMS OF INPUT VARIABLES </h4>
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! plotting of histograms will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, histogram plots of the random input variables 
        /com,are not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points the skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, histogram plots of the random input variables for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'are ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      *do,_iRv,1,_nRv
        _fig = _fig + 1
        _work1=chrval(_fig)
        *if,_fig,ge,1000,then
          *vwrite,_work1
          ('<a name="figure',a4,'">')
        *elseif,_fig,ge,100,then
          *vwrite,_work1
          ('<a name="figure',a3,'">')
        *elseif,_fig,ge,10,then
          *vwrite,_work1
          ('<a name="figure',a2,'">')
        *else
          *vwrite,_work1
          ('<a name="figure',a1,'">')
        *endif
        /com,</a>
        /com,<p>
        /com,<table border=1 cellpadding=4>
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv,STAR,1
        *get,_name2,PDS,,VNAM,_iRv,STAR,9
        *get,_name3,PDS,,VNAM,_iRv,STAR,17
        *get,_name4,PDS,,VNAM,_iRv,STAR,25
        *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
        ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Histogram of Input Variable ',a,a,a,a,'</th></tr>')
        /com,<tr><td align=center>
        !
        ! issue histogram plot
        pdhist,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%
        *use,h_imgcap
        /com,</td></tr>
        /com,</table>
      *enddo
      _iRv=
    *enddo
    _ires=
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
  *endif
  !
  ! Histograms of output parameters
  *if,_histo,eq,1,then
    /com,<br>
    /com,<h4> HISTOGRAMS OF OUTPUT PARAMETERS </h4>
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! plotting of histograms will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, histograms of the random output parameters 
        /com,are not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points then skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, histogram plots of the random output parameters for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'are ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      *do,_iRp,1,_nRp
        !
        ! CHECK IF the output parameter in the result set
        _iout=0
        *get,_iout,PDS,_ires,XOUT,_iRp
        !
        !If we have the output parameter in the result set
        *if,_iout,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp,STAR,1
          *get,_name2,PDS,,RNAM,_iRp,STAR,9
          *get,_name3,PDS,,RNAM,_iRp,STAR,17
          *get,_name4,PDS,,RNAM,_iRp,STAR,25
          
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          
          /com,</a>
          /com,<p>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - Histogram of Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>

          !issue histogram plot
          pdhist,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        *endif
      *enddo
      _iRp=
    *enddo
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
    _ires=
  *endif
  _histi =
  _histo =
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br><br>
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _nRv=
  _nRp=
  _nsol=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
*else
  /com,<p>
  /com,Histogram plots have been supressed for this report.
  /com,</p>
*endif
_histi=
_histo=
/EOF


h_cdfplot
!******************************************************************************
/nopr
!
! plot the cumulative distribution function and form jpeg files.
! when jpegs are finished, copy to report directory.
!
/com,<h3>
/com,<a name="cdf">VI.4 Cumulative Distribution Function Plots</a>
/com,</h3>

*if,_CDF,le,2,then
  /com,<p>
  /com,The cumulative distribution curve is plotted with either a total number
  /com,of 100 points or using the sample size as the number of points, whichever
  /com,is lower. If the sample size is less than 100, all samples are 
  /com,represented in the plot. If the sample size is larger than 100, 
  /com,the probabilistic design tool classifies the sample into 100 
  /com,classes of appropriate size.
  *if,_conf,eq,0.0,then
    /com,For printing the report no confidence level has been specified.
    /com,Therefore, a default confidence level of 95.00% will be used.
    _confloc=0.95
  *else
    _confloc=_conf
  *endif
  *if,_confloc,gt,0.5,then
    /com,For Monte Carlo simulation methods, a confidence 
    *vwrite,_confloc*100
    ('level of ',F6.3,'% is used to plot confidence bounds around the')
    /com,cumulative distribution function. For response surface methods, 
    /com,the accuracy of the results is determined by the goodness of the response
    /com,surface fit and not by the confidence level. 
    /com,Therefore, the curves for lower and upper confidence 
    /com,bounds are not plotted for response surface method results.
  *else
    /com,For printing the report, a confidence level of less then 50.00% has been specified.
    /com,Therefore, the CDF plots will not show confidence bounds.
  *endif
  _confloc=
  /com,</p>
  !
  ! get job name
  *get,_jn1,active,,jobname,,start,1
  *get,_jn2,active,,jobname,,start,9
  *get,_jn3,active,,jobname,,start,17
  *get,_jn4,active,,jobname,,start,25
  !
  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss
  _nRv=
  _nRp=
  *get,_nRv,PDS,0,NTRV
  *get,_nRp,PDS,0,NTRP
  !
  ! find out which CDF plot we want
  _cdfi = 0
  _cdfo = 0
  *if,_CDF,eq,0,then
    _cdfo = 1
  *elseif,_CDF,eq,1,then
    _cdfi = 1
  *elseif,_CDF,eq,2,then
    _cdfi = 1
    _cdfo = 1
  *endif
  !
  ! CDF of random input variables
  *if,_cdfi,eq,1,then
  /com,<br>
  /com,<h4> CUMULATIVE DENSITY FUNCTIONS OF INPUT VARIABLES </h4>
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! plotting of cumulative density functions will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, of cumulative distribution function plots 
        /com,the random input variables are not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points then skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, cumulative distribution function plots 
        /com,of the random input variables for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'are ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      *do,_iRv,1,_nRv,
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv,STAR,1
        *get,_name2,PDS,,VNAM,_iRv,STAR,9
        *get,_name3,PDS,,VNAM,_iRv,STAR,17
        *get,_name4,PDS,,VNAM,_iRv,STAR,25

        _fig = _fig + 1
        _work1=chrval(_fig)
        *if,_fig,ge,1000,then
          *vwrite,_work1
          ('<a name="figure',a4,'">')
        *elseif,_fig,ge,100,then
          *vwrite,_work1
          ('<a name="figure',a3,'">')
        *elseif,_fig,ge,10,then
          *vwrite,_work1
          ('<a name="figure',a2,'">')
        *else
          *vwrite,_work1
          ('<a name="figure',a1,'">')
        *endif
        /com,</a>
        /com,<p>
        /com,<table border=1 cellpadding=4>
        *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
        ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - CDF of Input Variable ',a,a,a,a,'</th></tr>')
        /com,<tr><td align=center>
        pdcdf,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,GAUS,_conf
        *use,h_imgcap
        /com,</td></tr>
        /com,</table>
      *enddo
    *enddo
    _iRv=
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
  *endif
  !
  ! CDF of random output parameters
  *if,_cdfo,eq,1,then
  /com,<br>
  /com,<h4> CUMULATIVE DENSITY FUNCTIONS OF RANDOM OUTPUT PARAMETERS </h4>
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! plotting of cumulative distribution function plots will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, cumulative distribution function plots of
        /com,the random output parameters are not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points the skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, cumulative distribution function plots 
        /com,of the random output parameters for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'are ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      *do,_iRp,1,_nRp
        !
        ! CHECK IF the output parameter in the result set
        _iout=0
        *get,_iout,PDS,_ires,XOUT,_iRp
        !
        ! If we have the output parameter in the result set
        *if,_iout,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp,STAR,1
          *get,_name2,PDS,,RNAM,_iRp,STAR,9
          *get,_name3,PDS,,RNAM,_iRp,STAR,17
          *get,_name4,PDS,,RNAM,_iRp,STAR,25
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<p>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4,_name1,_name2,_name3,_name4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a,' - CDF of Output Parameter ',a,a,a,a,'</th></tr>')
          /com,<tr><td align=center>
          pdcdf,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,GAUS,_conf
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        *endif
      *enddo
    *enddo
    _rlab1=
    _rlab2=
    _rlab3=
    _rlab4=
    _ires=
    _iRp=
  *endif
  _cdfi =
  _cdfo =
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a>
  /com,</td></tr>
  /com,</table> 
  /com,<br><br> 
  _nRv=
  _nRp=
  _nrss=
  _nres=
  _nsol=
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
*else
  /com,<p>
  /com,Plots of the cumulative distribution functions have been suppressed
  /com,for this report.
  /com,</p>
*endif
_cdfi=
_cdfo=
/EOF


h_sensplot
!******************************************************************************
! plot the sensitivity information and form jpeg files.
! when jpegs are finished, copy to report directory.
!
/nopr
/com,<h3>
/com,<a name="sens">VI.5 Sensitivity Plots</a>
/com,</h3>
*if,_SENS,le,2,then
  /com,<p>
  /com,The evaluation of the probabilistic sensitivities is based on the 
  /com,correlation coefficients between all random input variables and a particular
  /com,random output parameter. Either Spearman rank order correlation 
  /com,coefficients or Pearson linear correlation coefficients may be used
  /com,based on user's specifications.
  /com,To plot the sensitivities of a certain random output parameter,
  /com,the random input variables are separated into two groups: those 
  /com,that are significant (important) and those that are insignificant 
  /com,(not important) for the random output parameter. 
  /com,The sensitivity 
  /com,plots will only include the significant random input variables.
  /com,</p>
  !
  ! get job name
  *get,_jn1,active,,jobname,,start,1
  *get,_jn2,active,,jobname,,start,9
  *get,_jn3,active,,jobname,,start,17
  *get,_jn4,active,,jobname,,start,25
  !
  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss
  _nRp=
  *get,_nRp,PDS,0,NTRP
  !
  ! find out which Sensitivity plots we want
  _senslin = 0
  _sensrnk = 0
  *if,_SENS,eq,0,then
    _sensrnk = 1
  *elseif,_SENS,eq,1,then
    _senslin = 1
  *elseif,_SENS,eq,2,then
    _senslin = 1
    _sensrnk = 1
  *endif

  *do,_ires,1,_nres
    !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
    !
    ! Check if Monte Carlo simulation is performed on each result set.
    ! If no Monte Carlo simulation is done for the result set, then
    ! plotting of sensitivity plots will be skipped.
    *get,_nsim,PDS,_ires,NSIM
    *if,_nsim,LE,0,THEN
      /com,<p>
      /com,No Monte Carlo simulation has been performed for
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      (' the result set ',a,a,a,a,'. ')
      /com,Therefore, sensitivity plots of the output parameters 
      /com,are not available.
      /com,</p>
      *CYCLE
    *endif
    !
    ! find out if the results set is based on Monte Carlo
    _meth=
    *get,_meth,PDS,_ires,METH
    !
    ! if we have RSM based sample points the skip the 
    ! results set and go to the next one
    *IF,_meth,eq,'RSM',THEN
      /com,<p>
      /com,For Response Surface Methods the values of the random input
      /com,variables are chosen deterministically according to a "Design
      /com,of Experiment".
      /com,Therefore, sensitivity plots 
      /com,of the random output parameters for 
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      (' the result set ',a,a,a,a,'are ')
      /com,not available.
      /com,</p>
      *CYCLE
    *ENDIF
    !
    ! if it is not RSM then continue
    !
    *do,_iRp,1,_nRp
      !
      ! CHECK IF the output parameter in the result set
      _iout=0
      *get,_iout,PDS,_ires,XOUT,_iRp
      !
      ! If we have the output parameter in the result set
      *if,_iout,gt,0,then
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,RNAM,_iRp,STAR,1
        *get,_name2,PDS,,RNAM,_iRp,STAR,9
        *get,_name3,PDS,,RNAM,_iRp,STAR,17
        *get,_name4,PDS,,RNAM,_iRp,STAR,25
        !
        ! LINEAR SENSITIVITIES
        *if,_senslin,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<p>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a)
          *vwrite,_name1,_name2,_name3,_name4
          (' - Sensitivity Plot for ',a,a,a,a)
          /com,</th></tr>
          /com,<tr><td align=center>
          pdsens,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,,LIN
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        *endif
        !
        ! RANK-ORDER SENSITIVITIES
        *if,_sensrnk,eq,1,then
          _fig = _fig + 1
          _work1=chrval(_fig)
          *if,_fig,ge,1000,then
            *vwrite,_work1
            ('<a name="figure',a4,'">')
          *elseif,_fig,ge,100,then
            *vwrite,_work1
            ('<a name="figure',a3,'">')
          *elseif,_fig,ge,10,then
            *vwrite,_work1
            ('<a name="figure',a2,'">')
          *else
            *vwrite,_work1
            ('<a name="figure',a1,'">')
          *endif
          /com,</a>
          /com,<p>
          /com,<table border=1 cellpadding=4>
          *vwrite,_fig,_rlab1,_rlab2,_rlab3,_rlab4
          ('<tr><th> Figure',f6.0,' Result Set ',a,a,a,a)
          *vwrite,_name1,_name2,_name3,_name4
          (' - Sensitivity Plot for ',a,a,a,a)
          /com,</th></tr>
          /com,<tr><td align=center>
          pdsens,%_rlab1%%_rlab2%%_rlab3%%_rlab4%,%_name1%%_name2%%_name3%%_name4%,,RANK
          *use,h_imgcap
          /com,</td></tr>
          /com,</table>
        *endif
      *endif
    *enddo
    _iRp=
  *enddo
  _senslin =
  _sensrnk =
  _rlab1=
  _rlab2=
  _rlab3=
  _rlab4=
  _ires=
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table> 
  /com,<br><br> 
  _nsol=
  _nrss=
  _nres=
  _nRp=
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
*else
  /com,<p>
  /com,Sensitivity plots have been suppressed
  /com,for this report.
  /com,</p>
*endif
_senslin=
_sensrnk=
/EOF


h_cmat
!******************************************************************************
/nopr
! display a table of correlation coefficicents
!
/com,<h3>
/com,<a name="cmat">VI.6 Correlation Coefficient Matrix</a>
/com,</h3>
*if,_CMAT,le,6,then
  /com,<p>
  /com,The tables in this section show the statistical interdependence between 
  /com,the parameters 
  /com,involved, including input and output variables. Spearman rank order 
  /com,correlation coefficients and Pearson linear correlation 
  /com,coefficients are shown. For the values closer 
  /com,to zero, the two variables are weakly correlated. For the values closer
  /com,to 1 or -1, the two variables are highly correlated either in 
  /com,positive or negative sense, respectively.
  /com,</p>
  _nsol=
  _nrss=
  _nres=
  *get,_nsol,PDS,0,NSOL
  *get,_nrss,PDS,0,NRSS
  _nres=_nsol+_nrss
  _nRv=
  _nRp=
  *get,_nRv,PDS,0,NTRV
  *get,_nRp,PDS,0,NTRP
  _flag=
  ! fint out which Correlation coefficient matrices we want
  _cmii = 0
  _cmio = 0
  _cmoo = 0
  *if,_CMAT,eq,0,then
    _cmoo = 1
  *elseif,_CMAT,eq,1,then
    _cmio = 1
  *elseif,_CMAT,eq,2,then
    _cmii = 1
  *elseif,_CMAT,eq,3,then
    _cmoo = 1
    _cmio = 1
  *elseif,_CMAT,eq,4,then
    _cmii = 1
    _cmoo = 1
  *elseif,_CMAT,eq,5,then
    _cmio = 1
    _cmii = 1
  *elseif,_CMAT,eq,6,then
    _cmii = 1
    _cmio = 1
    _cmoo = 1
  *endif
  !
  ! input/input table requested
  ! ----------------------------
  *if,_cmii,eq,1,then
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! printing of correlation coefficient matrices will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,input variables versus random input 
        /com,variables is not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points the skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,input variables versus random input 
        /com,variables for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'is ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      ! Linear input/input matrix 
      ! -------------------------
      /com,<br>
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Linear Correlation Coefficients Between Input Variables </b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Inp\Inp</th>
      *do,_iRv1,1,_nRv
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv1,STAR,1
        *get,_name2,PDS,,VNAM,_iRv1,STAR,9
        *get,_name3,PDS,,VNAM,_iRv1,STAR,17
        *get,_name4,PDS,,VNAM,_iRv1,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
      *enddo
      /com,</tr>
      *do,_iRv1,1,_nRv
        /com,<tr>
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv1,STAR,1
        *get,_name2,PDS,,VNAM,_iRv1,STAR,9
        *get,_name3,PDS,,VNAM,_iRv1,STAR,17
        *get,_name4,PDS,,VNAM,_iRv1,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
        *do,_iRv2,1,_nRv
          _corcoef=
          *get,_corcoef,PDS,_ires,CLIN,_iRv1,II,_iRv2
          *if,abs(_corcoef),lt,0.001,then
            _corcoef = 'small'
            *vwrite,_corcoef
            ('<td align=center>',a,'</td>')
            _flag = 1
          *else
            *vwrite,_corcoef
            ('<td align=center>',f6.3,'</td>')
          *endif
        *enddo
      /com,</tr>
      *enddo
      /com,</table>
      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif
      !
      ! Spearman-Rank-Order input/input matrix
      ! --------------------------------------
      /com,<br>
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Spearman Rank Order Correlation Coefficients 
      /com,Between Input Variables</b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Inp\Inp</th>
      *do,_iRv1,1,_nRv
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv1,STAR,1
        *get,_name2,PDS,,VNAM,_iRv1,STAR,9
        *get,_name3,PDS,,VNAM,_iRv1,STAR,17
        *get,_name4,PDS,,VNAM,_iRv1,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
      *enddo
      /com,</tr>
      *do,_iRv1,1,_nRv
      /com,<tr>
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv1,STAR,1
        *get,_name2,PDS,,VNAM,_iRv1,STAR,9
        *get,_name3,PDS,,VNAM,_iRv1,STAR,17
        *get,_name4,PDS,,VNAM,_iRv1,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
        *do,_iRv2,1,_nRv
          _corcoef=
          *get,_corcoef,PDS,_ires,CRNK,_iRv1,II,_iRv2
          *if,abs(_corcoef),lt,0.001,then
            _corcoef = 'small'
            *vwrite,_corcoef
            ('<td align=center>',a,'</td>')
            _flag = 1
          *else
            *vwrite,_corcoef
            ('<td align=center>',f6.3,'</td>')
          *endif
        *enddo
      /com,</tr>
      *enddo
      /com,</table> 
      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif 
    *enddo
    _iRv1=
    _iRv2=
    _ires=
  *endif
  !
  ! input/output matrix requested
  ! ----------------------------
  *if,_cmio,eq,1,then
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done for the result set, then
      ! printing of correlation coefficient matrices will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,output parameters versus the random input 
        /com,variables is not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points then skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,output parameters versus the random input 
        /com,variables for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'is ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      ! Linear input/output matrix 
      ! --------------------------
      /com,<br>
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Linear Correlation Coefficients Between Input And Output Variables</b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Out\Inp</th>
      *do,_iRv,1,_nRv
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv,STAR,1
        *get,_name2,PDS,,VNAM,_iRv,STAR,9
        *get,_name3,PDS,,VNAM,_iRv,STAR,17
        *get,_name4,PDS,,VNAM,_iRv,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
      *enddo
      /com,</tr>
      *do,_iRp,1,_nRp
      /com,<tr>
        _iout2=0
!
!       CHECK IF the output parameter in the result set
        *get,_iout2,PDS,_ires,XOUT,_iRp
!
!       If we have the output parameter in the result set
        *if,_iout2,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp,STAR,1
          *get,_name2,PDS,,RNAM,_iRp,STAR,9
          *get,_name3,PDS,,RNAM,_iRp,STAR,17
          *get,_name4,PDS,,RNAM,_iRp,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          _flag=
          *do,_iRv,1,_nRv
            _corcoef=
            *get,_corcoef,PDS,_ires,CLIN,_iRv,IO,_iRp
            *if,abs(_corcoef),lt,0.001,then
              _corcoef = 'small'
              *vwrite,_corcoef
              ('<td align=center>',a,'</td>')
              _flag=1
            *else
              *vwrite,_corcoef
              ('<td align=center>',f6.3,'</td>')
            *endif
          *enddo
        *endif
      /com,</tr>
      *enddo
      /com,</table>

      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif
      !
      ! Spearman-Rank-Order input/output matrix
      ! ---------------------------------------
      /com,<br>
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Spearman Rank Order Correlation Coefficients 
      /com,Between Input And Output Variables</b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Out\Inp</th>
      *do,_iRv,1,_nRv
        _name1=
        _name2=
        _name3=
        _name4=
        *get,_name1,PDS,,VNAM,_iRv,STAR,1
        *get,_name2,PDS,,VNAM,_iRv,STAR,9
        *get,_name3,PDS,,VNAM,_iRv,STAR,17
        *get,_name4,PDS,,VNAM,_iRv,STAR,25
        *vwrite,_name1,_name2,_name3,_name4
        ('<td align=center>',a,a,a,a,'</td>')
      *enddo
      /com,</tr>
      *do,_iRp,1,_nRp
      /com,<tr>
        _iout2=0
        !
        ! CHECK IF the output parameter in the result set
        *get,_iout2,PDS,_ires,XOUT,_iRp
        !
        ! If we have the output parameter in the result set
        *if,_iout2,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp,STAR,1
          *get,_name2,PDS,,RNAM,_iRp,STAR,9
          *get,_name3,PDS,,RNAM,_iRp,STAR,17
          *get,_name4,PDS,,RNAM,_iRp,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          _flag=
          *do,_iRv,1,_nRv
            _corcoef=
            *get,_corcoef,PDS,_ires,CRNK,_iRv,IO,_iRp
            *if,abs(_corcoef),lt,0.001,then
              _corcoef = 'small'
              *vwrite,_corcoef
              ('<td align=center>',a,'</td>')
              _flag=1
            *else
              *vwrite,_corcoef
              ('<td align=center>',f6.3,'</td>')
            *endif
          *enddo
        *endif
      /com,</tr>
      *enddo
      /com,</table>
      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif 
    *enddo
    _iRv=
    _iRp=
    _ires=
  *endif
  !
  ! output/output matrix requested
  ! ------------------------------
  *if,_cmoo,eq,1,then
    *do,_ires,1,_nres
      !
      _rlab1=
      _rlab2=
      _rlab3=
      _rlab4=
      *get,_rlab1,PDS,_ires,RLAB,,STAR,1
      *get,_rlab2,PDS,_ires,RLAB,,STAR,9
      *get,_rlab3,PDS,_ires,RLAB,,STAR,17
      *get,_rlab4,PDS,_ires,RLAB,,STAR,25
      *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
      ('<h4 style="text-decoration:underline"> Result Set ',a,a,a,a,' </h4>')
      !
      ! Check if Monte Carlo simulation is performed on each result set.
      ! If no Monte Carlo simulation is done on the result set, then
      ! printing of correlation coefficient matrices will be skipped.
      *get,_nsim,PDS,_ires,NSIM
      *if,_nsim,LE,0,THEN
        /com,<p>
        /com,No Monte Carlo simulation has been performed for
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'. ')
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,output parameters versus random output 
        /com,parameters is not available.
        /com,</p>
        *CYCLE
      *endif
      !
      ! find out if the results set is based on Monte Carlo
      _meth=
      *get,_meth,PDS,_ires,METH
      !
      ! if we have RSM based sample points then skip the 
      ! results set and go to the next one
      *IF,_meth,eq,'RSM',THEN
        /com,<p>
        /com,For Response Surface Methods the values of the random input
        /com,variables are chosen deterministically according to a "Design
        /com,of Experiment".
        /com,Therefore, a correlation coefficient matrix of the random 
        /com,output parameters versus random output 
        /com,parameters for 
        *vwrite,_rlab1,_rlab2,_rlab3,_rlab4
        (' the result set ',a,a,a,a,'is ')
        /com,not available.
        /com,</p>
        *CYCLE
      *ENDIF
      !
      ! if it is not RSM then continue
      !
      ! Linear output/output matrix 
      ! ---------------------------
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Linear Correlation Coefficients Between Output Parameters </b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Out/Out</th>
      *do,_iRp1,1,_nRp
        _iout1=0
        !
        ! CHECK IF the output parameter in the result set
        *get,_iout1,PDS,_ires,XOUT,_iRp1
        !
        ! If we have the output parameter in the result set
        *if,_iout1,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp1,STAR,1
          *get,_name2,PDS,,RNAM,_iRp1,STAR,9
          *get,_name3,PDS,,RNAM,_iRp1,STAR,17
          *get,_name4,PDS,,RNAM,_iRp1,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
        *endif
      *enddo
      /com,</tr>
      *do,_iRp1,1,_nRp
      /com,<tr>
        _iout1=0
        !
        ! CHECK IF the output parameter in the result set
        *get,_iout1,PDS,_ires,XOUT,_iRp1
        !
        ! If we have the output parameter in the result set
        *if,_iout1,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp1,STAR,1
          *get,_name2,PDS,,RNAM,_iRp1,STAR,9
          *get,_name3,PDS,,RNAM,_iRp1,STAR,17
          *get,_name4,PDS,,RNAM,_iRp1,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          _flag=

          *do,_iRp2,1,_nRp
            _iout2=0
            !
            ! CHECK IF the output parameter in the result set
            *get,_iout2,PDS,_ires,XOUT,_iRp2
            !
            ! If we have the output parameter in the result set
            *if,_iout2,gt,0,then
              _corcoef=
              *get,_corcoef,PDS,_ires,CLIN,_iRp1,OO,_iRp2
              *if,abs(_corcoef),lt,0.001,then
                _corcoef = 'small'
                *vwrite,_corcoef
                ('<td align=center>',a,'</td>')
                _flag=1
              *else
                *vwrite,_corcoef
                ('<td align=center>',f6.3,'</td>')
              *endif
            *endif
          *enddo
        *endif
      /com,</tr>
      *enddo
      /com,</table>
      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif
      !
      ! Spearman-Rank-Order output/output matrix
      ! ----------------------------------------
      /com,<br>
      _tbl = _tbl + 1
      _nn = chrval(%_tbl%)
      *vwrite,_nn,_rlab1,_rlab2,_rlab3,_rlab4
      ('<b>Table ',a,'. Result Set ',a,a,a,a,' - ')
      /com,Spearman Rank Order Correlation Coefficients Between Output Parameters</b><br>
      /com,<table border=1 cellpadding=4>
      /com,<tr><th>Out/Out</th>
      *do,_iRp1,1,_nRp
        _iout1=0
        !
        ! CHECK IF the output parameter in the result set
        *get,_iout1,PDS,_ires,XOUT,_iRp1
        !
        ! If we have the output parameter in the result set
        *if,_iout1,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp1,STAR,1
          *get,_name2,PDS,,RNAM,_iRp1,STAR,9
          *get,_name3,PDS,,RNAM,_iRp1,STAR,17
          *get,_name4,PDS,,RNAM,_iRp1,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
        *endif
      *enddo
      /com,</tr>
      *do,_iRp1,1,_nRp
      /com,<tr>
        _iout1=0
        !
        ! CHECK IF the output parameter in the result set
        *get,_iout1,PDS,_ires,XOUT,_iRp1
        !
        ! If we have the output parameter in the result set
        *if,_iout1,gt,0,then
          _name1=
          _name2=
          _name3=
          _name4=
          *get,_name1,PDS,,RNAM,_iRp1,STAR,1
          *get,_name2,PDS,,RNAM,_iRp1,STAR,9
          *get,_name3,PDS,,RNAM,_iRp1,STAR,17
          *get,_name4,PDS,,RNAM,_iRp1,STAR,25
          *vwrite,_name1,_name2,_name3,_name4
          ('<td align=center>',a,a,a,a,'</td>')
          _flag=

          *do,_iRp2,1,_nRp
            _iout2=0
            !
            ! CHECK IF the output parameter in the result set
            *get,_iout2,PDS,_ires,XOUT,_iRp2
            !
            ! If we have the output parameter in the result set
            *if,_iout2,gt,0,then
              _corcoef=
              *get,_corcoef,PDS,_ires,CRNK,_iRp1,OO,_iRp2
              *if,abs(_corcoef),lt,0.001,then
                _corcoef = 'small'
                *vwrite,_corcoef
                ('<td align=center>',a,'</td>')
                _flag=1
              *else
                *vwrite,_corcoef
                ('<td align=center>',f6.3,'</td>')
              *endif
            *endif
          *enddo
        *endif
        /com,</tr>
      *enddo
      /com,</table>
      _iRp1=
      _iRp2=
      *if,_flag,gt,0,then
        /com,<p>
        /com,Note: "small" means 
        /com,the absolute value is less than 0.001!
        /com,</p>
        _flag = 0
      *endif
    *enddo
    _ires=
  *endif
  /com,<table cellpadding=10 align=right><tr><th>
  /com,<td><a href="#cpr">Go to list</a>
  /com,<td><a href="#pres"> Back to section</a> 
  /com,<td><a href="#top"> Back to top</a></table>
  /com,<br><br> 
  _flag =
  _cmii =
  _cmio =
  _cmoo =
  _nsol=
  _nrss=
  _nres=
  _nRp=
  _jn1=
  _jn2=
  _jn3=
  _jn4=
  _work1=
  _name1=
  _name2=
  _name3=
  _name4=
  _corcoef=
*else
  /com,<p>
  /com,The tables for the correlation coefficients have been suppressed
  /com,for this report.
  /com,</p>
*endif
_cmii=
_cmio=
_cmoo=
/EOF


h_imgcap
    /com,<script>
    /com,<!--
    ~eui,'ans_sendcommand /com,image_[ans_getvalue PARM,_FIG,VALUE]()\;'
    /com,//-->
    /com,</script>
    ~eui,'ansys::report::imagecapture ""'
/EOF


h_analcap
    ~eui,'set analFile [ans_getvalue PDS,0,ANLN,,START,1]'
    ~eui,'append analFile [ans_getvalue PDS,0,ANLN,,START,9]'
    ~eui,'append analFile [ans_getvalue PDS,0,ANLN,,START,17]'
    ~eui,'append analFile [ans_getvalue PDS,0,ANLN,,START,25]'
    ~eui,'append analExt [ans_getvalue PDS,0,ANLX]'
    ~eui,'set analFile [string trim $analFile]'
    ~eui,'ansys::report::outputcapture "" ")*list,$analFile,$analExt"'
    ! Set the output back to the report file
    ~eui,'set destDIR [ansys::report::getReportInfo reportDir]'
    ~eui,'set reportName [file tail $destDIR]'
    ~eui,'ans_sendcommand /out,$reportName,html,$destDIR,append'
/EOF


h_restcap
    ~eui,'set jobname [ansys::report::getReportInfo jobname]'
    ~eui,'set soluIdx [ans_getvalue PARM,_isol,VALUE]'
    ~eui,'set soluLab [ans_getvalue PDS,$soluIdx,SLAB,,START,1]'
    ~eui,'append soluLab [ans_getvalue PDS,$soluIdx,SLAB,,START,9]'
    ~eui,'set soluLab [string trim $soluLab]'
    ~eui,'ansys::report::outputcapture "" ")*list,${jobname}_${soluLab},pdrs"'
    ! Set the output back to the report file
    ~eui,'set destDIR [ansys::report::getReportInfo reportDir]'
    ~eui,'set reportName [file tail $destDIR]'
    ~eui,'ans_sendcommand /out,$reportName,html,$destDIR,append'
/EOF

